{"version":3,"file":"static/js/json_map.5f39c31b.chunk.js","mappings":"qVAqGM,MAAgBA,UAAkBC,EAAAA,EAAxCC,WAAAA,G,oBAUCC,OAAAC,eAAA,e,gDAAwD,KAExDD,OAAAC,eAAA,oB,gDAA8C,KAC9CD,OAAAC,eAAA,uB,iDAAoC,IAEpCD,OAAAC,eAAA,kB,gDAA2D,KAC3DD,OAAAC,eAAA,qB,gDAA8D,IAiS/D,CA/RWC,SAAAA,GACTC,KAAKC,OAAOC,KAAK,WAAY,gBAC7BF,KAAKG,eAAe,gBAAiB,YACrCH,KAAKG,eAAe,oBAAqB,gBACzCH,KAAKG,eAAe,UAAW,MAE/BH,KAAKI,GAAG,WAAYC,IACnB,IAAIC,EAAWN,KAAKO,cAAcF,QAC9BC,GAAYA,GAAYD,GAC3BL,KAAKQ,KAAKC,O,IAIZC,MAAMX,WACP,CAEUY,cAAAA,GACT,MAAMN,EAAUL,KAAKY,IAAI,WACzB,IAAIN,EAAWN,KAAKO,cAAcF,QAE9BC,GAAYA,GAAYD,IAC3BL,KAAKO,cAAcF,aAAUQ,EAC7Bb,KAAKc,gBAAiB,GAGlBd,KAAKc,iBACTd,KAAKe,gBACLf,KAAKc,gBAAiB,EAExB,CAEOE,gBAAAA,GAON,GANAN,MAAMM,mBAEFhB,KAAKiB,cACRjB,KAAKW,iBAGFX,KAAKkB,QAAQ,YAAclB,KAAKkB,QAAQ,YAAclB,KAAKkB,QAAQ,WAAY,CAElFlB,KAAKW,iBAEL,MAAMQ,EAAQnB,KAAKmB,MAEbC,EAAUpB,KAAKY,IAAI,WAErBQ,IACCD,IACHA,EAAME,gBAAkB,MAEzBC,EAAAA,GAAYF,GAAUG,IACrB,MAAMC,EAAWxB,KAAKyB,gBAAgBF,GAClCC,GACHxB,KAAK0B,iBAAiBF,E,KAKpBJ,GAA6B,GAAlBA,EAAQO,SACvBL,EAAAA,GAAYtB,KAAK4B,WAAYJ,IAC5BxB,KAAK6B,mBAAmBL,EAAS,IAElCxB,KAAK4B,UAAY,IAGlB,MAAME,EAAU9B,KAAKY,IAAI,WACrBkB,IACCX,IACHA,EAAME,gBAAkB,MAEzBC,EAAAA,GAAYtB,KAAK+B,WAAYP,IAC5B,MAAMD,EAAKC,EAASZ,IAAI,MACpBW,IAA8B,GAAxBO,EAAQE,QAAQT,GACzBvB,KAAKiC,oBAAoBT,GAGzBxB,KAAKkC,sBAAsBV,E,KAKzBM,IACJR,EAAAA,GAAYtB,KAAKmC,cAAeX,IAC/BxB,KAAKkC,sBAAsBV,EAAS,IAErCxB,KAAKmC,aAAe,G,CAIvB,CAEUT,gBAAAA,CAAiBF,GAC1BxB,KAAKoC,gBAAgBZ,EAASZ,IAAI,aAClCU,EAAAA,GAAYtB,KAAK4B,UAAWJ,EAC7B,CAEUK,kBAAAA,CAAmBL,GAC5BxB,KAAKqC,aAAab,EAASZ,IAAI,YAAaZ,KAC7C,CAEUiC,mBAAAA,CAAoBT,GAC7BxB,KAAKoC,gBAAgBZ,EAASZ,IAAI,aAClCU,EAAAA,GAAYtB,KAAKmC,aAAcX,EAChC,CAEUU,qBAAAA,CAAsBV,GAC/BxB,KAAKqC,aAAab,EAASZ,IAAI,YAAaZ,KAC7C,CAEUsC,YAAAA,CAAaf,EAAYgB,EAAgCC,GAClE,GAAID,EAAU,CACb,GAAuB,GAAnBA,EAASZ,OACZ,OAAO,EAGP,IAA6B,GAAzBY,EAASP,QAAQT,GACpB,OAAO,C,CAKV,QAAIiB,GAAYA,EAASb,OAAS,IACJ,GAAzBa,EAASR,QAAQT,GAKvB,CAEUR,aAAAA,GAET,MAAMV,EAAUL,KAAKY,IAAI,WACzB,GAAIP,EAAS,CAEZ,IAAIoC,EAEgB,qBAAhBpC,EAAQqC,KACXD,EAAWpC,EAAQoC,SAEK,WAAhBpC,EAAQqC,KAChBD,EAAW,CAACpC,IAE0G,GAA9G,CAAC,QAAS,aAAc,UAAW,aAAc,kBAAmB,gBAAgB2B,QAAQ3B,EAAQqC,MAC5GD,EAAW,CAAC,CAAEE,SAAUtC,IAGxBuC,QAAQC,IAAI,4BAGb,MAAMC,EAAe9C,KAAKY,IAAI,gBAC9B,GAAI6B,EAAU,CAEb,MAAMM,EAAU/C,KAAKY,IAAI,UAAW,MAEpC,IAAK,IAAIoC,EAAI,EAAGC,EAAMR,EAASd,OAAQqB,EAAIC,EAAKD,IAAK,CACpD,IAAIE,EAAeT,EAASO,GACxBL,EAAgBO,EAAQP,SAE5B,GAAIA,EAAU,CACb,IAAID,EAAOC,EAASD,KAChBnB,EAAa2B,EAAQH,GAMzB,GAJID,GAAgBA,EAAavB,KAChC2B,EAAQC,WAAWC,KAAON,EAAavB,KAGN,GAA9BvB,KAAKqD,OAAOrB,QAAQU,GAAa,CAKpC,IAAIlB,EASA8B,EAPM,MAAN/B,IAEHC,EAAWF,EAAAA,GAAYtB,KAAK+B,WAAYwB,GAChCA,EAAM3C,IAAI,OAASW,KAMxBC,IACH8B,EAAa9B,EAASgC,aAIlBhC,EAQC8B,EAAWX,WACfW,EAAWX,SAAWA,EACtBW,EAAWG,aAAef,EAC1BlB,EAASkC,IAAI,WAAYf,GACzBnB,EAASkC,IAAI,eAAgBhB,GAC7B1C,KAAK2D,gBAAgBnC,KAZtB8B,EAAa,CAAEX,SAAUA,EAAUc,aAAcf,EAAMkB,iBAAiB,GACxEN,EAAWP,GAAWxB,EACtBvB,KAAKQ,KAAKN,KAAKoD,IAehBO,EAAAA,GAA2BX,EAAQC,WAAYG,E,IAMnD,MAAMZ,EAAO,mBACT1C,KAAK8D,OAAOC,UAAUrB,IACzB1C,KAAK8D,OAAOE,SAAStB,EAAM,CAAEA,KAAMA,EAAMuB,OAAQjE,M,CAGpD,CAOOkE,sBAAAA,CAAuBC,GAC7BnE,KAAKoE,SAASC,UAAUrE,KAAKsE,iBAC9B,CAEOC,uBAAAA,GAEP,CAKOC,UAAAA,GACN,MAAMrD,EAAQnB,KAAKmB,MACnB,GAAIA,EACH,OAAOA,EAAMP,IAAI,aAEnB,CAKO6D,OAAAA,GACN,MAAMtD,EAAQnB,KAAKmB,MACnB,GAAIA,EACH,OAAOA,EAAMuD,WAAW,UAE1B,CAEUrC,YAAAA,CAAaM,EAAegC,GACrC,GAAIhC,GAAYgC,EAAO/D,IAAI,iBAAiB,GAAO,CAClDZ,KAAK4E,YAAY1E,KAAKyC,GAEtB,MAAMxB,EAAQnB,KAAKmB,MACfA,GACHA,EAAM0D,qB,CAGT,CAEUzC,eAAAA,CAAgBO,GACzB,GAAIA,EAAU,CACbrB,EAAAA,GAActB,KAAK4E,YAAajC,GAEhC,MAAMxB,EAAQnB,KAAKmB,MACfA,GACHA,EAAM0D,qB,CAGT,CAEUC,QAAAA,GACTpE,MAAMoE,WAEN,MAAM3D,EAAQnB,KAAKmB,MACfA,GACHA,EAAMwD,OAAOI,YAAY/E,KAE3B,CAEUgF,YAAAA,GACTtE,MAAMsE,eACNhF,KAAKc,gBAAiB,EACtBd,KAAKiF,cAAc,UACpB,EA/SApF,OAAAC,eAAAJ,EAAA,a,gDAAkC,cAClCG,OAAAC,eAAAJ,EAAA,c,gDAA0CC,EAAAA,EAAOuF,WAAWC,OAAO,CAACzF,EAAU0F,c,iCCtGxE,MAAMC,EACXzF,WAAAA,GACEI,KAAKsF,UAAY,IAAIC,aAAa,IAClCvF,KAAKwF,GAAK,CACZ,CACAC,GAAAA,CAAIC,GACF,MAAMC,EAAI3F,KAAKsF,UACf,IAAItC,EAAI,EACR,IAAK,IAAI4C,EAAI,EAAGA,EAAI5F,KAAKwF,IAAMI,EAAI,GAAIA,IAAK,CAC1C,MAAMC,EAAIF,EAAEC,GACVE,EAAKJ,EAAIG,EACTE,EAAKC,KAAKC,IAAIP,GAAKM,KAAKC,IAAIJ,GAAKH,GAAKI,EAAKD,GAAKA,GAAKC,EAAKJ,GACxDK,IAAIJ,EAAE3C,KAAO+C,GACjBL,EAAII,CACN,CAGA,OAFAH,EAAE3C,GAAK0C,EACP1F,KAAKwF,GAAKxC,EAAI,EACPhD,IACT,CACAkG,OAAAA,GACE,MAAMP,EAAI3F,KAAKsF,UACf,IAAiBI,EAAGG,EAAGE,EAAnBI,EAAInG,KAAKwF,GAAcM,EAAK,EAChC,GAAIK,EAAI,EAAG,CAET,IADAL,EAAKH,IAAIQ,GACFA,EAAI,IACTT,EAAII,EACJD,EAAIF,IAAIQ,GACRL,EAAKJ,EAAIG,EACTE,EAAKF,GAAKC,EAAKJ,IACXK,KAEFI,EAAI,IAAOJ,EAAK,GAAKJ,EAAEQ,EAAI,GAAK,GAAOJ,EAAK,GAAKJ,EAAEQ,EAAI,GAAK,KAC9DN,EAAS,EAALE,EACJL,EAAII,EAAKD,EACLA,GAAKH,EAAII,IAAIA,EAAKJ,GAE1B,CACA,OAAOI,CACT,ECvCK,IAAIM,EAAU,KACVC,EAAW,MACXC,EAAKN,KAAKO,GACVC,EAASF,EAAK,EACdG,EAAYH,EAAK,EACjBI,EAAW,EAALJ,EAENK,EAAU,IAAML,EAChBM,EAAUN,EAAK,IAEfL,EAAMD,KAAKC,IACXY,EAAOb,KAAKa,KACZC,EAAQd,KAAKc,MACbC,EAAMf,KAAKe,IACXC,EAAOhB,KAAKgB,KACZC,EAAMjB,KAAKiB,IAEXC,GADQlB,KAAKmB,MACLnB,KAAKkB,OACbrE,EAAMmD,KAAKnD,IAEXuE,GADMpB,KAAKqB,IACLrB,KAAKoB,KACXE,EAAOtB,KAAKsB,MAAQ,SAAS5B,GAAK,OAAOA,EAAI,EAAI,EAAIA,EAAI,GAAK,EAAI,CAAG,EACrE6B,EAAOvB,KAAKuB,KACZC,EAAMxB,KAAKwB,IAMf,SAASC,EAAK/B,GACnB,OAAOA,EAAI,EAAIc,EAASd,GAAK,GAAKc,EAASR,KAAKyB,KAAK/B,EACvD,CAEO,SAASgC,EAAShC,GACvB,OAAQA,EAAI0B,EAAI1B,EAAI,IAAMA,CAC5B,CCnCe,SAASiC,IAAQ,CCAhC,SAASC,EAAejF,EAAUkF,GAC5BlF,GAAYmF,EAAmBC,eAAepF,EAASD,OACzDoF,EAAmBnF,EAASD,MAAMC,EAAUkF,EAEhD,CAEA,ICDIG,EACAC,EACAC,EACAC,EDFAC,EAAmB,CACrBC,QAAS,SAASC,EAAQT,GACxBD,EAAeU,EAAO3F,SAAUkF,EAClC,EACAU,kBAAmB,SAASD,EAAQT,GAElC,IADA,IAAIpF,EAAW6F,EAAO7F,SAAUO,GAAK,EAAGmD,EAAI1D,EAASd,SAC5CqB,EAAImD,GAAGyB,EAAenF,EAASO,GAAGL,SAAUkF,EACvD,GAGEC,EAAqB,CACvBU,OAAQ,SAASF,EAAQT,GACvBA,EAAOY,QACT,EACAC,MAAO,SAASJ,EAAQT,GACtBS,EAASA,EAAOK,YAChBd,EAAOe,MAAMN,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAC5C,EACAO,WAAY,SAASP,EAAQT,GAE3B,IADA,IAAIc,EAAcL,EAAOK,YAAa3F,GAAK,EAAGmD,EAAIwC,EAAYhH,SACrDqB,EAAImD,GAAGmC,EAASK,EAAY3F,GAAI6E,EAAOe,MAAMN,EAAO,GAAIA,EAAO,GAAIA,EAAO,GACrF,EACAQ,WAAY,SAASR,EAAQT,GAC3BkB,EAAWT,EAAOK,YAAad,EAAQ,EACzC,EACAmB,gBAAiB,SAASV,EAAQT,GAEhC,IADA,IAAIc,EAAcL,EAAOK,YAAa3F,GAAK,EAAGmD,EAAIwC,EAAYhH,SACrDqB,EAAImD,GAAG4C,EAAWJ,EAAY3F,GAAI6E,EAAQ,EACrD,EACAoB,QAAS,SAASX,EAAQT,GACxBqB,EAAcZ,EAAOK,YAAad,EACpC,EACAsB,aAAc,SAASb,EAAQT,GAE7B,IADA,IAAIc,EAAcL,EAAOK,YAAa3F,GAAK,EAAGmD,EAAIwC,EAAYhH,SACrDqB,EAAImD,GAAG+C,EAAcP,EAAY3F,GAAI6E,EAChD,EACAuB,mBAAoB,SAASd,EAAQT,GAEnC,IADA,IAAIwB,EAAaf,EAAOe,WAAYrG,GAAK,EAAGmD,EAAIkD,EAAW1H,SAClDqB,EAAImD,GAAGyB,EAAeyB,EAAWrG,GAAI6E,EAChD,GAGF,SAASkB,EAAWJ,EAAad,EAAQyB,GACvC,IAA6CC,EAAzCvG,GAAK,EAAGmD,EAAIwC,EAAYhH,OAAS2H,EAErC,IADAzB,EAAO2B,cACExG,EAAImD,GAAGoD,EAAaZ,EAAY3F,GAAI6E,EAAOe,MAAMW,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACnG1B,EAAO4B,SACT,CAEA,SAASP,EAAcP,EAAad,GAClC,IAAI7E,GAAK,EAAGmD,EAAIwC,EAAYhH,OAE5B,IADAkG,EAAO6B,iBACE1G,EAAImD,GAAG4C,EAAWJ,EAAY3F,GAAI6E,EAAQ,GACnDA,EAAO8B,YACT,CAEe,WAASrB,EAAQT,GAC1BS,GAAUF,EAAiBL,eAAeO,EAAO5F,MACnD0F,EAAiBE,EAAO5F,MAAM4F,EAAQT,GAEtCD,EAAeU,EAAQT,EAE3B,CC1DA,IAAI+B,EAAe,CACjBnB,OAAQd,EACRiB,MAAOjB,EACP6B,UAMF,WACEI,EAAahB,MAAQiB,EACrBD,EAAaH,QAAUK,CACzB,EAREL,QAAS9B,EACT+B,aAAc/B,EACdgC,WAAYhC,GAQd,SAASmC,IACPF,EAAahB,MAAQgB,EAAaH,QAAU9B,CAC9C,CAEA,SAASkC,EAAiBE,EAAQC,GAEhC/B,EADA8B,GAAUnD,EACQsB,EAAUd,EADT4C,GAAOpD,GACYuB,EAAUpB,EAAIiD,GACpDJ,EAAahB,MAAQqB,CACvB,CAEA,SAASA,EAAYF,EAAQC,GAC3BD,GAAUnD,EACV,IAAIsD,EAAS9C,EADM4C,GAAOpD,GAEtBuD,EAASpD,EAAIiD,GACbI,EAAQnE,EAAI8D,EAAS9B,GACrBoC,EAAWtD,EAAIqD,GAEf1E,EAAIyE,EADO/C,EAAIgD,GAEfvE,EAAIsC,EAAU+B,EAAShC,EAAUiC,EAASE,EAC1CC,EAAIpC,EAAUgC,EAAS/B,EAAUgC,EAASE,EAC9CrC,EAAUvC,IAAIqB,EAAMS,EAAK7B,EAAIA,EAAIG,EAAIA,GAAIyE,IACzCrC,EAAU8B,EAAQ7B,EAAUgC,EAAQ/B,EAAUgC,CAChD,CAEe,WAAS7B,GAGtB,OAFAN,EAAY,IAAI3C,EAChBwC,EAAOS,EAAQsB,IACP5B,CACV,CClDA,IAAIW,EAAc,CAAC,KAAM,MACrBL,EAAS,CAAC5F,KAAM,aAAciG,YAAaA,GAEhC,WAAS4B,EAAGC,GAGzB,OAFA7B,EAAY,GAAK4B,EACjB5B,EAAY,GAAK6B,EACV7I,EAAO2G,EAChB,CCkCM,MAAOmC,UAAgBC,EAAAA,EAA7B9K,WAAAA,G,oBAQCC,OAAAC,eAAA,yB,iDAAsC,GAqNvC,CAnNQ6K,cAAAA,GAGN,GAFAjK,MAAMiK,iBAEF3K,KAAK4K,kBAAoB5K,KAAKkB,QAAQ,aAAelB,KAAKkB,QAAQ,aAAc,CACnF,MAAMyB,EAAW3C,KAAKY,IAAI,YAC1B,GAAI+B,EAAU,CACb,MAAMgC,EAAS3E,KAAK0E,WAAW,UAC/B,GAAIC,EAAQ,CACX,MAAMxD,EAAQwD,EAAOxD,MACrB,GAAIA,EAAO,CACV,MAAMqD,EAAarD,EAAMP,IAAI,cAC7B,IAAIiK,EAA2B,KAE3BrG,GAAcA,EAAWqG,YAC5BA,EAAYrG,EAAWqG,YACvBrG,EAAWsG,UAAU9K,KAAKY,IAAI,YAAa,MAE5C,MAAMY,EAAWxB,KAAKwB,SAChBiD,EAAUtD,EAAMuD,WAAW,WACjC,GAAID,GAAWjD,EAEd,GADAxB,KAAK+K,QAAS,EAC0C,YAApDvJ,EAASZ,IAAI,WAAY+D,EAAO/D,IAAI,aAA4B,CAEnE,MAAM+B,EAAW3C,KAAKY,IAAI,YAE1B,GAAI+B,EAAU,CACb,IAAIgG,EAAchG,EAASgG,YAC3B,GAAIA,EAAa,CAEhB,IAAIqC,EAEiB,cAAjBrI,EAASD,KACZsI,EAAW,CAACrC,GAEa,mBAAjBhG,EAASD,OACjBsI,EAAWrC,GAGZ3I,KAAK0D,IAAI,QAASuH,IACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASrJ,OAAQuJ,IAAK,CACzC,IAAIC,EAAUH,EAASE,GACvB,GAAIC,EAAQxJ,OAAS,EAAG,CACvB,MAAMyJ,EAAMD,EAAQ,GACdE,EAAKlK,EAAMmK,QAAQ,CAAEC,UAAWH,EAAI,GAAII,SAAUJ,EAAI,KAC5DH,EAAQQ,OAAOJ,EAAG3F,EAAG2F,EAAGxF,GAExB,IAAK,IAAIF,EAAI,EAAGA,EAAIwF,EAAQxJ,OAAQgE,IAAK,CACxC,MAAM+F,EAAKP,EAAQxF,GACbgG,EAAKxK,EAAMmK,QAAQ,CAAEC,UAAWG,EAAG,GAAIF,SAAUE,EAAG,KAC1DT,EAAQQ,OAAOE,EAAGjG,EAAGiG,EAAG9F,E,cAS9B7F,KAAK0D,IAAI,QAASkI,IACbpH,IAAyC,IAA3BG,EAAO/D,IAAI,aAC5B4D,EAAWqG,UAAU,KAGtBpG,EAAQoH,QAAQ7L,KAAK4L,UACrBnH,EAAQ9B,GACR8B,EAAQoH,QAAQ,MAEZrH,GAAcA,EAAWqG,WAC5BrG,EAAWqG,UAAUA,E,MAQ5B,MAAMnI,EAAO,cACT1C,KAAK8D,OAAOC,UAAUrB,IACzB1C,KAAK8D,OAAOE,SAAStB,EAAM,CAAEA,KAAMA,EAAMuB,OAAQjE,M,CAGpD,CAKO8L,mBAAAA,GACN9L,KAAK+L,YACL/L,KAAK4K,kBAAmB,CACzB,CAEOoB,WAAAA,GACNtL,MAAMsL,cACNhM,KAAK4K,kBAAmB,CACzB,CAEOqB,gBAAAA,GACN,IAAIC,EAAWlM,KAAKY,IAAI,YACpBuL,EAAWnM,KAAKY,IAAI,YAEpB8E,EAAI,EACJG,EAAI,EAUR,GARIuG,EAAAA,GAAeF,KAClBxG,EAAIwG,GAGDE,EAAAA,GAAeD,KAClBtG,EAAIsG,GAGDD,aAAoBG,EAAAA,GAAS,CAChC,MAAMC,EAAWtM,KAAKuM,mBAAmBL,EAAS3I,OAC5CoB,EAAS3E,KAAK0E,WAAW,UAC/B,GAAIC,EAAQ,CACX,MAAMxD,EAAQwD,EAAOxD,MACrB,GAAIA,EAAO,CACV,MAAMyH,EAAQzH,EAAMmK,QAAQgB,GAC5B5G,EAAIkD,EAAMlD,EACVG,EAAI+C,EAAM/C,C,GAKb,MAAO,CAAEH,IAAGG,IACb,CAQO0G,kBAAAA,CAAmBC,GAEzB,MAAM7J,EAAW3C,KAAKY,IAAI,YACpB+D,EAAS3E,KAAK0E,WAAW,UACzBvD,EAAQwD,EAAOxD,MACfK,EAAWxB,KAAKwB,SAEtB,GAAImB,GAAYgC,GAAUxD,GAASK,EAAU,CAC5C,MAAMiL,EAAWjL,EAASZ,IAAI,WAAY+D,EAAO/D,IAAI,aACrD,IAGI8L,EAGAC,EACAC,EAPAC,EAAwBC,EAAUnK,GAClCoK,EAA0B,EAG1BC,EAAoB,EACpBC,EAAoB,EAIpBtE,EAAchG,EAASgG,YAC3B,GAAIA,EAAa,CAChB,IAAIqC,EAEiB,cAAjBrI,EAASD,KACZsI,EAAW,CAACrC,GAEa,mBAAjBhG,EAASD,OACjBsI,EAAWrC,GAGZ,IAAK,IAAIuC,EAAI,EAAGA,EAAIF,EAASrJ,OAAQuJ,IAAK,CACzC,IAAIC,EAAUH,EAASE,GACvB,GAAIC,EAAQxJ,OAAS,GACpB,IAAK,IAAIgE,EAAI,EAAGA,EAAIwF,EAAQxJ,OAAQgE,IASnC,GARAgH,EAASxB,EAAQxF,EAAI,GACrBiH,EAASzB,EAAQxF,GAEjBqH,EAAYD,EAAkBF,EAC9BH,EAAaQ,EAAYP,EAAQC,GACjCG,GAAmBL,EACnBO,EAAYF,EAAkBF,EAE1BG,GAAaR,GAAYS,EAAYT,EAAU,CAClDtB,EAAIF,EAASrJ,OACb,K,OAIwB,GAAlBwJ,EAAQxJ,SAChBgL,EAASxB,EAAQ,GACjByB,EAASzB,EAAQ,GACjB6B,EAAY,EACZC,EAAY,E,CAId,GAAIN,GAAUC,EAAQ,CACrB,IACIO,EADAC,GAAsBZ,EAAWQ,IAAcC,EAAYD,GAG/D,GAAgB,YAAZP,EAAwB,CAC3B,IAAIpB,EAAKlK,EAAMmK,QAAQ,CAAEC,UAAWoB,EAAO,GAAInB,SAAUmB,EAAO,KAC5DU,EAAKlM,EAAMmK,QAAQ,CAAEC,UAAWqB,EAAO,GAAIpB,SAAUoB,EAAO,KAE5DlH,EAAI2F,EAAG3F,GAAK2H,EAAG3H,EAAI2F,EAAG3F,GAAK0H,EAC3BvH,EAAIwF,EAAGxF,GAAKwH,EAAGxH,EAAIwF,EAAGxF,GAAKuH,EAE/B,OAAOjM,EAAMmM,OAAO,CAAE5H,EAAGA,EAAGG,EAAGA,G,CAI/B,OADAsH,EC7PS,SAAS5C,EAAGC,GACzB,IAAI+C,EAAKhD,EAAE,GAAK3D,EACZ4G,EAAKjD,EAAE,GAAK3D,EACZ6G,EAAKjD,EAAE,GAAK5D,EACZ8G,EAAKlD,EAAE,GAAK5D,EACZ+G,EAAM5G,EAAIyG,GACVI,EAAMxG,EAAIoG,GACVK,EAAM9G,EAAI2G,GACVI,EAAM1G,EAAIsG,GACVK,EAAMJ,EAAM5G,EAAIwG,GAChBS,EAAML,EAAMvG,EAAImG,GAChBU,EAAMJ,EAAM9G,EAAI0G,GAChBS,EAAML,EAAMzG,EAAIqG,GAChBU,EAAI,EAAI1G,EAAKF,EAAKG,EAASgG,EAAKF,GAAMG,EAAME,EAAMnG,EAAS+F,EAAKF,KAChEa,EAAIhH,EAAI+G,GAERE,EAAcF,EAAI,SAASG,GAC7B,IAAIC,EAAInH,EAAIkH,GAAKH,GAAKC,EAClBI,EAAIpH,EAAI+G,EAAIG,GAAKF,EACjB1I,EAAI8I,EAAIT,EAAMQ,EAAIN,EAClBpI,EAAI2I,EAAIR,EAAMO,EAAIL,EAClB5D,EAAIkE,EAAIZ,EAAMW,EAAIT,EACtB,MAAO,CACLhH,EAAMjB,EAAGH,GAAKiB,EACdG,EAAMwD,EAAG/C,EAAK7B,EAAIA,EAAIG,EAAIA,IAAMc,EAEpC,EAAI,WACF,MAAO,CAAC4G,EAAK5G,EAAS6G,EAAK7G,EAC7B,EAIA,OAFA0H,EAAYI,SAAWN,EAEhBE,CACT,CD4NiBK,CAAe/B,EAAQC,EAAvB8B,CAA+BtB,GACnC,CAAE7B,UAAW4B,EAAS,GAAI3B,SAAU2B,EAAS,G,GAMxD,MAAO,CAAE5B,UAAW,EAAGC,SAAU,EAClC,EAtNA3L,OAAAC,eAAA2K,EAAA,a,gDAAkC,YAClC5K,OAAAC,eAAA2K,EAAA,c,gDAA0CC,EAAAA,EAASxF,WAAWC,OAAO,CAACsF,EAAQrF,c,yBEiCzE,MAAOuJ,WAAsBjP,EAAnCE,WAAAA,G,oBAyBCC,OAAAC,eAAA,iB,gDAAkD,IAAI8O,EAAAA,EACrDC,GAAAA,GAASC,IAAI,CAAC,IACd,IAAMrE,EAAQsE,KAAK/O,KAAKgP,MAAO,CAAC,EAAG,CAAChP,KAAKiP,SAASC,eAUnDrP,OAAAC,eAAA,e,gDAAwD,CAAC,aAAc,oBAkKxE,CArMWC,SAAAA,GACTC,KAAKC,OAAOC,KAAK,YACjBF,KAAKG,eAAe,gBAAiB,YACrCO,MAAMX,WACP,CAKOoP,WAAAA,CAAY3N,GAClB,MAAM4N,EAAUpP,KAAKoE,SAASlE,KAAKF,KAAKiP,SAASI,QAGjD,OAFAD,EAAQE,aAAa9N,GACrBxB,KAAKiP,SAAS/O,KAAKkP,GACZA,CACR,CA0BOtD,mBAAAA,GACNxK,EAAAA,GAAYtB,KAAK+B,WAAYP,IAC5B,IAAI4N,EAAU5N,EAASZ,IAAI,WACvBwO,GACHA,EAAQtD,qB,GAGX,CAEO9K,gBAAAA,GACNN,MAAMM,mBAEFhB,KAAKkB,QAAQ,WAChBlB,KAAKiP,SAASC,SAASxL,IAAI,SAAU1D,KAAKY,IAAI,UAEhD,CAEU+C,eAAAA,CAAgBnC,GACzBd,MAAMiD,gBAAgBnC,GAEtB,IAAI4N,EAAU5N,EAASZ,IAAI,WACtBwO,IACJA,EAAUpP,KAAKmP,YAAY3N,IAG5BxB,KAAKuP,uBAAuB/N,GAC5BA,EAASpB,GAAG,mBAAmB,KAC9BJ,KAAKuP,uBAAuB/N,EAAS,IAGtCA,EAASkC,IAAI,UAAW0L,GAExBpP,KAAKqC,aAAab,EAASZ,IAAI,YAAaZ,MAE5CoP,EAAQI,WAAW,SAAUxP,KAC9B,CAEUuP,sBAAAA,CAAuB/N,GAEhC,MAAMiO,EAAkBjO,EAASZ,IAAI,mBACjC6O,IACHnO,EAAAA,GAAYmO,GAAkB7G,IAE7BA,EAAMxI,GAAG,YAAY,KACpBJ,KAAK0P,gBAAgBlO,EAAS,IAG/BoH,EAAMxI,GAAG,aAAa,KACrBJ,KAAK0P,gBAAgBlO,EAAS,IAG/BoH,EAAMxI,GAAG,YAAY,KACpBJ,KAAK0P,gBAAgBlO,EAAS,GAC7B,IAGHxB,KAAK0P,gBAAgBlO,GAEvB,CAOOkO,eAAAA,CAAgBlO,GAEtB,GADAd,MAAMgP,kBACFlO,EAAU,CACb,MAAM4N,EAAU5N,EAASZ,IAAI,WAC7B,GAAIwO,EAAS,CACZ,MAAMK,EAAkBjO,EAASZ,IAAI,mBACrC,GAAI6O,EAAiB,CACpB,IAAI9G,EAAoC,GACxCrH,EAAAA,GAAYmO,GAAkB7G,IAC7B,MAAM2C,EAAY3C,EAAMhI,IAAI,aACtB4K,EAAW5C,EAAMhI,IAAI,YAC3B,GAAiB,MAAb2K,GAAiC,MAAZC,EACxB7C,EAAYzI,KAAK,CAACqL,EAAWC,QAEzB,CACJ,MAAM7I,EAAWiG,EAAMhI,IAAI,YAC3B,GAAI+B,EAAU,CACb,MAAMgN,EAAShN,EAASgG,YACpBgH,GACHhH,EAAYzI,KAAK,CAACyP,EAAO,GAAWA,EAAO,I,MAM/C,IAAIhN,EAAgB,CAAED,KAAM,aAAciG,YAAaA,GAEvDnH,EAASoO,OAAO,WAAYjN,GAC5ByM,EAAQ1L,IAAI,WAAYf,E,MAGxByM,EAAQ1L,IAAI,WAAYlC,EAASZ,IAAI,Y,EAIzC,CAKOiP,eAAAA,CAAgBrO,GACtBd,MAAMmP,gBAAgBrO,GACtB,MAAM4N,EAAU5N,EAASZ,IAAI,WACzBwO,IACHpP,KAAKiP,SAASlK,YAAYqK,GAC1BA,EAAQU,UAEV,CAKUpO,gBAAAA,CAAiBF,GAC1Bd,MAAMgB,iBAAiBF,GACvB,MAAM4N,EAAU5N,EAASZ,IAAI,WACzBwO,GACHA,EAAQI,WAAW,WAAW,EAEhC,CAKU3N,kBAAAA,CAAmBL,GAC5Bd,MAAMmB,mBAAmBL,GACzB,MAAM4N,EAAU5N,EAASZ,IAAI,WACzBwO,GACHA,EAAQI,WAAW,WAAW,EAEhC,CAKUvN,mBAAAA,CAAoBT,GAC7Bd,MAAMuB,oBAAoBT,GAC1B,MAAM4N,EAAU5N,EAASZ,IAAI,WACzBwO,GACHA,EAAQI,WAAW,WAAW,EAEhC,CAKUtN,qBAAAA,CAAsBV,GAC/Bd,MAAMwB,sBAAsBV,GAC5B,MAAM4N,EAAU5N,EAASZ,IAAI,WACzBwO,GACHA,EAAQI,WAAW,WAAW,EAEhC,ECzRc,SAASO,GAAMC,EAAOC,EAAMC,GACzCF,GAASA,EAAOC,GAAQA,EAAMC,GAAQ/J,EAAIgK,UAAUxO,QAAU,GAAKsO,EAAOD,EAAOA,EAAQ,EAAG,GAAK7J,EAAI,EAAI,GAAK+J,EAM9G,IAJA,IAAIlN,GAAK,EACLmD,EAAoD,EAAhDH,KAAKoK,IAAI,EAAGpK,KAAKgB,MAAMiJ,EAAOD,GAASE,IAC3CH,EAAQ,IAAIM,MAAMlK,KAEbnD,EAAImD,GACX4J,EAAM/M,GAAKgN,EAAQhN,EAAIkN,EAGzB,OAAOH,CACT,CCTA,SAASO,GAAW9C,EAAIE,EAAI6C,GAC1B,IAAI1K,EAAIkK,GAAMvC,EAAIE,EAAKtH,EAASmK,GAAIpL,OAAOuI,GAC3C,OAAO,SAAShI,GAAK,OAAOG,EAAE2K,KAAI,SAAS3K,GAAK,MAAO,CAACH,EAAGG,EAAI,GAAI,CACrE,CAEA,SAAS4K,GAAWlD,EAAIE,EAAIiD,GAC1B,IAAIhL,EAAIqK,GAAMxC,EAAIE,EAAKrH,EAASsK,GAAIvL,OAAOsI,GAC3C,OAAO,SAAS5H,GAAK,OAAOH,EAAE8K,KAAI,SAAS9K,GAAK,MAAO,CAACA,EAAGG,EAAI,GAAI,CACrE,CAEe,SAAS8K,KACtB,IAAIlD,EAAIF,EAAIqD,EAAIC,EACZnD,EAAIF,EAAIsD,EAAIC,EAEZrL,EAAGG,EAAGmL,EAAGC,EADTP,EAAK,GAAIH,EAAKG,EAAIQ,EAAK,GAAIC,EAAK,IAEhCrG,EAAY,IAEhB,SAAS6F,IACP,MAAO,CAACjO,KAAM,kBAAmBiG,YAAayI,IAChD,CAEA,SAASA,IACP,OAAOrB,GAAM/I,EAAK6J,EAAKK,GAAMA,EAAIN,EAAIM,GAAIV,IAAIQ,GACxC7L,OAAO4K,GAAM/I,EAAK+J,EAAKI,GAAMA,EAAIL,EAAIK,GAAIX,IAAIS,IAC7C9L,OAAO4K,GAAM/I,EAAKuG,EAAKmD,GAAMA,EAAIjD,EAAIiD,GAAIW,QAAO,SAAS3L,GAAK,OAAOO,EAAIP,EAAIwL,GAAM9K,CAAS,IAAGoK,IAAI9K,IACnGP,OAAO4K,GAAM/I,EAAKwG,EAAK+C,GAAMA,EAAI7C,EAAI6C,GAAIc,QAAO,SAASxL,GAAK,OAAOI,EAAIJ,EAAIsL,GAAM/K,CAAS,IAAGoK,IAAI3K,GAC1G,CAoEA,OAlEA8K,EAAUS,MAAQ,WAChB,OAAOA,IAAQZ,KAAI,SAAS7H,GAAe,MAAO,CAACjG,KAAM,aAAciG,YAAaA,EAAc,GACpG,EAEAgI,EAAUW,QAAU,WAClB,MAAO,CACL5O,KAAM,UACNiG,YAAa,CACXqI,EAAEH,GAAI1L,OACN8L,EAAEH,GAAIS,MAAM,GACZP,EAAEJ,GAAIY,UAAUD,MAAM,GACtBN,EAAEF,GAAIS,UAAUD,MAAM,KAG5B,EAEAZ,EAAUc,OAAS,SAASC,GAC1B,OAAKvB,UAAUxO,OACRgP,EAAUgB,YAAYD,GAAGE,YAAYF,GADdf,EAAUiB,aAE1C,EAEAjB,EAAUgB,YAAc,SAASD,GAC/B,OAAKvB,UAAUxO,QACfkP,GAAMa,EAAE,GAAG,GAAId,GAAMc,EAAE,GAAG,GAC1BX,GAAMW,EAAE,GAAG,GAAIZ,GAAMY,EAAE,GAAG,GACtBb,EAAKD,IAAIc,EAAIb,EAAIA,EAAKD,EAAIA,EAAKc,GAC/BX,EAAKD,IAAIY,EAAIX,EAAIA,EAAKD,EAAIA,EAAKY,GAC5Bf,EAAU7F,UAAUA,IALG,CAAC,CAAC+F,EAAIE,GAAK,CAACH,EAAIE,GAMhD,EAEAH,EAAUiB,YAAc,SAASF,GAC/B,OAAKvB,UAAUxO,QACf4L,GAAMmE,EAAE,GAAG,GAAIjE,GAAMiE,EAAE,GAAG,GAC1BlE,GAAMkE,EAAE,GAAG,GAAIhE,GAAMgE,EAAE,GAAG,GACtBnE,EAAKE,IAAIiE,EAAInE,EAAIA,EAAKE,EAAIA,EAAKiE,GAC/BlE,EAAKE,IAAIgE,EAAIlE,EAAIA,EAAKE,EAAIA,EAAKgE,GAC5Bf,EAAU7F,UAAUA,IALG,CAAC,CAACyC,EAAIC,GAAK,CAACC,EAAIC,GAMhD,EAEAiD,EAAUT,KAAO,SAASwB,GACxB,OAAKvB,UAAUxO,OACRgP,EAAUkB,UAAUH,GAAGI,UAAUJ,GADVf,EAAUmB,WAE1C,EAEAnB,EAAUkB,UAAY,SAASH,GAC7B,OAAKvB,UAAUxO,QACfuP,GAAMQ,EAAE,GAAIP,GAAMO,EAAE,GACbf,GAFuB,CAACO,EAAIC,EAGrC,EAEAR,EAAUmB,UAAY,SAASJ,GAC7B,OAAKvB,UAAUxO,QACf+O,GAAMgB,EAAE,GAAInB,GAAMmB,EAAE,GACbf,GAFuB,CAACD,EAAIH,EAGrC,EAEAI,EAAU7F,UAAY,SAAS4G,GAC7B,OAAKvB,UAAUxO,QACfmJ,GAAa4G,EACbhM,EAAI4K,GAAW9C,EAAIE,EAAI,IACvB7H,EAAI4K,GAAWlD,EAAIE,EAAI3C,GACvBkG,EAAIV,GAAWS,EAAID,EAAI,IACvBG,EAAIR,GAAWI,EAAID,EAAI9F,GAChB6F,GANuB7F,CAOhC,EAEO6F,EACFgB,YAAY,CAAC,EAAE,KAAM,GAAKvL,GAAU,CAAC,IAAK,GAAKA,KAC/CwL,YAAY,CAAC,EAAE,KAAM,GAAKxL,GAAU,CAAC,IAAK,GAAKA,IACtD,CFaCvG,OAAAC,eAAA6O,GAAA,a,gDAAkC,kBAClC9O,OAAAC,eAAA6O,GAAA,c,gDAA0CjP,EAAUwF,WAAWC,OAAO,CAACwJ,GAAcvJ,cGvFhF,MAAO2M,WAAwBpD,GAArC/O,WAAAA,G,oBAQCC,OAAAC,eAAA,kB,gDAA2DE,KAAKgS,aAAa,CAAC,IAiD/E,CA/CWjS,SAAAA,GACTW,MAAMX,YACNC,KAAK+B,UAAU7B,KAAKF,KAAKiS,WACzBjS,KAAKkS,WACN,CAEOC,eAAAA,GAON,GANAzR,MAAMyR,kBAEFnS,KAAKkB,QAAQ,SAChBlB,KAAKkS,YAGFlS,KAAKkB,QAAQ,eAEZlB,KAAKY,IAAI,cAAe,CAC3B,MAAMO,EAAQnB,KAAKmB,MACfA,GACHA,EAAM2C,OAAO1D,GAAG,oBAAoB,KACnCJ,KAAKkS,WAAW,IAGlBlS,KAAKkS,W,CAGR,CAEUA,SAAAA,GACT,IAAIvB,EAAYyB,KAEhB,GAAIzB,EAAW,CACd,GAAI3Q,KAAKY,IAAI,cAAe,CAC3B,MAAMO,EAAQnB,KAAKmB,MACnB,GAAIA,EAAO,CACV,MAAMkR,EAAYlR,EAAMkR,YACpBA,GACH1B,EAAUc,OAAO,CAAC,CAACY,EAAUC,KAAMD,EAAUE,QAAS,CAACF,EAAUG,MAAOH,EAAUI,M,EAKrF,MAAMvC,EAAOlQ,KAAKY,IAAI,OAAQ,IAC9B+P,EAAUmB,UAAU,CAAC,IAAK,MAC1BnB,EAAUkB,UAAU,CAAC3B,EAAMA,IAC3BlQ,KAAKiS,UAAUvO,IAAI,WAAYiN,I,CAEjC,EAtDA9Q,OAAAC,eAAAiS,GAAA,a,gDAAkC,oBAClClS,OAAAC,eAAAiS,GAAA,c,gDAA0CpD,GAAczJ,WAAWC,OAAO,CAAC4M,GAAgB3M,c,0BC9B7E,YAASmF,EAAGC,GAEzB,SAASkI,EAAQhN,EAAGG,GAClB,OAAOH,EAAI6E,EAAE7E,EAAGG,GAAI2E,EAAE9E,EAAE,GAAIA,EAAE,GAChC,CAMA,OAJI6E,EAAE+C,QAAU9C,EAAE8C,SAAQoF,EAAQpF,OAAS,SAAS5H,EAAGG,GACrD,OAAOH,EAAI8E,EAAE8C,OAAO5H,EAAGG,KAAS0E,EAAE+C,OAAO5H,EAAE,GAAIA,EAAE,GACnD,GAEOgN,CACT,CCRA,SAASC,GAAiB5I,EAAQC,GAEhC,OADI/D,EAAI8D,GAAUzD,IAAIyD,GAAU/D,KAAK4M,MAAM7I,EAASrD,GAAOA,GACpD,CAACqD,EAAQC,EAClB,CAIO,SAAS6I,GAAcC,EAAaC,EAAUC,GACnD,OAAQF,GAAepM,GAAQqM,GAAYC,EAAaN,GAAQO,GAAeH,GAAcI,GAAiBH,EAAUC,IACpHC,GAAeH,GACdC,GAAYC,EAAaE,GAAiBH,EAAUC,GACrDL,EACN,CAEA,SAASQ,GAAsBL,GAC7B,OAAO,SAAS/I,EAAQC,GAGtB,OADI/D,EADJ8D,GAAU+I,GACQxM,IAAIyD,GAAU/D,KAAK4M,MAAM7I,EAASrD,GAAOA,GACpD,CAACqD,EAAQC,EAClB,CACF,CAEA,SAASiJ,GAAeH,GACtB,IAAIM,EAAWD,GAAsBL,GAErC,OADAM,EAAS9F,OAAS6F,IAAuBL,GAClCM,CACT,CAEA,SAASF,GAAiBH,EAAUC,GAClC,IAAIK,EAActM,EAAIgM,GAClBO,EAAclM,EAAI2L,GAClBQ,EAAgBxM,EAAIiM,GACpBQ,EAAgBpM,EAAI4L,GAExB,SAASI,EAASrJ,EAAQC,GACxB,IAAIG,EAASpD,EAAIiD,GACbtE,EAAIqB,EAAIgD,GAAUI,EAClBtE,EAAIuB,EAAI2C,GAAUI,EAClBG,EAAIlD,EAAI4C,GACRoE,EAAI9D,EAAI+I,EAAc3N,EAAI4N,EAC9B,MAAO,CACLxM,EAAMjB,EAAI0N,EAAgBnF,EAAIoF,EAAe9N,EAAI2N,EAAc/I,EAAIgJ,GACnE7L,EAAK2G,EAAImF,EAAgB1N,EAAI2N,GAEjC,CAcA,OAZAJ,EAAS9F,OAAS,SAASvD,EAAQC,GACjC,IAAIG,EAASpD,EAAIiD,GACbtE,EAAIqB,EAAIgD,GAAUI,EAClBtE,EAAIuB,EAAI2C,GAAUI,EAClBG,EAAIlD,EAAI4C,GACRoE,EAAI9D,EAAIiJ,EAAgB1N,EAAI2N,EAChC,MAAO,CACL1M,EAAMjB,EAAI0N,EAAgBjJ,EAAIkJ,EAAe9N,EAAI2N,EAAcjF,EAAIkF,GACnE7L,EAAK2G,EAAIiF,EAAc3N,EAAI4N,GAE/B,EAEOF,CACT,CC5De,cACb,IACIK,EADArC,EAAQ,GAEZ,MAAO,CACLxI,MAAO,SAASlD,EAAGG,EAAG6N,GACpBD,EAAKvT,KAAK,CAACwF,EAAGG,EAAG6N,GACnB,EACAlK,UAAW,WACT4H,EAAMlR,KAAKuT,EAAO,GACpB,EACAhK,QAAS9B,EACTgM,OAAQ,WACFvC,EAAMzP,OAAS,GAAGyP,EAAMlR,KAAKkR,EAAMwC,MAAMzO,OAAOiM,EAAMyC,SAC5D,EACAC,OAAQ,WACN,IAAIA,EAAS1C,EAGb,OAFAA,EAAQ,GACRqC,EAAO,KACAK,CACT,EAEJ,CCrBe,YAASvJ,EAAGC,GACzB,OAAOvE,EAAIsE,EAAE,GAAKC,EAAE,IAAMpE,GAAWH,EAAIsE,EAAE,GAAKC,EAAE,IAAMpE,CAC1D,CCDA,SAAS2N,GAAanL,EAAOoL,EAAQC,EAAOC,GAC1ClU,KAAK0F,EAAIkD,EACT5I,KAAKsK,EAAI0J,EACThU,KAAKmU,EAAIF,EACTjU,KAAKoU,EAAIF,EACTlU,KAAKqU,GAAI,EACTrU,KAAKmG,EAAInG,KAAK2F,EAAI,IACpB,CAKe,YAASqF,EAAUsJ,EAAqBC,EAAalG,EAAaxG,GAC/E,IAEI7E,EACAmD,EAHAqO,EAAU,GACVC,EAAO,GAyBX,GArBAzJ,EAAS0J,SAAQ,SAASvJ,GACxB,MAAKhF,EAAIgF,EAAQxJ,OAAS,IAAM,GAAhC,CACA,IAAIwE,EAAqCT,EAAlC2F,EAAKF,EAAQ,GAAIkC,EAAKlC,EAAQhF,GAErC,GAAIwO,GAAWtJ,EAAIgC,GAAK,CACtB,IAAKhC,EAAG,KAAOgC,EAAG,GAAI,CAEpB,IADAxF,EAAO2B,YACFxG,EAAI,EAAGA,EAAImD,IAAKnD,EAAG6E,EAAOe,OAAOyC,EAAKF,EAAQnI,IAAI,GAAIqI,EAAG,IAE9D,YADAxD,EAAO4B,SAET,CAEA4D,EAAG,IAAM,EAAIjH,CACf,CAEAoO,EAAQtU,KAAKwF,EAAI,IAAIqO,GAAa1I,EAAIF,EAAS,MAAM,IACrDsJ,EAAKvU,KAAKwF,EAAEyO,EAAI,IAAIJ,GAAa1I,EAAI,KAAM3F,GAAG,IAC9C8O,EAAQtU,KAAKwF,EAAI,IAAIqO,GAAa1G,EAAIlC,EAAS,MAAM,IACrDsJ,EAAKvU,KAAKwF,EAAEyO,EAAI,IAAIJ,GAAa1G,EAAI,KAAM3H,GAAG,GAjBL,CAkB3C,IAEK8O,EAAQ7S,OAAb,CAMA,IAJA8S,EAAKG,KAAKN,GACVO,GAAKL,GACLK,GAAKJ,GAEAzR,EAAI,EAAGmD,EAAIsO,EAAK9S,OAAQqB,EAAImD,IAAKnD,EACpCyR,EAAKzR,GAAGoR,EAAIG,GAAeA,EAO7B,IAJA,IACIP,EACApL,EAFAoH,EAAQwE,EAAQ,KAIV,CAIR,IAFA,IAAIM,EAAU9E,EACV+E,GAAY,EACTD,EAAQT,OAAQS,EAAUA,EAAQ3O,KAAO6J,EAAO,OACvDgE,EAASc,EAAQxK,EACjBzC,EAAO2B,YACP,EAAG,CAED,GADAsL,EAAQT,EAAIS,EAAQX,EAAEE,GAAI,EACtBS,EAAQV,EAAG,CACb,GAAIW,EACF,IAAK/R,EAAI,EAAGmD,EAAI6N,EAAOrS,OAAQqB,EAAImD,IAAKnD,EAAG6E,EAAOe,OAAOA,EAAQoL,EAAOhR,IAAI,GAAI4F,EAAM,SAEtFyF,EAAYyG,EAAQpP,EAAGoP,EAAQ3O,EAAET,EAAG,EAAGmC,GAEzCiN,EAAUA,EAAQ3O,CACpB,KAAO,CACL,GAAI4O,EAEF,IADAf,EAASc,EAAQnP,EAAE2E,EACdtH,EAAIgR,EAAOrS,OAAS,EAAGqB,GAAK,IAAKA,EAAG6E,EAAOe,OAAOA,EAAQoL,EAAOhR,IAAI,GAAI4F,EAAM,SAEpFyF,EAAYyG,EAAQpP,EAAGoP,EAAQnP,EAAED,GAAI,EAAGmC,GAE1CiN,EAAUA,EAAQnP,CACpB,CAEAqO,GADAc,EAAUA,EAAQX,GACD7J,EACjByK,GAAaA,CACf,QAAUD,EAAQT,GAClBxM,EAAO4B,SACT,CA5C2B,CA6C7B,CAEA,SAASoL,GAAKG,GACZ,GAAM7O,EAAI6O,EAAMrT,OAAhB,CAKA,IAJA,IAAIwE,EAGAqE,EAFAxH,EAAI,EACJuH,EAAIyK,EAAM,KAELhS,EAAImD,GACXoE,EAAEpE,EAAIqE,EAAIwK,EAAMhS,GAChBwH,EAAE7E,EAAI4E,EACNA,EAAIC,EAEND,EAAEpE,EAAIqE,EAAIwK,EAAM,GAChBxK,EAAE7E,EAAI4E,CAXyB,CAYjC,CCpGO,SAAS0K,GAAUC,GACxB,MAAO,CAACpO,EAAMoO,EAAU,GAAIA,EAAU,IAAKzN,EAAKyN,EAAU,IAC5D,CAEO,SAASA,GAAUD,GACxB,IAAIlL,EAASkL,EAAU,GAAIjL,EAAMiL,EAAU,GAAI9K,EAASpD,EAAIiD,GAC5D,MAAO,CAACG,EAASpD,EAAIgD,GAASI,EAAS/C,EAAI2C,GAAS3C,EAAI4C,GAC1D,CAEO,SAASmL,GAAa5K,EAAGC,GAC9B,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,EAC9C,CAEO,SAAS4K,GAAe7K,EAAGC,GAChC,MAAO,CAACD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACvF,CAGO,SAAS6K,GAAoB9K,EAAGC,GACrCD,EAAE,IAAMC,EAAE,GAAID,EAAE,IAAMC,EAAE,GAAID,EAAE,IAAMC,EAAE,EACxC,CAEO,SAAS8K,GAAeC,EAAQnH,GACrC,MAAO,CAACmH,EAAO,GAAKnH,EAAGmH,EAAO,GAAKnH,EAAGmH,EAAO,GAAKnH,EACpD,CAGO,SAASoH,GAA0BrH,GACxC,IAAIsH,EAAIlO,EAAK4G,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAClDA,EAAE,IAAMsH,EAAGtH,EAAE,IAAMsH,EAAGtH,EAAE,IAAMsH,CAChC,CC5BA,SAASlK,GAAU3C,GACjB,OAAO3C,EAAI2C,EAAM,KAAOtC,EAAKsC,EAAM,GAAKtB,EAAKsB,EAAM,MAAQ3C,EAAI2C,EAAM,IAAMtC,GAAMI,EAAMJ,EACzF,CCAe,SAASoP,GAAMC,GAC5B,OAAOtF,MAAMuF,KAPf,UAAkBD,GAChB,IAAK,MAAMX,KAASW,QACXX,CAEX,CAGoBa,CAAQF,GAC5B,CCFe,YAASG,EAAcC,EAAU1H,EAAa2B,GAC3D,OAAO,SAASgG,GACd,IAIIC,EACAjL,EACAkL,EANAzC,EAAOsC,EAASC,GAChBG,EAAaC,KACbC,EAAWN,EAASI,GACpBG,GAAiB,EAKjB7B,EAAO,CACT7L,MAAOA,EACPY,UAAWA,EACXC,QAASA,EACTC,aAAc,WACZ+K,EAAK7L,MAAQ2N,EACb9B,EAAKjL,UAAYgN,EACjB/B,EAAKhL,QAAUgN,EACfzL,EAAW,GACXiL,EAAU,EACZ,EACAtM,WAAY,WACV8K,EAAK7L,MAAQA,EACb6L,EAAKjL,UAAYA,EACjBiL,EAAKhL,QAAUA,EACfuB,EAAW0K,GAAM1K,GACjB,IAAIuJ,EFxBG,SAAS0B,EAASrN,GAC/B,IAAImB,EAASwB,GAAU3C,GACnBoB,EAAMpB,EAAM,GACZsB,EAAS9C,EAAI4C,GACb0M,EAAS,CAACtP,EAAI2C,IAAUhD,EAAIgD,GAAS,GACrC4M,EAAQ,EACRC,EAAU,EAEVC,EAAM,IAAIxR,EAEC,IAAX6E,EAAcF,EAAMxD,EAASJ,GACZ,IAAZ8D,IAAeF,GAAOxD,EAASJ,GAExC,IAAK,IAAIpD,EAAI,EAAGmD,EAAI8P,EAAQtU,OAAQqB,EAAImD,IAAKnD,EAC3C,GAAM0Q,GAAKwC,EAAOD,EAAQjT,IAAIrB,OAS9B,IARA,IAAIuU,EACAxC,EACAoD,EAASZ,EAAKxC,EAAI,GAClBzL,EAAUsD,GAAUuL,GACpBC,EAAOD,EAAO,GAAK,EAAIrQ,EACvByB,EAAUd,EAAI2P,GACd5O,EAAUpB,EAAIgQ,GAETnR,EAAI,EAAGA,EAAI8N,IAAK9N,EAAGqC,EAAU+O,EAAS9O,EAAU+O,EAAS9O,EAAU+O,EAASJ,EAASK,EAAQ,CACpG,IAAIA,EAASjB,EAAKtQ,GACdoR,EAAUzL,GAAU4L,GACpBC,EAAOD,EAAO,GAAK,EAAI1Q,EACvBwQ,EAAU7P,EAAIgQ,GACdF,EAAUnQ,EAAIqQ,GACdhN,EAAQ4M,EAAU/O,EAClBX,EAAO8C,GAAS,EAAI,GAAK,EACzBiN,EAAW/P,EAAO8C,EAClBkN,EAAeD,EAAW/Q,EAC1B8H,EAAIlG,EAAU+O,EAOlB,GALAJ,EAAIpR,IAAIqB,EAAMsH,EAAI9G,EAAOF,EAAIiQ,GAAWlP,EAAU+O,EAAU9I,EAAIrH,EAAIsQ,KACpEV,GAASW,EAAelN,EAAQ9C,EAAOZ,EAAM0D,EAIzCkN,EAAerP,GAAW8B,EAASiN,GAAWjN,EAAQ,CACxD,IAAIwN,EAAMnC,GAAeF,GAAU4B,GAAS5B,GAAUiC,IACtD3B,GAA0B+B,GAC1B,IAAIC,EAAepC,GAAesB,EAAQa,GAC1C/B,GAA0BgC,GAC1B,IAAIC,GAAUH,EAAelN,GAAS,GAAK,EAAI,GAAK3C,EAAK+P,EAAa,KAClExN,EAAMyN,GAAUzN,IAAQyN,IAAWF,EAAI,IAAMA,EAAI,OACnDX,GAAWU,EAAelN,GAAS,EAAI,GAAK,EAEhD,CACF,CAcF,OAAQuM,GAASvQ,GAAWuQ,EAAQvQ,GAAWyQ,GAAOxQ,GAAuB,EAAVuQ,CACrE,CEzC0Bc,CAAgBzB,EAASjG,GACvChF,EAASrJ,QACN2U,IAAgBN,EAAKtM,eAAgB4M,GAAiB,GAC3DqB,GAAW3M,EAAUsJ,GAAqBC,EAAalG,EAAa2H,IAC3DzB,IACJ+B,IAAgBN,EAAKtM,eAAgB4M,GAAiB,GAC3DN,EAAKxM,YACL6E,EAAY,KAAM,KAAM,EAAG2H,GAC3BA,EAAKvM,WAEH6M,IAAgBN,EAAKrM,aAAc2M,GAAiB,GACxDtL,EAAWiL,EAAU,IACvB,EACAxN,OAAQ,WACNuN,EAAKtM,eACLsM,EAAKxM,YACL6E,EAAY,KAAM,KAAM,EAAG2H,GAC3BA,EAAKvM,UACLuM,EAAKrM,YACP,GAGF,SAASf,EAAMmB,EAAQC,GACjB8L,EAAa/L,EAAQC,IAAMgM,EAAKpN,MAAMmB,EAAQC,EACpD,CAEA,SAAS4N,EAAU7N,EAAQC,GACzByJ,EAAK7K,MAAMmB,EAAQC,EACrB,CAEA,SAASR,IACPiL,EAAK7L,MAAQgP,EACbnE,EAAKjK,WACP,CAEA,SAASC,IACPgL,EAAK7L,MAAQA,EACb6K,EAAKhK,SACP,CAEA,SAAS8M,EAAUxM,EAAQC,GACzBkM,EAAKhW,KAAK,CAAC6J,EAAQC,IACnBqM,EAASzN,MAAMmB,EAAQC,EACzB,CAEA,SAASwM,IACPH,EAAS7M,YACT0M,EAAO,EACT,CAEA,SAASO,IACPF,EAAUL,EAAK,GAAG,GAAIA,EAAK,GAAG,IAC9BG,EAAS5M,UAET,IAEIzG,EAA4B0Q,EAC5BvI,EACAvC,EAJAiP,EAAQxB,EAASwB,QACjBC,EAAe3B,EAAWrC,SACvB3N,EAAI2R,EAAanW,OAQxB,GAJAuU,EAAKtC,MACLqC,EAAQ/V,KAAKgW,GACbA,EAAO,KAEF/P,EAGL,GAAY,EAAR0R,GAEF,IAAKnE,GADLvI,EAAU2M,EAAa,IACNnW,OAAS,GAAK,EAAG,CAGhC,IAFK2U,IAAgBN,EAAKtM,eAAgB4M,GAAiB,GAC3DN,EAAKxM,YACAxG,EAAI,EAAGA,EAAI0Q,IAAK1Q,EAAGgT,EAAKpN,OAAOA,EAAQuC,EAAQnI,IAAI,GAAI4F,EAAM,IAClEoN,EAAKvM,SACP,OAMEtD,EAAI,GAAa,EAAR0R,GAAWC,EAAa5X,KAAK4X,EAAalE,MAAMzO,OAAO2S,EAAajE,UAEjF7I,EAAS9K,KAAK4X,EAAazG,OAAO0G,IACpC,CAEA,OAAOtD,CACT,CACF,CAEA,SAASsD,GAAa5M,GACpB,OAAOA,EAAQxJ,OAAS,CAC1B,CAIA,SAAS2S,GAAoB/J,EAAGC,GAC9B,QAASD,EAAIA,EAAE7E,GAAG,GAAK,EAAI6E,EAAE,GAAK/D,EAASJ,EAAUI,EAAS+D,EAAE,MACvDC,EAAIA,EAAE9E,GAAG,GAAK,EAAI8E,EAAE,GAAKhE,EAASJ,EAAUI,EAASgE,EAAE,GAClE,CP1HAmI,GAAiBrF,OAASqF,GQL1B,SAAe8B,IACb,WAAa,OAAO,CAAM,IAS5B,SAA8B5M,GAC5B,IAGIgQ,EAHA5P,EAAU+P,IACVjB,EAAOiB,IACPC,EAAQD,IAGZ,MAAO,CACLxO,UAAW,WACT3B,EAAO2B,YACPqO,EAAQ,CACV,EACAjP,MAAO,SAASoO,EAASI,GACvB,IAAIc,EAAQlB,EAAU,EAAI1Q,GAAMA,EAC5B8D,EAAQnE,EAAI+Q,EAAU/O,GACtBhC,EAAImE,EAAQ9D,GAAMF,GACpByB,EAAOe,MAAMX,EAAS8O,GAAQA,EAAOK,GAAQ,EAAI,EAAI5Q,GAAUA,GAC/DqB,EAAOe,MAAMqP,EAAOlB,GACpBlP,EAAO4B,UACP5B,EAAO2B,YACP3B,EAAOe,MAAMsP,EAAOnB,GACpBlP,EAAOe,MAAMoO,EAASD,GACtBc,EAAQ,GACCI,IAAUC,GAAS9N,GAAS9D,IACjCL,EAAIgC,EAAUgQ,GAAS7R,IAAS6B,GAAWgQ,EAAQ7R,GACnDH,EAAI+Q,EAAUkB,GAAS9R,IAAS4Q,GAAWkB,EAAQ9R,GACvD2Q,EAoBR,SAAmC9O,EAAS8O,EAAMC,EAASI,GACzD,IAAIjP,EACA+O,EACAiB,EAAoB/Q,EAAIa,EAAU+O,GACtC,OAAO/Q,EAAIkS,GAAqB/R,EAC1BS,GAAMO,EAAI2P,IAASG,EAAUnQ,EAAIqQ,IAAShQ,EAAI4P,GAC1C5P,EAAIgQ,IAASjP,EAAUpB,EAAIgQ,IAAS3P,EAAIa,KACvCE,EAAU+O,EAAUiB,KACxBpB,EAAOK,GAAQ,CACxB,CA7BegB,CAA0BnQ,EAAS8O,EAAMC,EAASI,GACzDvP,EAAOe,MAAMqP,EAAOlB,GACpBlP,EAAO4B,UACP5B,EAAO2B,YACP3B,EAAOe,MAAMsP,EAAOnB,GACpBc,EAAQ,GAEVhQ,EAAOe,MAAMX,EAAU+O,EAASD,EAAOK,GACvCa,EAAQC,CACV,EACAzO,QAAS,WACP5B,EAAO4B,UACPxB,EAAU8O,EAAOiB,GACnB,EACAH,MAAO,WACL,OAAO,EAAIA,CACb,EAEJ,IAaA,SAAqCjC,EAAMyC,EAAIC,EAAWzQ,GACxD,IAAImC,EACJ,GAAY,MAAR4L,EACF5L,EAAMsO,EAAY9R,EAClBqB,EAAOe,OAAOtC,EAAI0D,GAClBnC,EAAOe,MAAM,EAAGoB,GAChBnC,EAAOe,MAAMtC,EAAI0D,GACjBnC,EAAOe,MAAMtC,EAAI,GACjBuB,EAAOe,MAAMtC,GAAK0D,GAClBnC,EAAOe,MAAM,GAAIoB,GACjBnC,EAAOe,OAAOtC,GAAK0D,GACnBnC,EAAOe,OAAOtC,EAAI,GAClBuB,EAAOe,OAAOtC,EAAI0D,QACb,GAAI/D,EAAI2P,EAAK,GAAKyC,EAAG,IAAMjS,EAAS,CACzC,IAAI2D,EAAS6L,EAAK,GAAKyC,EAAG,GAAK/R,GAAMA,EACrC0D,EAAMsO,EAAYvO,EAAS,EAC3BlC,EAAOe,OAAOmB,EAAQC,GACtBnC,EAAOe,MAAM,EAAGoB,GAChBnC,EAAOe,MAAMmB,EAAQC,EACvB,MACEnC,EAAOe,MAAMyP,EAAG,GAAIA,EAAG,GAE3B,GApFE,EAAE/R,GAAKE,ICDF,SAAS+R,GAAa1Q,EAAQ2Q,EAAQpO,EAAOkO,EAAWG,EAAIC,GACjE,GAAKtO,EAAL,CACA,IAAIuO,EAAY5R,EAAIyR,GAChBI,EAAYxR,EAAIoR,GAChBtI,EAAOoI,EAAYlO,EACb,MAANqO,GACFA,EAAKD,EAASF,EAAY5R,EAC1BgS,EAAKF,EAAStI,EAAO,IAErBuI,EAAKI,GAAaF,EAAWF,GAC7BC,EAAKG,GAAaF,EAAWD,IACzBJ,EAAY,EAAIG,EAAKC,EAAKD,EAAKC,KAAID,GAAMH,EAAY5R,IAE3D,IAAK,IAAIkC,EAAO0F,EAAImK,EAAIH,EAAY,EAAIhK,EAAIoK,EAAKpK,EAAIoK,EAAIpK,GAAK4B,EAC5DtH,EAAQqM,GAAU,CAAC0D,GAAYC,EAAY7R,EAAIuH,IAAKsK,EAAYxR,EAAIkH,KACpEzG,EAAOe,MAAMA,EAAM,GAAIA,EAAM,GAdb,CAgBpB,CAGA,SAASiQ,GAAaF,EAAW/P,IAC/BA,EAAQsM,GAAUtM,IAAc,IAAM+P,EACtCnD,GAA0B5M,GAC1B,IrBJmBlD,EqBIf8S,GrBJe9S,GqBIAkD,EAAM,IrBHd,EAAI,EAAIlD,GAAK,EAAIY,EAAKN,KAAK8S,KAAKpT,GqBI3C,SAAUkD,EAAM,GAAK,GAAK4P,EAASA,GAAU9R,EAAMN,GAAWM,CAChE,CCzBA,IAAIqS,GAAU,IAAKC,IAAWD,GAKf,SAASE,GAAc1L,EAAIC,EAAIC,EAAIC,GAEhD,SAASwL,EAAQxT,EAAGG,GAClB,OAAO0H,GAAM7H,GAAKA,GAAK+H,GAAMD,GAAM3H,GAAKA,GAAK6H,CAC/C,CAEA,SAASW,EAAYuH,EAAMyC,EAAIC,EAAWzQ,GACxC,IAAI0C,EAAI,EAAG4O,EAAK,EAChB,GAAY,MAARvD,IACIrL,EAAI6O,EAAOxD,EAAM0C,OAAiBa,EAAKC,EAAOf,EAAIC,KACnDe,EAAazD,EAAMyC,GAAM,EAAIC,EAAY,EAC9C,GAAGzQ,EAAOe,MAAY,IAAN2B,GAAiB,IAANA,EAAUgD,EAAKE,EAAIlD,EAAI,EAAImD,EAAKF,UACnDjD,GAAKA,EAAI+N,EAAY,GAAK,KAAOa,QAEzCtR,EAAOe,MAAMyP,EAAG,GAAIA,EAAG,GAE3B,CAEA,SAASe,EAAOzT,EAAG2S,GACjB,OAAOrS,EAAIN,EAAE,GAAK4H,GAAMnH,EAAUkS,EAAY,EAAI,EAAI,EAChDrS,EAAIN,EAAE,GAAK8H,GAAMrH,EAAUkS,EAAY,EAAI,EAAI,EAC/CrS,EAAIN,EAAE,GAAK6H,GAAMpH,EAAUkS,EAAY,EAAI,EAAI,EAC/CA,EAAY,EAAI,EAAI,CAC5B,CAEA,SAAShE,EAAoB/J,EAAGC,GAC9B,OAAO6O,EAAa9O,EAAE7E,EAAG8E,EAAE9E,EAC7B,CAEA,SAAS2T,EAAa9O,EAAGC,GACvB,IAAI8O,EAAKF,EAAO7O,EAAG,GACfgP,EAAKH,EAAO5O,EAAG,GACnB,OAAO8O,IAAOC,EAAKD,EAAKC,EACX,IAAPD,EAAW9O,EAAE,GAAKD,EAAE,GACb,IAAP+O,EAAW/O,EAAE,GAAKC,EAAE,GACb,IAAP8O,EAAW/O,EAAE,GAAKC,EAAE,GACpBA,EAAE,GAAKD,EAAE,EACjB,CAEA,OAAO,SAAS1C,GACd,IAEImD,EACAiL,EACAC,EACAsD,EAAKC,EAAKC,EACVC,EAAIC,EAAIC,EACRC,EACAjC,EARAkC,EAAelS,EACfmS,EAAe5D,KASf6D,EAAa,CACfrR,MAAOA,EACPY,UAgDF,WACEyQ,EAAWrR,MAAQsR,EACfjE,GAASA,EAAQ/V,KAAKgW,EAAO,IACjC4D,GAAQ,EACRD,GAAK,EACLF,EAAKC,EAAK5B,GACZ,EArDEvO,QA0DF,WACMuB,IACFkP,EAAUV,EAAKC,GACXC,GAAOG,GAAIG,EAAarG,SAC5B3I,EAAS9K,KAAK8Z,EAAalG,WAE7BmG,EAAWrR,MAAQA,EACfiR,GAAIE,EAAatQ,SACvB,EAjEEC,aAuBF,WACEqQ,EAAeC,EAAchP,EAAW,GAAIiL,EAAU,GAAI4B,GAAQ,CACpE,EAxBElO,WA0BF,WACE,IAAI4K,EApBN,WAGE,IAFA,IAAIqC,EAAU,EAEL5T,EAAI,EAAGmD,EAAI8P,EAAQtU,OAAQqB,EAAImD,IAAKnD,EAC3C,IAAK,IAAgEmX,EAAIhB,EAAhEjD,EAAOD,EAAQjT,GAAI4C,EAAI,EAAG8N,EAAIwC,EAAKvU,OAAQiH,EAAQsN,EAAK,GAAYkE,EAAKxR,EAAM,GAAIyR,EAAKzR,EAAM,GAAIhD,EAAI8N,IAAK9N,EAClHuU,EAAKC,EAAIjB,EAAKkB,EAAqBD,GAAjBxR,EAAQsN,EAAKtQ,IAAe,GAAIyU,EAAKzR,EAAM,GACzDuQ,GAAMzL,EAAU2M,EAAK3M,IAAO0M,EAAKD,IAAOzM,EAAKyL,IAAOkB,EAAKlB,IAAO5L,EAAK4M,MAAOvD,EACrEyD,GAAM3M,IAAO0M,EAAKD,IAAOzM,EAAKyL,IAAOkB,EAAKlB,IAAO5L,EAAK4M,MAAOvD,EAI5E,OAAOA,CACT,CAQoB0D,GACdC,EAAc1C,GAAStD,EACvB2E,GAAWlO,EAAW0K,GAAM1K,IAAWrJ,QACvC4Y,GAAerB,KACjBrR,EAAO6B,eACH6Q,IACF1S,EAAO2B,YACP6E,EAAY,KAAM,KAAM,EAAGxG,GAC3BA,EAAO4B,WAELyP,GACFvB,GAAW3M,EAAUsJ,EAAqBC,EAAalG,EAAaxG,GAEtEA,EAAO8B,cAEToQ,EAAelS,EAAQmD,EAAWiL,EAAUC,EAAO,IACrD,GAxCA,SAAStN,EAAMlD,EAAGG,GACZqT,EAAQxT,EAAGG,IAAIkU,EAAanR,MAAMlD,EAAGG,EAC3C,CA6DA,SAASqU,EAAUxU,EAAGG,GACpB,IAAIwO,EAAI6E,EAAQxT,EAAGG,GAEnB,GADIoQ,GAASC,EAAKhW,KAAK,CAACwF,EAAGG,IACvBiU,EACFN,EAAM9T,EAAG+T,EAAM5T,EAAG6T,EAAMrF,EACxByF,GAAQ,EACJzF,IACF0F,EAAavQ,YACbuQ,EAAanR,MAAMlD,EAAGG,SAGxB,GAAIwO,GAAKwF,EAAIE,EAAanR,MAAMlD,EAAGG,OAC9B,CACH,IAAI0E,EAAI,CAACoP,EAAK3T,KAAKoK,IAAI4I,GAAShT,KAAKwU,IAAIzB,GAASY,IAAMC,EAAK5T,KAAKoK,IAAI4I,GAAShT,KAAKwU,IAAIzB,GAASa,KAC7FpP,EAAI,CAAC9E,EAAIM,KAAKoK,IAAI4I,GAAShT,KAAKwU,IAAIzB,GAASrT,IAAKG,EAAIG,KAAKoK,IAAI4I,GAAShT,KAAKwU,IAAIzB,GAASlT,MClJzF,SAAS0E,EAAGC,EAAG+C,EAAIC,EAAIC,EAAIC,GACxC,IAQI+M,EARAC,EAAKnQ,EAAE,GACPoQ,EAAKpQ,EAAE,GAGPkO,EAAK,EACLC,EAAK,EACLhI,EAJKlG,EAAE,GAIGkQ,EACVnK,EAJK/F,EAAE,GAIGmQ,EAId,GADAF,EAAIlN,EAAKmN,EACJhK,KAAM+J,EAAI,GAAf,CAEA,GADAA,GAAK/J,EACDA,EAAK,EAAG,CACV,GAAI+J,EAAIhC,EAAI,OACRgC,EAAI/B,IAAIA,EAAK+B,EACnB,MAAO,GAAI/J,EAAK,EAAG,CACjB,GAAI+J,EAAI/B,EAAI,OACR+B,EAAIhC,IAAIA,EAAKgC,EACnB,CAGA,GADAA,EAAIhN,EAAKiN,EACJhK,KAAM+J,EAAI,GAAf,CAEA,GADAA,GAAK/J,EACDA,EAAK,EAAG,CACV,GAAI+J,EAAI/B,EAAI,OACR+B,EAAIhC,IAAIA,EAAKgC,EACnB,MAAO,GAAI/J,EAAK,EAAG,CACjB,GAAI+J,EAAIhC,EAAI,OACRgC,EAAI/B,IAAIA,EAAK+B,EACnB,CAGA,GADAA,EAAIjN,EAAKmN,EACJpK,KAAMkK,EAAI,GAAf,CAEA,GADAA,GAAKlK,EACDA,EAAK,EAAG,CACV,GAAIkK,EAAIhC,EAAI,OACRgC,EAAI/B,IAAIA,EAAK+B,EACnB,MAAO,GAAIlK,EAAK,EAAG,CACjB,GAAIkK,EAAI/B,EAAI,OACR+B,EAAIhC,IAAIA,EAAKgC,EACnB,CAGA,GADAA,EAAI/M,EAAKiN,EACJpK,KAAMkK,EAAI,GAAf,CAEA,GADAA,GAAKlK,EACDA,EAAK,EAAG,CACV,GAAIkK,EAAI/B,EAAI,OACR+B,EAAIhC,IAAIA,EAAKgC,EACnB,MAAO,GAAIlK,EAAK,EAAG,CACjB,GAAIkK,EAAIhC,EAAI,OACRgC,EAAI/B,IAAIA,EAAK+B,EACnB,CAIA,OAFIhC,EAAK,IAAGlO,EAAE,GAAKmQ,EAAKjC,EAAK/H,EAAInG,EAAE,GAAKoQ,EAAKlC,EAAKlI,GAC9CmI,EAAK,IAAGlO,EAAE,GAAKkQ,EAAKhC,EAAKhI,EAAIlG,EAAE,GAAKmQ,EAAKjC,EAAKnI,IAC3C,CAZiB,CAXA,CAXA,CAXA,CA8C1B,CDyFcwF,CAASxL,EAAGC,EAAG+C,EAAIC,EAAIC,EAAIC,GAQpB2G,IACT0F,EAAavQ,YACbuQ,EAAanR,MAAMlD,EAAGG,GACtBgS,GAAQ,IAVHgC,IACHE,EAAavQ,YACbuQ,EAAanR,MAAM2B,EAAE,GAAIA,EAAE,KAE7BwP,EAAanR,MAAM4B,EAAE,GAAIA,EAAE,IACtB6J,GAAG0F,EAAatQ,UACrBoO,GAAQ,EAMZ,CAEF8B,EAAKjU,EAAGkU,EAAK/T,EAAGgU,EAAKxF,CACvB,CAEA,OAAO4F,CACT,CACF,CEvKA,SAAevU,GAAKA,ECMb,SAASkV,GAAYC,GAC1B,OAAO,SAAShT,GACd,IAAIqD,EAAI,IAAI4P,GACZ,IAAK,IAAIC,KAAOF,EAAS3P,EAAE6P,GAAOF,EAAQE,GAE1C,OADA7P,EAAErD,OAASA,EACJqD,CACT,CACF,CAEA,SAAS4P,KAAmB,CAE5BA,GAAgBE,UAAY,CAC1Bpb,YAAakb,GACblS,MAAO,SAASlD,EAAGG,GAAK7F,KAAK6H,OAAOe,MAAMlD,EAAGG,EAAI,EACjD4C,OAAQ,WAAazI,KAAK6H,OAAOY,QAAU,EAC3Ce,UAAW,WAAaxJ,KAAK6H,OAAO2B,WAAa,EACjDC,QAAS,WAAazJ,KAAK6H,OAAO4B,SAAW,EAC7CC,aAAc,WAAa1J,KAAK6H,OAAO6B,cAAgB,EACvDC,WAAY,WAAa3J,KAAK6H,OAAO8B,YAAc,GCtBrD,IAAI4D,GAAK0N,IACLzN,GAAKD,GACLE,IAAMF,GACNG,GAAKD,GAELyN,GAAe,CACjBtS,MAYF,SAAqBlD,EAAGG,GAClBH,EAAI6H,KAAIA,GAAK7H,GACbA,EAAI+H,KAAIA,GAAK/H,GACbG,EAAI2H,KAAIA,GAAK3H,GACbA,EAAI6H,KAAIA,GAAK7H,EACnB,EAhBE2D,UAAW7B,EACX8B,QAAS9B,EACT+B,aAAc/B,EACdgC,WAAYhC,EACZmM,OAAQ,WACN,IAAIqH,EAAS,CAAC,CAAC5N,GAAIC,IAAK,CAACC,GAAIC,KAE7B,OADAD,GAAKC,KAAOF,GAAKD,GAAK0N,KACfE,CACT,GAUF,YCxBA,SAASC,GAAI5W,EAAY6W,EAAW/S,GAClC,IAAImM,EAAOjQ,EAAW8W,YAAc9W,EAAW8W,aAM/C,OALA9W,EAAW+W,MAAM,KAAKC,UAAU,CAAC,EAAG,IACxB,MAAR/G,GAAcjQ,EAAW8W,WAAW,MACxCG,EAAUnT,EAAQ9D,EAAWqD,OAAOqT,KACpCG,EAAUH,GAAapH,UACX,MAARW,GAAcjQ,EAAW8W,WAAW7G,GACjCjQ,CACT,CAEO,SAASkX,GAAUlX,EAAYiN,EAAQnJ,GAC5C,OAAO8S,GAAI5W,GAAY,SAASgG,GAC9B,IAAImR,EAAIlK,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC7BmK,EAAInK,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC7BrD,EAAIpI,KAAKwU,IAAImB,GAAKnR,EAAE,GAAG,GAAKA,EAAE,GAAG,IAAKoR,GAAKpR,EAAE,GAAG,GAAKA,EAAE,GAAG,KAC1D9E,GAAK+L,EAAO,GAAG,IAAMkK,EAAIvN,GAAK5D,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACpD3E,GAAK4L,EAAO,GAAG,IAAMmK,EAAIxN,GAAK5D,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACxDhG,EAAW+W,MAAM,IAAMnN,GAAGoN,UAAU,CAAC9V,EAAGG,GAC1C,GAAGyC,EACL,CClBA,IAAIuT,GAAW,GACXC,GAAiB/U,EAAI,GAAKH,GAEf,YAASmV,EAASC,GAC/B,OAAQA,EAYV,SAAkBD,EAASC,GAEzB,SAASC,EAAe1O,EAAIC,EAAIvF,EAASkS,EAAIC,EAAI8B,EAAIzO,EAAIC,EAAIsJ,EAASmC,EAAIkB,EAAI8B,EAAIC,EAAOvU,GACvF,IAAI6I,EAAKjD,EAAKF,EACVgD,EAAK7C,EAAKF,EACV6O,EAAK3L,EAAKA,EAAKH,EAAKA,EACxB,GAAI8L,EAAK,EAAIL,GAAUI,IAAS,CAC9B,IAAI7R,EAAI4P,EAAKhB,EACT3O,EAAI4P,EAAKC,EACTiC,EAAIJ,EAAKC,EACTzI,EAAInM,EAAKgD,EAAIA,EAAIC,EAAIA,EAAI8R,EAAIA,GAC7BC,EAAO9U,EAAK6U,GAAK5I,GACjB8I,EAAUvW,EAAIA,EAAIqW,GAAK,GAAKlW,GAAWH,EAAIgC,EAAU+O,GAAW5Q,GAAW6B,EAAU+O,GAAW,EAAIlQ,EAAM0D,EAAGD,GAC7G5E,EAAIoW,EAAQS,EAASD,GACrBE,EAAK9W,EAAE,GACP+W,EAAK/W,EAAE,GACPgX,EAAMF,EAAKlP,EACXqP,EAAMF,EAAKlP,EACXqP,EAAKtM,EAAKoM,EAAMjM,EAAKkM,GACrBC,EAAKA,EAAKR,EAAKL,GACZ/V,GAAKyK,EAAKiM,EAAMpM,EAAKqM,GAAOP,EAAK,IAAO,IACxClC,EAAKhB,EAAKiB,EAAKC,EAAK6B,EAAKC,EAAKL,MACnCG,EAAe1O,EAAIC,EAAIvF,EAASkS,EAAIC,EAAI8B,EAAIO,EAAIC,EAAIF,EAASjS,GAAKmJ,EAAGlJ,GAAKkJ,EAAG4I,EAAGF,EAAOvU,GACvFA,EAAOe,MAAM6T,EAAIC,GACjBT,EAAeQ,EAAIC,EAAIF,EAASjS,EAAGC,EAAG8R,EAAG7O,EAAIC,EAAIsJ,EAASmC,EAAIkB,EAAI8B,EAAIC,EAAOvU,GAEjF,CACF,CACA,OAAO,SAASA,GACd,IAAIiV,EAAUC,EAAKC,EAAKC,EAAKC,EAAKC,EAC9BlV,EAASsF,EAAIC,EAAI2M,EAAIC,EAAI8B,EAEzBkB,EAAiB,CACnBxU,MAAOA,EACPY,UAAWA,EACXC,QAASA,EACTC,aAAc,WAAa7B,EAAO6B,eAAgB0T,EAAe5T,UAAYgN,CAAW,EACxF7M,WAAY,WAAa9B,EAAO8B,aAAcyT,EAAe5T,UAAYA,CAAW,GAGtF,SAASZ,EAAMlD,EAAGG,GAChBH,EAAIqW,EAAQrW,EAAGG,GACfgC,EAAOe,MAAMlD,EAAE,GAAIA,EAAE,GACvB,CAEA,SAAS8D,IACP+D,EAAKyK,IACLoF,EAAexU,MAAQsR,EACvBrS,EAAO2B,WACT,CAEA,SAAS0Q,EAAUnQ,EAAQC,GACzB,IAAIsS,EAAIpH,GAAU,CAACnL,EAAQC,IAAOrE,EAAIoW,EAAQhS,EAAQC,GACtDiS,EAAe1O,EAAIC,EAAIvF,EAASkS,EAAIC,EAAI8B,EAAI3O,EAAK5H,EAAE,GAAI6H,EAAK7H,EAAE,GAAIsC,EAAU8B,EAAQoQ,EAAKmC,EAAE,GAAIlC,EAAKkC,EAAE,GAAIJ,EAAKI,EAAE,GAAIT,GAAUhU,GAC/HA,EAAOe,MAAM2E,EAAIC,EACnB,CAEA,SAAS/D,IACP2T,EAAexU,MAAQA,EACvBf,EAAO4B,SACT,CAEA,SAAS+M,IACPhN,IACA4T,EAAexU,MAAQyU,EACvBD,EAAe3T,QAAUgN,CAC3B,CAEA,SAAS4G,EAAUtT,EAAQC,GACzBkQ,EAAU4C,EAAW/S,EAAQC,GAAM+S,EAAMxP,EAAIyP,EAAMxP,EAAIyP,EAAM9C,EAAI+C,EAAM9C,EAAI+C,EAAMjB,EACjFkB,EAAexU,MAAQsR,CACzB,CAEA,SAASzD,IACPwF,EAAe1O,EAAIC,EAAIvF,EAASkS,EAAIC,EAAI8B,EAAIa,EAAKC,EAAKF,EAAUG,EAAKC,EAAKC,EAAKtB,GAAUhU,GACzFuV,EAAe3T,QAAUA,EACzBA,GACF,CAEA,OAAO2T,CACT,CACF,CA7FmBE,CAASvB,EAASC,GAGrC,SAAsBD,GACpB,OAAOnB,GAAY,CACjBhS,MAAO,SAASlD,EAAGG,GACjBH,EAAIqW,EAAQrW,EAAGG,GACf7F,KAAK6H,OAAOe,MAAMlD,EAAE,GAAIA,EAAE,GAC5B,GAEJ,CAV+C6X,CAAaxB,EAC5D,CCEA,IAAIyB,GAAmB5C,GAAY,CACjChS,MAAO,SAASlD,EAAGG,GACjB7F,KAAK6H,OAAOe,MAAMlD,EAAIkB,EAASf,EAAIe,EACrC,IAuBF,SAAS6W,GAAqBrP,EAAGsC,EAAIH,EAAImN,EAAIC,EAAIC,GAC/C,IAAKA,EAAO,OAZd,SAAwBxP,EAAGsC,EAAIH,EAAImN,EAAIC,GACrC,SAASE,EAAUnY,EAAGG,GAEpB,MAAO,CAAC6K,EAAKtC,GADb1I,GAAKgY,GACenN,EAAKnC,GADhBvI,GAAK8X,GAEhB,CAIA,OAHAE,EAAUvQ,OAAS,SAAS5H,EAAGG,GAC7B,MAAO,EAAEH,EAAIgL,GAAMtC,EAAIsP,GAAKnN,EAAK1K,GAAKuI,EAAIuP,EAC5C,EACOE,CACT,CAGqBC,CAAe1P,EAAGsC,EAAIH,EAAImN,EAAIC,GACjD,IAAII,EAAWhX,EAAI6W,GACfI,EAAW5W,EAAIwW,GACfrT,EAAIwT,EAAW3P,EACf5D,EAAIwT,EAAW5P,EACf6P,EAAKF,EAAW3P,EAChB8P,EAAKF,EAAW5P,EAChB+P,GAAMH,EAAWzN,EAAKwN,EAAWrN,GAAMtC,EACvCgQ,GAAMJ,EAAWtN,EAAKqN,EAAWxN,GAAMnC,EAC3C,SAASyP,EAAUnY,EAAGG,GAEpB,MAAO,CAAC0E,GADR7E,GAAKgY,GACWlT,GADP3E,GAAK8X,GACUjN,EAAIH,EAAK/F,EAAI9E,EAAI6E,EAAI1E,EAC/C,CAIA,OAHAgY,EAAUvQ,OAAS,SAAS5H,EAAGG,GAC7B,MAAO,CAAC6X,GAAMO,EAAKvY,EAAIwY,EAAKrY,EAAIsY,GAAKR,GAAMS,EAAKF,EAAKxY,EAAIuY,EAAKpY,GAChE,EACOgY,CACT,CAEe,SAASrZ,GAAWuX,GACjC,OAGK,SAA2BsC,GAChC,IAAItC,EAI+CuC,EAKpC9Q,EAAIC,EAAIC,EAEnB6Q,EACAC,EACAC,EACAC,EACAC,EAdAvQ,EAAI,IACJ1I,EAAI,IAAKG,EAAI,IACbkE,EAAS,EAAGC,EAAM,EAClB8I,EAAc,EAAGC,EAAW,EAAGC,EAAa,EAC5C4K,EAAQ,EACRF,EAAK,EACLC,EAAK,EACLiB,EAAQ,KAAMC,EAAUC,GACxBvR,EAAK,KAAkBwR,EAAWC,GAClChD,EAAS,GAOb,SAASxX,EAAWoE,GAClB,OAAO6V,EAAuB7V,EAAM,GAAKhC,EAASgC,EAAM,GAAKhC,EAC/D,CAEA,SAAS0G,EAAO1E,GAEd,OADAA,EAAQ6V,EAAuBnR,OAAO1E,EAAM,GAAIA,EAAM,MACtC,CAACA,EAAM,GAAKjC,EAASiC,EAAM,GAAKjC,EAClD,CAsEA,SAASsY,IACP,IAAIC,EAASzB,GAAqBrP,EAAG,EAAG,EAAGsP,EAAIC,EAAIC,GAAOuB,MAAM,KAAMpD,EAAQhS,EAAQC,IAClF6T,EAAYJ,GAAqBrP,EAAG1I,EAAIwZ,EAAO,GAAIrZ,EAAIqZ,EAAO,GAAIxB,EAAIC,EAAIC,GAK9E,OAJAU,EAASzL,GAAcC,EAAaC,EAAUC,GAC9CwL,EAAmB9L,GAAQqJ,EAAS8B,GACpCY,EAAyB/L,GAAQ4L,EAAQE,GACzCD,EAAkBjB,GAASkB,EAAkBxC,GACtCoD,GACT,CAEA,SAASA,IAEP,OADAV,EAAQC,EAAc,KACfna,CACT,CAEA,OAnFAA,EAAWqD,OAAS,SAASA,GAC3B,OAAO6W,GAASC,IAAgB9W,EAAS6W,EAAQA,EAAQlB,GAxE7D,SAAyBc,GACvB,OAAO1D,GAAY,CACjBhS,MAAO,SAASlD,EAAGG,GACjB,IAAI4U,EAAI6D,EAAO5Y,EAAGG,GAClB,OAAO7F,KAAK6H,OAAOe,MAAM6R,EAAE,GAAIA,EAAE,GACnC,GAEJ,CAiE8E4E,CAAgBf,EAAhBe,CAAwBR,EAAQN,EAAgBQ,EAASJ,EAAc9W,MACnJ,EAEArD,EAAWqa,QAAU,SAASnN,GAC5B,OAAOvB,UAAUxO,QAAUkd,EAAUnN,EAAGkN,OAAQ/d,EAAWue,KAAWP,CACxE,EAEAra,EAAWua,SAAW,SAASrN,GAC7B,OAAOvB,UAAUxO,QAAUod,EAAWrN,EAAGnE,EAAKC,EAAKC,EAAKC,EAAK,KAAM0R,KAAWL,CAChF,EAEAva,EAAWqG,UAAY,SAAS6G,GAC9B,OAAOvB,UAAUxO,QAAUkd,GAAWnN,EC/F3B,SAAS8G,GACtB,IAAI8G,EAAKvY,EAAIyR,GACTpO,EAAQ,EAAIxD,EACZ2Y,EAAcD,EAAK,EACnBE,EAAgBvZ,EAAIqZ,GAAMlZ,EAM9B,SAAS8S,EAAQnP,EAAQC,GACvB,OAAOjD,EAAIgD,GAAUhD,EAAIiD,GAAOsV,CAClC,CAiFA,SAASG,EAAUlV,EAAGC,EAAGkV,GACvB,IAKIC,EAAK,CAAC,EAAG,EAAG,GACZC,EAAKxK,GANAF,GAAU3K,GACV2K,GAAU1K,IAMfqV,EAAO1K,GAAayK,EAAIA,GACxBE,EAAOF,EAAG,GACVG,EAAcF,EAAOC,EAAOA,EAGhC,IAAKC,EAAa,OAAQL,GAAOnV,EAEjC,IAAI4R,EAAMmD,EAAKO,EAAOE,EAClBC,GAAMV,EAAKQ,EAAOC,EAClBE,EAAQ7K,GAAeuK,EAAIC,GAC3BpR,EAAI8G,GAAeqK,EAAIxD,GAE3B9G,GAAoB7G,EADZ8G,GAAesK,EAAII,IAI3B,IAAIE,EAAID,EACJtE,EAAIxG,GAAa3G,EAAG0R,GACpBC,EAAKhL,GAAa+K,EAAGA,GACrBE,EAAKzE,EAAIA,EAAIwE,GAAMhL,GAAa3G,EAAGA,GAAK,GAE5C,KAAI4R,EAAK,GAAT,CAEA,IAAI9R,EAAI/G,EAAK6Y,GACTC,EAAI/K,GAAe4K,IAAKvE,EAAIrN,GAAK6R,GAIrC,GAHA9K,GAAoBgL,EAAG7R,GACvB6R,EAAIpL,GAAUoL,IAETX,EAAK,OAAOW,EAGjB,IAII/V,EAJArC,EAAUsC,EAAE,GACZyM,EAAUxM,EAAE,GACZuM,EAAOxM,EAAE,GACT6M,EAAO5M,EAAE,GAGTwM,EAAU/O,IAASqC,EAAIrC,EAASA,EAAU+O,EAASA,EAAU1M,GAEjE,IAAIF,EAAQ4M,EAAU/O,EAClBqY,EAAQra,EAAImE,EAAQ9D,GAAMF,EAM9B,IAHKka,GAASlJ,EAAOL,IAAMzM,EAAIyM,EAAMA,EAAOK,EAAMA,EAAO9M,GAF1CgW,GAASlW,EAAQhE,EAM1Bka,EACEvJ,EAAOK,EAAO,EAAIiJ,EAAE,IAAMpa,EAAIoa,EAAE,GAAKpY,GAAW7B,EAAU2Q,EAAOK,GACjEL,GAAQsJ,EAAE,IAAMA,EAAE,IAAMjJ,EAC1BhN,EAAQ9D,GAAM2B,GAAWoY,EAAE,IAAMA,EAAE,IAAMrJ,GAAU,CACvD,IAAIuJ,EAAKjL,GAAe4K,IAAKvE,EAAIrN,GAAK6R,GAEtC,OADA9K,GAAoBkL,EAAI/R,GACjB,CAAC6R,EAAGpL,GAAUsL,GACvB,CAjCkB,CAkCpB,CAIA,SAASC,EAAKzW,EAAQC,GACpB,IAAIyQ,EAAI8E,EAAc/G,EAASlS,EAAKkS,EAChCgI,EAAO,EAKX,OAJIzW,GAAU0Q,EAAG+F,GAAQ,EAChBzW,EAAS0Q,IAAG+F,GAAQ,GACzBxW,GAAOyQ,EAAG+F,GAAQ,EACbxW,EAAMyQ,IAAG+F,GAAQ,GACnBA,CACT,CAEA,OAAO/L,GAAKyE,GAvJZ,SAAkBrR,GAChB,IAAIiP,EACAoF,EACAuE,EACAC,EACA7I,EACJ,MAAO,CACLrO,UAAW,WACTkX,EAAMD,GAAK,EACX5I,EAAQ,CACV,EACAjP,MAAO,SAASmB,EAAQC,GACtB,IACI2W,EADAxJ,EAAS,CAACpN,EAAQC,GAElBqK,EAAI6E,EAAQnP,EAAQC,GACpBsS,EAAIiD,EACAlL,EAAI,EAAImM,EAAKzW,EAAQC,GACrBqK,EAAImM,EAAKzW,GAAUA,EAAS,EAAIzD,GAAMA,GAAK0D,GAAO,EAO1D,IANK8M,IAAW4J,EAAMD,EAAKpM,IAAIxM,EAAO2B,YAClC6K,IAAMoM,MACRE,EAASlB,EAAU3I,EAAQK,KACZxC,GAAWmC,EAAQ6J,IAAWhM,GAAWwC,EAAQwJ,MAC9DxJ,EAAO,GAAK,GAEZ9C,IAAMoM,EACR5I,EAAQ,EACJxD,GAEFxM,EAAO2B,YACPmX,EAASlB,EAAUtI,EAAQL,GAC3BjP,EAAOe,MAAM+X,EAAO,GAAIA,EAAO,MAG/BA,EAASlB,EAAU3I,EAAQK,GAC3BtP,EAAOe,MAAM+X,EAAO,GAAIA,EAAO,GAAI,GACnC9Y,EAAO4B,WAETqN,EAAS6J,OACJ,GAAInB,GAAiB1I,GAAUyI,EAAclL,EAAG,CACrD,IAAI/F,EAGEgO,EAAIJ,KAAQ5N,EAAImR,EAAUtI,EAAQL,GAAQ,MAC9Ce,EAAQ,EACJ0H,GACF1X,EAAO2B,YACP3B,EAAOe,MAAM0F,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC3BzG,EAAOe,MAAM0F,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC3BzG,EAAO4B,YAEP5B,EAAOe,MAAM0F,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC3BzG,EAAO4B,UACP5B,EAAO2B,YACP3B,EAAOe,MAAM0F,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAI,IAGrC,EACI+F,GAAOyC,GAAWnC,GAAWmC,EAAQK,IACvCtP,EAAOe,MAAMuO,EAAO,GAAIA,EAAO,IAEjCL,EAASK,EAAQsJ,EAAKpM,EAAG6H,EAAKI,CAChC,EACA7S,QAAS,WACHgX,GAAI5Y,EAAO4B,UACfqN,EAAS,IACX,EAGAe,MAAO,WACL,OAAOA,GAAU6I,GAAOD,IAAO,CACjC,EAEJ,IApFA,SAAqB7K,EAAMyC,EAAIC,EAAWzQ,GACxC0Q,GAAa1Q,EAAQ2Q,EAAQpO,EAAOkO,EAAW1C,EAAMyC,EACvD,GAiK4CkH,EAAc,CAAC,GAAI/G,GAAU,EAAElS,EAAIkS,EAASlS,GAC1F,CD3E8Csa,CAAWhC,EAAQlN,EAAI9K,IAAYgY,EAAQ,KAAME,IAAmBM,KAAWR,EAAQjY,CACnI,EAEAnC,EAAW8W,WAAa,SAAS5J,GAC/B,OAAOvB,UAAUxO,QAAUod,EAAgB,MAALrN,GAAanE,EAAKC,EAAKC,EAAKC,EAAK,KAAMsR,IAAY/F,GAAc1L,GAAMmE,EAAE,GAAG,GAAIlE,GAAMkE,EAAE,GAAG,GAAIjE,GAAMiE,EAAE,GAAG,GAAIhE,GAAMgE,EAAE,GAAG,IAAK0N,KAAiB,MAAN7R,EAAa,KAAO,CAAC,CAACA,EAAIC,GAAK,CAACC,EAAIC,GACrN,EAEAlJ,EAAW+W,MAAQ,SAAS7J,GAC1B,OAAOvB,UAAUxO,QAAUyM,GAAKsD,EAAGuN,KAAc7Q,CACnD,EAEA5J,EAAWgX,UAAY,SAAS9J,GAC9B,OAAOvB,UAAUxO,QAAU+D,GAAKgM,EAAE,GAAI7L,GAAK6L,EAAE,GAAIuN,KAAc,CAACvZ,EAAGG,EACrE,EAEArB,EAAW0a,OAAS,SAASxN,GAC3B,OAAOvB,UAAUxO,QAAUoI,EAAS2H,EAAE,GAAK,IAAM9K,EAASoD,EAAM0H,EAAE,GAAK,IAAM9K,EAASqY,KAAc,CAAClV,EAASpD,EAASqD,EAAMrD,EAC/H,EAEAnC,EAAW8Z,OAAS,SAAS5M,GAC3B,OAAOvB,UAAUxO,QAAUmR,EAAcpB,EAAE,GAAK,IAAM9K,EAASmM,EAAWrB,EAAE,GAAK,IAAM9K,EAASoM,EAAatB,EAAE/P,OAAS,EAAI+P,EAAE,GAAK,IAAM9K,EAAU,EAAGqY,KAAc,CAACnM,EAAcnM,EAASoM,EAAWpM,EAASqM,EAAarM,EAC/N,EAEAnC,EAAWmS,MAAQ,SAASjF,GAC1B,OAAOvB,UAAUxO,QAAUic,EAAQlM,EAAI,IAAM9K,EAASqY,KAAcrB,EAAQjX,CAC9E,EAEAnC,EAAWqc,SAAW,SAASnP,GAC7B,OAAOvB,UAAUxO,QAAU+b,EAAKhM,GAAK,EAAI,EAAGuN,KAAcvB,EAAK,CACjE,EAEAlZ,EAAWsc,SAAW,SAASpP,GAC7B,OAAOvB,UAAUxO,QAAUgc,EAAKjM,GAAK,EAAI,EAAGuN,KAActB,EAAK,CACjE,EAEAnZ,EAAWsG,UAAY,SAAS4G,GAC9B,OAAOvB,UAAUxO,QAAU4c,EAAkBjB,GAASkB,EAAkBxC,EAAStK,EAAIA,GAAI0N,KAAW7X,EAAKyU,EAC3G,EAEAxX,EAAWkX,UAAY,SAASjK,EAAQnJ,GACtC,OAAOoT,GAAUlX,EAAYiN,EAAQnJ,EACvC,EAEA9D,EAAWuc,QAAU,SAASC,EAAM1Y,GAClC,OFzHG,SAAiB9D,EAAYwc,EAAM1Y,GACxC,OAAOoT,GAAUlX,EAAY,CAAC,CAAC,EAAG,GAAIwc,GAAO1Y,EAC/C,CEuHWyY,CAAQvc,EAAYwc,EAAM1Y,EACnC,EAEA9D,EAAWyc,SAAW,SAASC,EAAO5Y,GACpC,OFzHG,SAAkB9D,EAAY0c,EAAO5Y,GAC1C,OAAO8S,GAAI5W,GAAY,SAASgG,GAC9B,IAAImR,GAAKuF,EACL9S,EAAIuN,GAAKnR,EAAE,GAAG,GAAKA,EAAE,GAAG,IACxB9E,GAAKiW,EAAIvN,GAAK5D,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACpC3E,GAAKuI,EAAI5D,EAAE,GAAG,GAClBhG,EAAW+W,MAAM,IAAMnN,GAAGoN,UAAU,CAAC9V,EAAGG,GAC1C,GAAGyC,EACL,CEiHW2Y,CAASzc,EAAY0c,EAAO5Y,EACrC,EAEA9D,EAAW2c,UAAY,SAASC,EAAQ9Y,GACtC,OFnHG,SAAmB9D,EAAY4c,EAAQ9Y,GAC5C,OAAO8S,GAAI5W,GAAY,SAASgG,GAC9B,IAAIoR,GAAKwF,EACLhT,EAAIwN,GAAKpR,EAAE,GAAG,GAAKA,EAAE,GAAG,IACxB9E,GAAK0I,EAAI5D,EAAE,GAAG,GACd3E,GAAK+V,EAAIxN,GAAK5D,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACxChG,EAAW+W,MAAM,IAAMnN,GAAGoN,UAAU,CAAC9V,EAAGG,GAC1C,GAAGyC,EACL,CE2GW6Y,CAAU3c,EAAY4c,EAAQ9Y,EACvC,EAiBO,WAGL,OAFAyT,EAAUsC,EAAUc,MAAMnf,KAAMmQ,WAChC3L,EAAW8I,OAASyO,EAAQzO,QAAUA,EAC/B2R,GACT,CACF,CAtHSoC,EAAkB,WAAa,OAAOtF,CAAS,GAA/CsF,EACT,CEvDO,SAASC,GAAYvX,EAAQC,GAClC,MAAO,CAACD,EAAQlH,EAAI2E,GAAKhB,EAASwD,GAAO,IAC3C,CAMe,cACb,OAIK,SAA4B+R,GACjC,IAKevO,EAAIC,EAAIC,EALnBgG,EAAIlP,GAAWuX,GACfmD,EAASxL,EAAEwL,OACX3D,EAAQ7H,EAAE6H,MACVC,EAAY9H,EAAE8H,UACdF,EAAa5H,EAAE4H,WACf/N,EAAK,KAkBT,SAASgU,IACP,IAAInT,EAAI9H,EAAKiV,IACTjN,EAAIoF,EnBqBG,SAAS4K,GAGtB,SAASkD,EAAQ7Y,GAEf,OADAA,EAAc2V,EAAO3V,EAAY,GAAK/B,EAAS+B,EAAY,GAAK/B,IAC7C,IAAMD,EAASgC,EAAY,IAAMhC,EAASgC,CAC/D,CAOA,OAZA2V,EAASzL,GAAcyL,EAAO,GAAK1X,EAAS0X,EAAO,GAAK1X,EAAS0X,EAAO3c,OAAS,EAAI2c,EAAO,GAAK1X,EAAU,GAO3G4a,EAAQlU,OAAS,SAAS3E,GAExB,OADAA,EAAc2V,EAAOhR,OAAO3E,EAAY,GAAK/B,EAAS+B,EAAY,GAAK/B,IACpD,IAAMD,EAASgC,EAAY,IAAMhC,EAASgC,CAC/D,EAEO6Y,CACT,CmBnCcpO,CAASM,EAAE4K,UAAUhR,OAAO,CAAC,EAAG,KAC1C,OAAOgO,EAAiB,MAAN/N,EACZ,CAAC,CAACe,EAAE,GAAKF,EAAGE,EAAE,GAAKF,GAAI,CAACE,EAAE,GAAKF,EAAGE,EAAE,GAAKF,IAAM2N,IAAYuF,GAC3D,CAAC,CAACtb,KAAKoK,IAAI9B,EAAE,GAAKF,EAAGb,GAAKC,GAAK,CAACxH,KAAKwU,IAAIlM,EAAE,GAAKF,EAAGX,GAAKC,IACxD,CAAC,CAACH,EAAIvH,KAAKoK,IAAI9B,EAAE,GAAKF,EAAGZ,IAAM,CAACC,EAAIzH,KAAKwU,IAAIlM,EAAE,GAAKF,EAAGV,KAC/D,CAEA,OAzBAgG,EAAE6H,MAAQ,SAAS7J,GACjB,OAAOvB,UAAUxO,QAAU4Z,EAAM7J,GAAI6P,KAAYhG,GACnD,EAEA7H,EAAE8H,UAAY,SAAS9J,GACrB,OAAOvB,UAAUxO,QAAU6Z,EAAU9J,GAAI6P,KAAY/F,GACvD,EAEA9H,EAAEwL,OAAS,SAASxN,GAClB,OAAOvB,UAAUxO,QAAUud,EAAOxN,GAAI6P,KAAYrC,GACpD,EAEAxL,EAAE4H,WAAa,SAAS5J,GACtB,OAAOvB,UAAUxO,QAAgB,MAAL+P,EAAYnE,EAAKC,EAAKC,EAAKC,EAAK,MAAQH,GAAMmE,EAAE,GAAG,GAAIlE,GAAMkE,EAAE,GAAG,GAAIjE,GAAMiE,EAAE,GAAG,GAAIhE,GAAMgE,EAAE,GAAG,IAAM6P,KAAkB,MAANhU,EAAa,KAAO,CAAC,CAACA,EAAIC,GAAK,CAACC,EAAIC,GACpL,EAWO6T,GACT,CAtCSE,CAAmBH,IACrB/F,MAAM,IAAM7U,EACnB,CAPA4a,GAAYhU,OAAS,SAAS5H,EAAGG,GAC/B,MAAO,CAACH,EAAG,EAAImB,EAAKI,EAAIpB,IAAMW,EAChC,E,eCEM,MAAOkb,WAA6BC,GAAAA,EAC/BC,iBAAAA,GACTlhB,MAAMkhB,oBAEN,MAAMC,EAAK7hB,KAAKgP,MAAM8S,gBAChBrH,EAAIza,KAAK+hB,KAAKC,KAAKhiB,MAQzBya,EAAE,YAAYwH,OAAO,CACpBzd,WAAY0d,KACZC,KAAM,aACNC,KAAM,aACNC,WAAW,EACXC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,aAAc,GACdC,aAAc,EACdC,OAAQ,OACRC,OAAQ,OACRC,gBAAiBC,GAAAA,GAAUA,GAAAA,IAC3BC,YAAaD,GAAAA,GAAUA,GAAAA,IACvBE,cAAe,EACfC,iBAAkB,EAClBC,UAAW,GACXC,oBAAoB,IAGrB,CACC,MAAMtB,EAAOtH,EAAE,WAEfsH,EAAKE,OAAO,CACXnX,UAAW,GACXwY,KAAM,YAGPC,EAAAA,GAAAA,GAASxB,EAAM,SAAUF,EAAI,O,CAG9BpH,EAAE,oBAAoBwH,OAAO,CAC5BuB,eAAe,IAIhB/I,EAAE,kBAAkBwH,OAAO,CAC1BuB,eAAe,EACfC,WAAW,EACXC,UAAU,EACVC,WAAW,IAGZlJ,EAAE,wBAAwBwH,OAAO,CAChC2B,YAAa,GACbC,gBAAiB,EACjBC,cAAe,EACfC,gBAAiB,MAGlBtJ,EAAE,iBAAiBwH,OAAO,CACzBuB,eAAe,IAGhB,CACC,MAAMzB,EAAOtH,EAAE,cAEfsH,EAAKE,OAAO,CACXnX,UAAW,GACXkZ,YAAY,EACZV,KAAM,SACNW,YAAa,EACbzX,SAAU,WACV0X,YAAa,GACbC,cAAe,KAGhBZ,EAAAA,GAAAA,GAASxB,EAAM,OAAQF,EAAI,kBAC3B0B,EAAAA,GAAAA,GAASxB,EAAM,SAAUF,EAAI,a,CAG9BpH,EAAE,SAAU,CAAC,gBAAgBwH,OAAO,CACnCmC,UAAW,EACXC,aAAc,IAGf5J,EAAE,WAAY,CAAC,MAAO,SAAU,OAAQ,SAASwH,OAAO,CACvDvc,EAAG4e,EAAAA,GACHze,EAAGye,EAAAA,GACHC,KAAOtZ,IACNA,EAAQuZ,QAAQ,EAAG,GACnBvZ,EAAQQ,OAAO,EAAG,GAClBR,EAAQuZ,OAAO,GAAI,GACnBvZ,EAAQQ,OAAO,EAAG,EAAE,IAItBgP,EAAE,WAAY,CAAC,MAAO,SAAU,QAAS,SAASwH,OAAO,CACxDvc,EAAG4e,EAAAA,GACHze,EAAGye,EAAAA,GACHC,KAAOtZ,IACNA,EAAQuZ,QAAQ,EAAG,GACnBvZ,EAAQQ,OAAO,EAAG,EAAE,IAWtBgP,EAAE,mBAAmBwH,OAAO,CAC3B/R,KAAM,KAIPuK,EAAE,eAAewH,OAAO,CACvBvc,EAAG+e,EAAAA,GACHC,QAASD,EAAAA,GACT5e,EAAG4e,EAAAA,GACHE,QAASF,EAAAA,GACTG,aAAc,GACdC,cAAe,IAGjB,E,IC1IG9H,GACAC,GACAzP,GACAC,G,sBALAsX,GAAU,IAAIzf,EACd0f,GAAc,IAAI1f,EAMlB2f,GAAa,CACfpc,MAAOjB,EACP6B,UAAW7B,EACX8B,QAAS9B,EACT+B,aAAc,WACZsb,GAAWxb,UAAYyb,GACvBD,GAAWvb,QAAUyb,EACvB,EACAvb,WAAY,WACVqb,GAAWxb,UAAYwb,GAAWvb,QAAUub,GAAWpc,MAAQjB,EAC/Dmd,GAAQrf,IAAIQ,EAAI8e,KAChBA,GAAc,IAAI1f,CACpB,EACAyO,OAAQ,WACN,IAAIqR,EAAOL,GAAU,EAErB,OADAA,GAAU,IAAIzf,EACP8f,CACT,GAGF,SAASF,KACPD,GAAWpc,MAAQwc,EACrB,CAEA,SAASA,GAAe1f,EAAGG,GACzBmf,GAAWpc,MAAQyc,GACnBtI,GAAMxP,GAAK7H,EAAGsX,GAAMxP,GAAK3H,CAC3B,CAEA,SAASwf,GAAU3f,EAAGG,GACpBkf,GAAYtf,IAAI+H,GAAK9H,EAAI6H,GAAK1H,GAC9B0H,GAAK7H,EAAG8H,GAAK3H,CACf,CAEA,SAASqf,KACPG,GAAUtI,GAAKC,GACjB,CAEA,YC7CA,IASID,GACAC,GACAzP,GACAC,GAZAqD,GAAK,EACLE,GAAK,EACLuU,GAAK,EACL1U,GAAK,EACLE,GAAK,EACLyU,GAAK,EACLC,GAAK,EACLC,GAAK,EACLC,GAAK,EAMLC,GAAiB,CACnB/c,MAAOgd,GACPpc,UAAWqc,GACXpc,QAASqc,GACTpc,aAAc,WACZic,GAAenc,UAAYuc,GAC3BJ,GAAelc,QAAUuc,EAC3B,EACArc,WAAY,WACVgc,GAAe/c,MAAQgd,GACvBD,GAAenc,UAAYqc,GAC3BF,GAAelc,QAAUqc,EAC3B,EACAhS,OAAQ,WACN,IAAImS,EAAWP,GAAK,CAACF,GAAKE,GAAID,GAAKC,IAC7BH,GAAK,CAAC3U,GAAK2U,GAAIzU,GAAKyU,IACpBD,GAAK,CAACzU,GAAKyU,GAAIvU,GAAKuU,IACpB,CAACtN,IAAKA,KAIZ,OAHAnH,GAAKE,GAAKuU,GACV1U,GAAKE,GAAKyU,GACVC,GAAKC,GAAKC,GAAK,EACRO,CACT,GAGF,SAASL,GAAclgB,EAAGG,GACxBgL,IAAMnL,EACNqL,IAAMlL,IACJyf,EACJ,CAEA,SAASO,KACPF,GAAe/c,MAAQsd,EACzB,CAEA,SAASA,GAAuBxgB,EAAGG,GACjC8f,GAAe/c,MAAQud,GACvBP,GAAcrY,GAAK7H,EAAG8H,GAAK3H,EAC7B,CAEA,SAASsgB,GAAkBzgB,EAAGG,GAC5B,IAAI6K,EAAKhL,EAAI6H,GAAIgD,EAAK1K,EAAI2H,GAAIlD,EAAI/C,EAAKmJ,EAAKA,EAAKH,EAAKA,GACtDK,IAAMtG,GAAKiD,GAAK7H,GAAK,EACrBoL,IAAMxG,GAAKkD,GAAK3H,GAAK,EACrB0f,IAAMjb,EACNsb,GAAcrY,GAAK7H,EAAG8H,GAAK3H,EAC7B,CAEA,SAASigB,KACPH,GAAe/c,MAAQgd,EACzB,CAEA,SAASG,KACPJ,GAAe/c,MAAQwd,EACzB,CAEA,SAASJ,KACPK,GAAkBtJ,GAAKC,GACzB,CAEA,SAASoJ,GAAuB1gB,EAAGG,GACjC8f,GAAe/c,MAAQyd,GACvBT,GAAc7I,GAAMxP,GAAK7H,EAAGsX,GAAMxP,GAAK3H,EACzC,CAEA,SAASwgB,GAAkB3gB,EAAGG,GAC5B,IAAI6K,EAAKhL,EAAI6H,GACTgD,EAAK1K,EAAI2H,GACTlD,EAAI/C,EAAKmJ,EAAKA,EAAKH,EAAKA,GAE5BK,IAAMtG,GAAKiD,GAAK7H,GAAK,EACrBoL,IAAMxG,GAAKkD,GAAK3H,GAAK,EACrB0f,IAAMjb,EAGNkb,KADAlb,EAAIkD,GAAK9H,EAAI6H,GAAK1H,IACP0H,GAAK7H,GAChB+f,IAAMnb,GAAKkD,GAAK3H,GAChB6f,IAAU,EAAJpb,EACNsb,GAAcrY,GAAK7H,EAAG8H,GAAK3H,EAC7B,CAEA,YChGe,SAASygB,GAAYza,GAClC7L,KAAKumB,SAAW1a,CAClB,CAEAya,GAAYtL,UAAY,CACtBwL,QAAS,IACTC,YAAa,SAAS/U,GACpB,OAAO1R,KAAKwmB,QAAU9U,EAAG1R,IAC3B,EACA0J,aAAc,WACZ1J,KAAK0mB,MAAQ,CACf,EACA/c,WAAY,WACV3J,KAAK0mB,MAAQ1O,GACf,EACAxO,UAAW,WACTxJ,KAAK2mB,OAAS,CAChB,EACAld,QAAS,WACY,IAAfzJ,KAAK0mB,OAAa1mB,KAAKumB,SAASK,YACpC5mB,KAAK2mB,OAAS3O,GAChB,EACApP,MAAO,SAASlD,EAAGG,GACjB,OAAQ7F,KAAK2mB,QACX,KAAK,EACH3mB,KAAKumB,SAAS/B,OAAO9e,EAAGG,GACxB7F,KAAK2mB,OAAS,EACd,MAEF,KAAK,EACH3mB,KAAKumB,SAAS9a,OAAO/F,EAAGG,GACxB,MAEF,QACE7F,KAAKumB,SAAS/B,OAAO9e,EAAI1F,KAAKwmB,QAAS3gB,GACvC7F,KAAKumB,SAAShP,IAAI7R,EAAGG,EAAG7F,KAAKwmB,QAAS,EAAG9f,GAI/C,EACAoN,OAAQnM,GCvCV,IACIkf,GACA9J,GACAC,GACAzP,GACAC,GALAxF,GAAY,IAAI3C,EAOhBuE,GAAe,CACjBhB,MAAOjB,EACP6B,UAAW,WACTI,GAAahB,MAAQiB,EACvB,EACAJ,QAAS,WACHod,IAAY5c,GAAY8S,GAAKC,IACjCpT,GAAahB,MAAQjB,CACvB,EACA+B,aAAc,WACZmd,IAAa,CACf,EACAld,WAAY,WACVkd,GAAa,IACf,EACA/S,OAAQ,WACN,IAAInS,GAAUqG,GAEd,OADAA,GAAY,IAAI3C,EACT1D,CACT,GAGF,SAASkI,GAAiBnE,EAAGG,GAC3B+D,GAAahB,MAAQqB,GACrB8S,GAAMxP,GAAK7H,EAAGsX,GAAMxP,GAAK3H,CAC3B,CAEA,SAASoE,GAAYvE,EAAGG,GACtB0H,IAAM7H,EAAG8H,IAAM3H,EACfmC,GAAUvC,IAAI8B,EAAKgG,GAAKA,GAAKC,GAAKA,KAClCD,GAAK7H,EAAG8H,GAAK3H,CACf,CAEA,Y,0BC3CA,IAAIihB,GAAaC,GAAaC,GAAaC,GAE5B,MAAMC,GACnBtnB,WAAAA,CAAYunB,GACVnnB,KAAKonB,QAAoB,MAAVD,EAAiBE,GAgEpC,SAAqBF,GACnB,MAAMhZ,EAAInI,KAAKmB,MAAMggB,GACrB,KAAMhZ,GAAK,GAAI,MAAM,IAAImZ,WAAW,mBAADniB,OAAoBgiB,IACvD,GAAIhZ,EAAI,GAAI,OAAOkZ,GACnB,GAAIlZ,IAAM2Y,GAAa,CACrB,MAAM1Y,EAAI,IAAMD,EAChB2Y,GAAc3Y,EACd4Y,GAAc,SAAgBQ,GAC5B,IAAIvkB,EAAI,EACRhD,KAAK0R,GAAK6V,EAAQ,GAClB,IAAK,MAAM3hB,EAAI2hB,EAAQ5lB,OAAQqB,EAAI4C,IAAK5C,EACtChD,KAAK0R,GAAK1L,KAAK4M,MAAMzC,UAAUnN,GAAKoL,GAAKA,EAAImZ,EAAQvkB,EAEzD,CACF,CACA,OAAO+jB,EACT,CAhF6CS,CAAYL,GACrDnnB,KAAKwmB,QAAU,IACfxmB,KAAK0R,EAAI,EACX,CACA+U,WAAAA,CAAY/U,GAEV,OADA1R,KAAKwmB,SAAW9U,EACT1R,IACT,CACA0J,YAAAA,GACE1J,KAAK0mB,MAAQ,CACf,CACA/c,UAAAA,GACE3J,KAAK0mB,MAAQ1O,GACf,CACAxO,SAAAA,GACExJ,KAAK2mB,OAAS,CAChB,CACAld,OAAAA,GACqB,IAAfzJ,KAAK0mB,QAAa1mB,KAAK0R,GAAK,KAChC1R,KAAK2mB,OAAS3O,GAChB,CACApP,KAAAA,CAAMlD,EAAGG,GACP,OAAQ7F,KAAK2mB,QACX,KAAK,EACH3mB,KAAKonB,QAAOK,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,eAAIhiB,EAAKG,GACrB7F,KAAK2mB,OAAS,EACd,MAEF,KAAK,EACH3mB,KAAKonB,QAAOO,KAAAA,IAAAD,EAAAA,GAAAA,GAAA,eAAIhiB,EAAKG,GACrB,MAEF,QAEE,GADA7F,KAAKonB,QAAOQ,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,eAAIhiB,EAAKG,GACjB7F,KAAKwmB,UAAYQ,IAAehnB,KAAKonB,UAAYL,GAAa,CAChE,MAAMtM,EAAIza,KAAKwmB,QACTtb,EAAIlL,KAAK0R,EACf1R,KAAK0R,EAAI,GACT1R,KAAKonB,QAAOS,KAAAA,IAAAH,EAAAA,GAAAA,GAAA,sDAAMjN,EAAKA,EAAKA,GAAc,EAAIA,EAAKA,EAAKA,EAAa,EAAIA,GACzEuM,GAAcvM,EACdsM,GAAc/mB,KAAKonB,QACnBH,GAAcjnB,KAAK0R,EACnB1R,KAAK0R,EAAIxG,CACX,CACAlL,KAAK0R,GAAKuV,GAIhB,CACAnT,MAAAA,GACE,MAAMA,EAAS9T,KAAK0R,EAEpB,OADA1R,KAAK0R,EAAI,GACFoC,EAAOnS,OAASmS,EAAS,IAClC,EAGF,SAASuT,GAAOE,GACd,IAAIvkB,EAAI,EACRhD,KAAK0R,GAAK6V,EAAQ,GAClB,IAAK,MAAM3hB,EAAI2hB,EAAQ5lB,OAAQqB,EAAI4C,IAAK5C,EACtChD,KAAK0R,GAAKvB,UAAUnN,GAAKukB,EAAQvkB,EAErC,C,IC9DI8kB,GAAIC,GACJlX,GAAIE,GAAIuU,GACR1U,GAAIE,GAAIyU,GACRC,GAAIC,GAAIC,GACR5I,GAAUkL,GACVza,GAAIC,GAAIya,G,iCAERtC,GAAiB,CACnBld,OAAQd,EACRiB,MAAOgd,GACPpc,UAAWqc,GACXpc,QAASqc,GACTpc,aAAc,WACZic,GAAenc,UAAYuc,GAC3BJ,GAAelc,QAAUuc,EAC3B,EACArc,WAAY,WACVgc,GAAenc,UAAYqc,GAC3BF,GAAelc,QAAUqc,EAC3B,GAIF,SAASF,GAAc7b,EAAQC,GAC7BD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAE1BshB,GAAuB/d,EAASpD,EAAIgD,GAASI,EAAS/C,EAAI2C,GAAS3C,EAAI4C,GACzE,CAEA,SAASke,GAAuBxiB,EAAGG,EAAGyE,KAClCwd,GACFjX,KAAOnL,EAAImL,IAAMiX,GACjB/W,KAAOlL,EAAIkL,IAAM+W,GACjBxC,KAAOhb,EAAIgb,IAAMwC,EACnB,CAEA,SAASjC,KACPF,GAAe/c,MAAQuf,EACzB,CAEA,SAASA,GAAuBpe,EAAQC,GACtCD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAE1B2G,GAAKpD,EAASpD,EAAIgD,GAClByD,GAAKrD,EAAS/C,EAAI2C,GAClBke,GAAK7gB,EAAI4C,GACT2b,GAAe/c,MAAQwf,GACvBF,GAAuB3a,GAAIC,GAAIya,GACjC,CAEA,SAASG,GAAkBre,EAAQC,GACjCD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAEtBlB,EAAIyE,EAASpD,EAAIgD,GACjBlE,EAAIsE,EAAS/C,EAAI2C,GACjBO,EAAIlD,EAAI4C,GACR2R,EAAI7U,EAAMS,GAAMoU,EAAInO,GAAKlD,EAAI2d,GAAKpiB,GAAK8V,GAAKA,EAAIsM,GAAKviB,EAAI6H,GAAKjD,GAAKqR,GAAKA,EAAIpO,GAAK1H,EAAI2H,GAAK9H,GAAKiW,GAAIpO,GAAK7H,EAAI8H,GAAK3H,EAAIoiB,GAAK3d,GAC9Hyd,IAAMpM,EACN/K,IAAM+K,GAAKpO,IAAMA,GAAK7H,IACtBoL,IAAM6K,GAAKnO,IAAMA,GAAK3H,IACtB0f,IAAM5J,GAAKsM,IAAMA,GAAK3d,IACtB4d,GAAuB3a,GAAIC,GAAIya,GACjC,CAEA,SAASnC,KACPH,GAAe/c,MAAQgd,EACzB,CAIA,SAASG,KACPJ,GAAe/c,MAAQyf,EACzB,CAEA,SAASrC,KACPsC,GAAkBxL,GAAUkL,IAC5BrC,GAAe/c,MAAQgd,EACzB,CAEA,SAASyC,GAAuBte,EAAQC,GACtC8S,GAAW/S,EAAQie,GAAQhe,EAC3BD,GAAUnD,EAASoD,GAAOpD,EAC1B+e,GAAe/c,MAAQ0f,GACvB,IAAIne,EAASpD,EAAIiD,GACjBuD,GAAKpD,EAASpD,EAAIgD,GAClByD,GAAKrD,EAAS/C,EAAI2C,GAClBke,GAAK7gB,EAAI4C,GACTke,GAAuB3a,GAAIC,GAAIya,GACjC,CAEA,SAASK,GAAkBve,EAAQC,GACjCD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAEtBlB,EAAIyE,EAASpD,EAAIgD,GACjBlE,EAAIsE,EAAS/C,EAAI2C,GACjBO,EAAIlD,EAAI4C,GACRue,EAAK/a,GAAKlD,EAAI2d,GAAKpiB,EACnB2iB,EAAKP,GAAKviB,EAAI6H,GAAKjD,EACnBme,EAAKlb,GAAK1H,EAAI2H,GAAK9H,EACnBgO,EAAIxM,EAAMqhB,EAAIC,EAAIC,GAClB9M,EAAIlU,EAAKiM,GACTW,EAAIX,IAAMiI,EAAIjI,EAClB8R,GAAG/f,IAAI4O,EAAIkU,GACX9C,GAAGhgB,IAAI4O,EAAImU,GACX9C,GAAGjgB,IAAI4O,EAAIoU,GACXV,IAAMpM,EACN/K,IAAM+K,GAAKpO,IAAMA,GAAK7H,IACtBoL,IAAM6K,GAAKnO,IAAMA,GAAK3H,IACtB0f,IAAM5J,GAAKsM,IAAMA,GAAK3d,IACtB4d,GAAuB3a,GAAIC,GAAIya,GACjC,CC9GO,IAKHnL,GACAkL,GACA/f,GACAE,GACAD,GCRAD,GAAS8O,GAAMC,GAASI,GACxBoF,GACAM,GAAUkL,GACV3c,GACAqd,GACAC,GACA5Y,GDPOgV,GAAc,IAAI1f,EAIzByf,GAAU,IAAIzf,EAOP2f,GAAa,CACtBpc,MAAOjB,EACP6B,UAAW7B,EACX8B,QAAS9B,EACT+B,aAAc,WACZqb,GAAc,IAAI1f,EAClB2f,GAAWxb,UAAYyb,GACvBD,GAAWvb,QAAUyb,EACvB,EACAvb,WAAY,WACV,IAAIif,GAAY7D,GAChBD,GAAQrf,IAAImjB,EAAW,EAAIliB,EAAMkiB,EAAWA,GAC5C5oB,KAAKwJ,UAAYxJ,KAAKyJ,QAAUzJ,KAAK4I,MAAQjB,CAC/C,EACAc,OAAQ,WACNqc,GAAQrf,IAAIiB,EACd,GAGF,SAASue,KACPD,GAAWpc,MAAQwc,EACrB,CAEA,SAASF,KACPG,GAAUvI,GAAUkL,GACtB,CAEA,SAAS5C,GAAerb,EAAQC,GAC9Bgb,GAAWpc,MAAQyc,GACnBvI,GAAW/S,EAAQie,GAAQhe,EAE3B/B,GADA8B,GAAUnD,EACQuB,GAAUpB,EAAIiD,GADbA,GAAOpD,GACkB,EAAIH,GAAYyB,GAAUd,EAAI4C,EAC5E,CAEA,SAASqb,GAAUtb,EAAQC,GAOzB,IAAI6e,GANJ9e,GAAUnD,GAMaqB,GACnB6gB,EAAWD,GAAW,EAAI,GAAK,EAC/BE,EAAWD,EAAWD,EACtB1e,EAASpD,EARbiD,GADmBA,GAAOpD,GACd,EAAIH,GASZyD,EAAS9C,EAAI4C,GACboE,EAAIlG,GAAUgC,EACdgW,EAAI/X,GAAUgC,EAASiE,EAAIrH,EAAIgiB,GAC/B1U,EAAIjG,EAAI0a,EAAW1hB,EAAI2hB,GAC3BhE,GAAYtf,IAAIqB,EAAMuN,EAAG6L,IAGzBjY,GAAU8B,EAAQ5B,GAAUgC,EAAQjC,GAAUgC,CAChD,CAEe,YAAS5B,GAGtB,OAFAwc,GAAU,IAAIzf,EACdwC,EAAOS,EAAQ0c,IACE,EAAVF,EACT,CC7DA,IAAI5J,GAAe,CACjBtS,MAAOogB,GACPxf,UAAWyf,GACXxf,QAASyf,GACTxf,aAAc,WACZwR,GAAatS,MAAQugB,GACrBjO,GAAa1R,UAAY4f,GACzBlO,GAAazR,QAAU4f,GACvBX,GAAW,IAAIrjB,EACf2f,GAAWtb,cACb,EACAC,WAAY,WACVqb,GAAWrb,aACXuR,GAAatS,MAAQogB,GACrB9N,GAAa1R,UAAYyf,GACzB/N,GAAazR,QAAUyf,GACnBnE,GAAc,GAAG9c,KAAY+O,GAAU,KAAMD,KAASK,GAAO,KACxDsR,GAAWtiB,EAASgR,GAAO,GAC3BsR,IAAYtiB,IAAS2Q,IAAQ,IACtChH,GAAM,GAAK9H,GAAS8H,GAAM,GAAKiH,EACjC,EACAvO,OAAQ,WACNR,KAAY+O,GAAU,KAAMD,KAASK,GAAO,GAC9C,GAGF,SAAS4R,GAAYjf,EAAQC,GAC3B2e,GAAOzoB,KAAK6P,GAAQ,CAAC9H,GAAU8B,EAAQiN,GAAUjN,IAC7CC,EAAM+M,KAAMA,GAAO/M,GACnBA,EAAMoN,KAAMA,GAAOpN,EACzB,CAEA,SAASkQ,GAAUnQ,EAAQC,GACzB,IAAIrE,EAAIuP,GAAU,CAACnL,EAASnD,EAASoD,EAAMpD,IAC3C,GAAIyE,GAAI,CACN,IAAIqL,EAAStB,GAAe/J,GAAI1F,GAE5B2jB,EAAalU,GADA,CAACsB,EAAO,IAAKA,EAAO,GAAI,GACGA,GAC5ClB,GAA0B8T,GAC1BA,EAAarU,GAAUqU,GACvB,IAGIC,EAHAnf,EAAQL,EAASyS,GACjBlV,EAAO8C,EAAQ,EAAI,GAAK,EACxBof,EAAUF,EAAW,GAAK3iB,EAAUW,EAEpCgQ,EAAerR,EAAImE,GAAS,IAC5BkN,GAAgBhQ,EAAOkV,GAAUgN,GAAWA,EAAUliB,EAAOyC,IAC/Dwf,EAAOD,EAAW,GAAK3iB,GACZyQ,KAAMA,GAAOmS,GACwBjS,GAAgBhQ,EAAOkV,IAA9DgN,GAAWA,EAAU,KAAO,IAAM,MAAiDA,EAAUliB,EAAOyC,IAC7Gwf,GAAQD,EAAW,GAAK3iB,GACboQ,KAAMA,GAAOwS,IAEpBvf,EAAM+M,KAAMA,GAAO/M,GACnBA,EAAMoN,KAAMA,GAAOpN,IAErBsN,EACEvN,EAASyS,GACP7F,GAAM1O,GAAS8B,GAAU4M,GAAM1O,GAAS+O,MAAUA,GAAUjN,GAE5D4M,GAAM5M,EAAQiN,IAAWL,GAAM1O,GAAS+O,MAAU/O,GAAU8B,GAG9DiN,IAAW/O,IACT8B,EAAS9B,KAASA,GAAU8B,GAC5BA,EAASiN,KAASA,GAAUjN,IAE5BA,EAASyS,GACP7F,GAAM1O,GAAS8B,GAAU4M,GAAM1O,GAAS+O,MAAUA,GAAUjN,GAE5D4M,GAAM5M,EAAQiN,IAAWL,GAAM1O,GAAS+O,MAAU/O,GAAU8B,EAIxE,MACE4e,GAAOzoB,KAAK6P,GAAQ,CAAC9H,GAAU8B,EAAQiN,GAAUjN,IAE/CC,EAAM+M,KAAMA,GAAO/M,GACnBA,EAAMoN,KAAMA,GAAOpN,GACvBqB,GAAK1F,EAAG6W,GAAUzS,CACpB,CAEA,SAASkf,KACP/N,GAAatS,MAAQsR,EACvB,CAEA,SAASgP,KACPnZ,GAAM,GAAK9H,GAAS8H,GAAM,GAAKiH,GAC/BkE,GAAatS,MAAQogB,GACrB3d,GAAK,IACP,CAEA,SAAS8d,GAAgBpf,EAAQC,GAC/B,GAAIqB,GAAI,CACN,IAAIjB,EAAQL,EAASyS,GACrBkM,GAASjjB,IAAIQ,EAAImE,GAAS,IAAMA,GAASA,EAAQ,EAAI,KAAO,KAAOA,EACrE,MACE0S,GAAW/S,EAAQie,GAAQhe,EAE7Bgb,GAAWpc,MAAMmB,EAAQC,GACzBkQ,GAAUnQ,EAAQC,EACpB,CAEA,SAASof,KACPpE,GAAWxb,WACb,CAEA,SAAS6f,KACPF,GAAgBrM,GAAUkL,IAC1BhD,GAAWvb,UACPxD,EAAIyiB,IAAYtiB,IAAS6B,KAAY+O,GAAU,MACnDjH,GAAM,GAAK9H,GAAS8H,GAAM,GAAKiH,GAC/B3L,GAAK,IACP,CAKA,SAASsL,GAAM1O,EAAS+O,GACtB,OAAQA,GAAW/O,GAAW,EAAI+O,EAAU,IAAMA,CACpD,CAEA,SAASyS,GAAalf,EAAGC,GACvB,OAAOD,EAAE,GAAKC,EAAE,EAClB,CAEA,SAASkf,GAAc3Z,EAAOrK,GAC5B,OAAOqK,EAAM,IAAMA,EAAM,GAAKA,EAAM,IAAMrK,GAAKA,GAAKqK,EAAM,GAAKrK,EAAIqK,EAAM,IAAMA,EAAM,GAAKrK,CAC5F,CC1HM,SAAUikB,GAAehnB,GAC9B,MAAMsjB,EHiGQ,SAAS3d,GACtBwf,GAAKC,GACLlX,GAAKE,GAAKuU,GACV1U,GAAKE,GAAKyU,GAAK,EACfC,GAAK,IAAIngB,EACTogB,GAAK,IAAIpgB,EACTqgB,GAAK,IAAIrgB,EACTwC,EAAOS,EAAQqd,IAEf,IAAIjgB,GAAK8f,GACL3f,GAAK4f,GACLnb,GAAKob,GACLhS,EAAIxM,EAAMxB,EAAGG,EAAGyE,GAGpB,OAAIoJ,EAAIrN,IACNX,EAAIkL,GAAI/K,EAAIiL,GAAIxG,EAAIib,GAEhBwC,GAAK3hB,IAASV,EAAImL,GAAIhL,EAAIkL,GAAIzG,EAAIgb,KACtC5R,EAAIxM,EAAMxB,EAAGG,EAAGyE,IAERjE,GAAiB,CAAC2R,IAAKA,KAG1B,CAAClR,EAAMjB,EAAGH,GAAKiB,EAASc,EAAK6C,EAAIoJ,GAAK/M,EAC/C,CG1HkBijB,CAAYjnB,GAC7B,MAAO,CAAE4I,UAAW0a,EAAS,GAAIza,SAAUya,EAAS,GACrD,CAYM,SAAU4D,GAAalnB,GAC5B,MAAMwY,ED4GQ,SAASjY,GACtB,IAAIF,EAAGmD,EAAGoE,EAAGC,EAAGsf,EAAQC,EAAU3f,EAOlC,GALAgN,GAAOJ,KAAY/O,GAAU8O,GAAOkE,KACpC0N,GAAS,GACT9gB,EAAO3E,EAASgY,IAGZ/U,EAAIwiB,GAAOhnB,OAAQ,CAIrB,IAHAgnB,GAAO/T,KAAK6U,IAGPzmB,EAAI,EAAkB8mB,EAAS,CAAxBvf,EAAIoe,GAAO,IAAkB3lB,EAAImD,IAAKnD,EAE5C0mB,GAAcnf,GADlBC,EAAIme,GAAO3lB,IACY,KAAO0mB,GAAcnf,EAAGC,EAAE,KAC3CmM,GAAMpM,EAAE,GAAIC,EAAE,IAAMmM,GAAMpM,EAAE,GAAIA,EAAE,MAAKA,EAAE,GAAKC,EAAE,IAChDmM,GAAMnM,EAAE,GAAID,EAAE,IAAMoM,GAAMpM,EAAE,GAAIA,EAAE,MAAKA,EAAE,GAAKC,EAAE,KAEpDsf,EAAO5pB,KAAKqK,EAAIC,GAMpB,IAAKuf,GAAW,IAAkC/mB,EAAI,EAAGuH,EAAIuf,EAAlC3jB,EAAI2jB,EAAOnoB,OAAS,GAAyBqB,GAAKmD,EAAGoE,EAAIC,IAAKxH,EACvFwH,EAAIsf,EAAO9mB,IACNoH,EAAQuM,GAAMpM,EAAE,GAAIC,EAAE,KAAOuf,IAAUA,EAAW3f,EAAOnC,GAAUuC,EAAE,GAAIwM,GAAUzM,EAAE,GAE9F,CAIA,OAFAoe,GAAS5Y,GAAQ,KAEV9H,KAAYgT,KAAYlE,KAASkE,IAClC,CAAC,CAACjD,IAAKA,KAAM,CAACA,IAAKA,MACnB,CAAC,CAAC/P,GAAS8O,IAAO,CAACC,GAASI,IACpC,CC/IgB/E,CAAU1P,GAEzB,GAAIwY,EAAQ,CACX,MAAM9I,EAAY,CAAEC,KAAM6I,EAAO,GAAG,GAAI3I,MAAO2I,EAAO,GAAG,GAAI1I,IAAK0I,EAAO,GAAG,GAAI5I,OAAQ4I,EAAO,GAAG,IAKlG,OAJI9I,EAAUG,MAAQH,EAAUC,OAC/BD,EAAUG,MAAQ,IAClBH,EAAUC,MAAQ,KAEZD,C,CAER,MAAO,CAAEC,KAAM,EAAGE,MAAO,EAAGC,IAAK,EAAGF,OAAQ,EAC7C,C,eC8MM,MAAOyX,WAAiBC,GAAAA,EAA9BrqB,WAAAA,G,oBASCC,OAAAC,eAAA,wB,yDACAD,OAAAC,eAAA,wB,yDACAD,OAAAC,eAAA,uB,yDACAD,OAAAC,eAAA,uB,yDACAD,OAAAC,eAAA,uB,yDACAD,OAAAC,eAAA,c,gDAA0B,IAC1BD,OAAAC,eAAA,c,gDAA0B,IAE1BD,OAAAC,eAAA,oB,gDAAqD,CAAC,IACtDD,OAAAC,eAAA,uB,gDAAmC,IACnCD,OAAAC,eAAA,4B,gDAAwC,IAExCD,OAAAC,eAAA,yB,iDAAsC,IACtCD,OAAAC,eAAA,2B,gDAA2D,CAAE4C,KAAM,qBAAsB2G,WAAY,MAErGxJ,OAAAC,eAAA,wB,gDAAkD,OAElDD,OAAAC,eAAA,Y,yDACAD,OAAAC,eAAA,a,yDACAD,OAAAC,eAAA,a,yDACAD,OAAAC,eAAA,a,yDACAD,OAAAC,eAAA,a,yDAEAD,OAAAC,eAAA,mB,gDAAuB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,MAEpCD,OAAAC,eAAA,qB,gDAAoC,CAAEyL,UAAW,EAAGC,SAAU,KAC9D3L,OAAAC,eAAA,mB,gDAAqF,CAAEwS,KAAM,EAAGE,MAAO,EAAGC,IAAK,EAAGF,OAAQ,KAC1H1S,OAAAC,eAAA,uB,gDAAyF,CAAEwS,KAAM,EAAGE,MAAO,EAAGC,IAAK,EAAGF,OAAQ,KAE9H1S,OAAAC,eAAA,wB,iDAAqC,IAErCD,OAAAC,eAAA,iB,yDAEAD,OAAAC,eAAA,Y,yDACAD,OAAAC,eAAA,Y,yDAEAD,OAAAC,eAAA,mB,iDAAgC,IAEhCD,OAAAC,eAAA,iB,gDAA6B,IAC7BD,OAAAC,eAAA,iB,gDAA6B,GA84B9B,CA54BWoqB,YAAAA,GACT,MAAM1lB,EAAaxE,KAAKY,IAAI,cACtBupB,ECvSO,SAAS3lB,EAAYqH,GAClC,IAEIue,EACAC,EAHAlD,EAAS,EACTV,EAAc,IAIlB,SAAS0D,EAAK7hB,GAKZ,OAJIA,IACyB,oBAAhBme,GAA4B4D,EAAc5D,aAAaA,EAAYtH,MAAMnf,KAAMmQ,YAC1FtI,EAAOS,EAAQ8hB,EAAiBC,KAE3BA,EAAcvW,QACvB,CAqDA,OAnDAqW,EAAKhF,KAAO,SAAS7c,GAEnB,OADAT,EAAOS,EAAQ8hB,EAAiBE,KACzBA,GAASxW,QAClB,EAEAqW,EAAKI,QAAU,SAASjiB,GAEtB,OADAT,EAAOS,EAAQ8hB,EAAiBI,KACzBA,GAAY1W,QACrB,EAEAqW,EAAKhP,OAAS,SAAS7S,GAErB,OADAT,EAAOS,EAAQ8hB,EAAiBK,KACzBA,GAAW3W,QACpB,EAEAqW,EAAKlE,SAAW,SAAS3d,GAEvB,OADAT,EAAOS,EAAQ8hB,EAAiBM,KACzBA,GAAa5W,QACtB,EAEAqW,EAAK3lB,WAAa,SAASkN,GACzB,OAAKvB,UAAUxO,QACfyoB,EAAwB,MAAL1Y,GAAalN,EAAa,KAAMwa,KAAaxa,EAAakN,GAAG7J,OACzEsiB,GAFuB3lB,CAGhC,EAEA2lB,EAAKte,QAAU,SAAS6F,GACtB,OAAKvB,UAAUxO,QACf0oB,EAAqB,MAAL3Y,GAAa7F,EAAU,KAAM,IAAIqb,GAAWC,IAAW,IAAIb,GAAYza,EAAU6F,GACtE,oBAAhB+U,GAA4B4D,EAAc5D,YAAYA,GAC1D0D,GAHuBte,CAIhC,EAEAse,EAAK1D,YAAc,SAAS/U,GAC1B,OAAKvB,UAAUxO,QACf8kB,EAA2B,oBAAN/U,EAAmBA,GAAK2Y,EAAc5D,aAAa/U,IAAKA,GACtEyY,GAFuB1D,CAGhC,EAEA0D,EAAKhD,OAAS,SAASzV,GACrB,IAAKvB,UAAUxO,OAAQ,OAAOwlB,EAC9B,GAAS,MAALzV,EAAWyV,EAAS,SACnB,CACH,MAAMhZ,EAAInI,KAAKmB,MAAMuK,GACrB,KAAMvD,GAAK,GAAI,MAAM,IAAImZ,WAAW,mBAADniB,OAAoBuM,IACvDyV,EAAShZ,CACX,CAEA,OADgB,OAAZtC,IAAkBwe,EAAgB,IAAInD,GAAWC,IAC9CgD,CACT,EAEOA,EAAK3lB,WAAWA,GAAY2iB,OAAOA,GAAQtb,QAAQA,EAC5D,CDqOepH,GACb0lB,EAAK3lB,WAAWA,GAChBxE,KAAK2qB,cAAc,UAAWR,EAC/B,CASO7d,QAAAA,GACN,OAAOtM,KAAKsN,OAAOtN,KAAK4qB,gBAAgBC,SAAS,CAAEnlB,EAAG1F,KAAKkhB,QAAU,EAAGrb,EAAG7F,KAAKohB,SAAW,IAC5F,CAKOwI,WAAAA,GACN,OAAO5pB,KAAK8qB,YACb,CAKOzY,SAAAA,GACN,OAAOrS,KAAK+qB,UACb,CAEUC,eAAAA,GAET,MAAMlI,EAAS9iB,KAAKY,IAAI,UAClBiiB,EAAS7iB,KAAKY,IAAI,UAClBqqB,EAAiBjrB,KAAKirB,eAEd,QAAVnI,GAA8B,QAAVD,GACnB7iB,KAAKkrB,UACRlrB,KAAKkrB,SAASpb,UAGf9P,KAAKkrB,SAAWD,EAAennB,OAAO1D,GAAG,SAAU+qB,IAClD,MAAMlI,EAAcjjB,KAAKY,IAAI,eACvBuiB,EAAmBnjB,KAAKY,IAAI,mBAAoB,GAChDsiB,EAAgBljB,KAAKY,IAAI,gBAAiB,GAE1CwqB,EAAaD,EAAME,cAIzB,IAAIC,GAAAA,GAAoBF,EAAYprB,MAInC,OAHAorB,EAAWG,iBAMZ,MAAM3iB,EAAQqiB,EAAerf,SAAS4f,QAAQL,EAAMviB,OAErC,QAAVia,EACJ7iB,KAAKyrB,iBAAiBL,EAAWM,OAAQ9iB,GAEvB,WAAVia,EACR7iB,KAAK2rB,oBAAoBP,EAAWM,OAAS,EAAIvI,EAAkBD,EAAeD,GAEhE,WAAVJ,GACR7iB,KAAK4rB,oBAAoBR,EAAWM,OAAS,EAAIvI,EAAkBD,EAAeD,GAGpE,QAAVH,EACJ9iB,KAAKyrB,iBAAiBL,EAAWS,OAAQjjB,GAEvB,WAAVka,EACR9iB,KAAK2rB,oBAAoBP,EAAWS,OAAS,EAAI1I,EAAkBD,EAAeD,GAEhE,WAAVH,GACR9iB,KAAK4rB,oBAAoBR,EAAWS,OAAS,EAAI1I,EAAkBD,EAAeD,E,IAKpFjjB,KAAK8rB,WAAW5rB,KAAKF,KAAKkrB,WAGtBlrB,KAAKkrB,UACRlrB,KAAKkrB,SAASpb,SAGjB,CAEO9O,gBAAAA,GACNN,MAAMM,mBAEN,MAAMwD,EAAaxE,KAAKY,IAAI,cACtB+a,EAAI3b,KAAK+rB,aACTnQ,EAAI5b,KAAKgsB,cAETC,EAAqBjsB,KAAKksB,mBAAmB7iB,WAEnD,GAAIrJ,KAAKkB,QAAQ,cAAe,CAC/BlB,KAAKkqB,eACLlqB,KAAK8L,sBACL9L,KAAKmsB,UAEL3nB,EAAW+W,MAAMvb,KAAK0E,WAAW,YAAc1E,KAAKY,IAAI,YAAa,IACjE4D,EAAW8Z,QACd9Z,EAAW8Z,OAAO,CAACte,KAAKY,IAAI,YAAa,GAAIZ,KAAKY,IAAI,YAAa,GAAIZ,KAAKY,IAAI,YAAa,KAG9F,IAAIwrB,EAAOpsB,KAAKO,cAAciE,WAC9B,GAAI4nB,GAAQA,GAAQ5nB,EAAY,CAC/B,IAAI6nB,EAAK1Q,EAAI,EACT2Q,EAAK1Q,EAAI,EACb,GAAIwQ,EAAK9e,OAAQ,CAChB,IAAIif,EAAiBH,EAAK9e,OAAO,CAAC+e,EAAIC,IAEtC,GAAIC,EAAgB,CAEnB,IAAIC,EAAKhoB,EAAW+nB,GACpB,GAAIC,EAAI,CACP,IAAIhR,EAAYhX,EAAWgX,YAEvBiR,EAAKJ,GAAOG,EAAG,GAAKhR,EAAU,IAC9BkR,EAAKJ,GAAOE,EAAG,GAAKhR,EAAU,IAElChX,EAAWgX,UAAU,CAACiR,EAAIC,IAE1B1sB,KAAK4P,OAAO,aAAc6c,GAC1BzsB,KAAK4P,OAAO,aAAc8c,E,KAqB/B,IAdI1sB,KAAKkB,QAAQ,WAAalB,KAAKkB,QAAQ,YAC1ClB,KAAKgrB,kBAEFhrB,KAAK2sB,mBACR3sB,KAAKksB,mBAAmB7iB,WAAa,GAErCrJ,KAAK2E,OAAOioB,MAAMjoB,IACjBrD,EAAAA,GAAetB,KAAKksB,mBAAmB7iB,WAAY1E,EAAOC,YAAY,IAIvE5E,KAAKmsB,WAG2B,GAA7BF,EAAmBtqB,SAAgBga,GAAK3b,KAAK6sB,KAAOjR,GAAK5b,KAAK8sB,KAAO9sB,KAAK2sB,mBACzEhR,EAAI,GAAKC,EAAI,EAAG,CACnB,IAAIyQ,EAAK1Q,EAAI,EACT2Q,EAAK1Q,EAAI,EAEbpX,EAAWuc,QAAQ,CAACpF,EAAGC,GAAI5b,KAAKksB,oBAChC,MAAMa,EAAWvoB,EAAW+W,QAK5B,GAHAvb,KAAK2qB,cAAc,WAAYoC,GAC/BvoB,EAAW+W,MAAMwR,EAAW/sB,KAAKY,IAAI,YAAa,IAE9CZ,KAAKqB,gBAAiB,CACzB,IAAImrB,EAAKhoB,EAAWxE,KAAKqB,iBACzB,GAAImrB,EAAI,CACP,IAAIhR,EAAYhX,EAAWgX,YAEvBiR,EAAKJ,GAAOG,EAAG,GAAKhR,EAAU,IAC9BkR,EAAKJ,GAAOE,EAAG,GAAKhR,EAAU,IAElChX,EAAWgX,UAAU,CAACiR,EAAIC,IAE1B1sB,KAAK4P,OAAO,aAAc6c,GAC1BzsB,KAAK4P,OAAO,aAAc8c,GAE1B1sB,KAAKgtB,SAAWxR,EAAU,GAC1Bxb,KAAKitB,SAAWzR,EAAU,E,EAI5Bxb,KAAK8L,sBAEL,MAAMrH,EAAUzE,KAAK0E,WAAW,WAChC1E,KAAKktB,WAAazoB,EAAQ0W,OAAOnb,KAAKksB,mB,CAOxC,GAHAlsB,KAAK6sB,IAAMlR,EACX3b,KAAK8sB,IAAMlR,EAEP5b,KAAKkB,QAAQ,eAAgB,CAChC,MAAMZ,EAAWN,KAAKO,cAAc4sB,YAC9BA,EAAcntB,KAAKY,IAAI,eACzBusB,IAAgB7sB,IACnBN,KAAKotB,iBAAiB,eAClB9sB,GACHA,EAASwP,UAENqd,IACHA,EAAY3d,WAAW,QAASxP,MAChCA,KAAKoE,SAASlE,KAAKitB,IAGpBntB,KAAK4P,OAAO,cAAeud,G,CAIzBntB,KAAKkB,QAAQ,eAChBsD,EAAW+W,MAAMvb,KAAK0E,WAAW,YAAc1E,KAAKY,IAAI,YAAa,IACrEZ,KAAK8L,sBAEL9L,KAAK2E,OAAOioB,MAAMjoB,IACbA,EAAO0oB,OAAuB,mBAC7B1oB,EAAO/D,IAAI,cACdU,EAAAA,GAAYqD,EAAO5C,WAAYP,IAC9B,MAAM8rB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAO9pB,IAAI,QAAS1D,KAAKY,IAAI,a,YAUjCZ,KAAKkB,QAAQ,eAAiBlB,KAAKkB,QAAQ,iBAC9CsD,EAAWgX,UAAU,CAACxb,KAAKY,IAAI,aAAcZ,KAAKkhB,QAAU,GAAIlhB,KAAKY,IAAI,aAAcZ,KAAKohB,SAAW,KACvGphB,KAAK8L,uBAGFtH,EAAW8Z,SACVte,KAAKkB,QAAQ,cAAgBlB,KAAKkB,QAAQ,cAAgBlB,KAAKkB,QAAQ,gBAC1EsD,EAAW8Z,OAAO,CAACte,KAAKY,IAAI,YAAa,GAAIZ,KAAKY,IAAI,YAAa,GAAIZ,KAAKY,IAAI,YAAa,KAC7FZ,KAAK8L,wBAIH9L,KAAKkB,QAAQ,cAAgBlB,KAAKY,IAAI,SAAWZ,KAAKY,IAAI,UAC7DZ,KAAKytB,aAEP,CAGUtB,OAAAA,GACT,MAAM3nB,EAAaxE,KAAKY,IAAI,cAE5B,IAAI+a,EAAI3b,KAAK+rB,aACTnQ,EAAI5b,KAAKgsB,cAEb,GAAIrQ,EAAI,GAAKC,EAAI,EAAG,CACnBpX,EAAWuc,QAAQ,CAACpF,EAAGC,GAAI5b,KAAKksB,oBAChClsB,KAAK2qB,cAAc,WAAYnmB,EAAW+W,SAE1C,MAAMC,EAAYhX,EAAWgX,YAE7Bxb,KAAK4P,OAAO,aAAc4L,EAAU,IACpCxb,KAAK4P,OAAO,aAAc4L,EAAU,IAEpCxb,KAAKgtB,SAAWxR,EAAU,GAC1Bxb,KAAKitB,SAAWzR,EAAU,GAE1B,MAAM/W,EAAUzE,KAAK0E,WAAW,WAChC1E,KAAKktB,WAAazoB,EAAQ0W,OAAOnb,KAAKksB,oBAEtClsB,KAAK8qB,aAAe4C,GAAyB1tB,KAAKksB,oBAElD,MAAM/Q,EAASuS,GAAuB1tB,KAAKksB,oBAG3C,GAFAlsB,KAAK+qB,WAAa5P,EAEdnb,KAAKksB,mBAAmB7iB,WAAW1H,OAAS,EAAG,CAElDwZ,EAAO7I,KAAOqb,GAAAA,GAAY3tB,KAAK+qB,WAAWzY,KAAM,GAChD6I,EAAO3I,MAAQmb,GAAAA,GAAY3tB,KAAK+qB,WAAWvY,MAAO,GAClD2I,EAAO1I,IAAMkb,GAAAA,GAAY3tB,KAAK+qB,WAAWtY,IAAK,GAC9C0I,EAAO5I,OAASob,GAAAA,GAAY3tB,KAAK+qB,WAAWxY,OAAQ,GAEpD,MAAMqb,EAAgB5tB,KAAK6tB,eAEvBD,IAAkBtC,GAAAA,GAAkBnQ,EAAQyS,KAC/C5tB,KAAK8tB,iBAAkB,EACvB9tB,KAAK6tB,eAAiB1S,E,CAIxBnb,KAAK+tB,YAAa,C,CAEpB,CAMOC,YAAAA,GACN,IAAIA,EAAehuB,KAAKY,IAAI,gBAC5B,IAAKotB,EAAc,CAClB,MACM7S,EADUnb,KAAK0E,WAAW,WACTyW,OAAOnb,KAAKksB,oBAE7B5Z,EAAO6I,EAAO,GAAG,GACjB1I,EAAM0I,EAAO,GAAG,GAEhB3I,EAAQ2I,EAAO,GAAG,GAClB5I,EAAS4I,EAAO,GAAG,GAEzB6S,EAAehuB,KAAKsN,OAAO,CAAE5H,EAAG4M,GAAQE,EAAQF,GAAQ,EAAGzM,EAAG4M,GAAOF,EAASE,GAAO,G,CAEtF,OAAOub,CACR,CAQOC,MAAAA,CAAOC,GACbluB,KAAKmuB,eAAenuB,KAAKguB,eAAgBhuB,KAAKY,IAAI,gBAAiB,IAAI,EAAMstB,EAAUluB,KAAKY,IAAI,iBAAkBZ,KAAKY,IAAI,iBAC5H,CAEOuR,eAAAA,GACN,MAAM3N,EAAaxE,KAAKY,IAAI,cAC5B,GAAI4D,EAAW8I,OAAQ,CACtB,IAAIqO,EAAI3b,KAAK+rB,aACTnQ,EAAI5b,KAAKgsB,cACTrQ,EAAI,GAAKC,EAAI,IAChB5b,KAAKqB,gBAAkBmD,EAAW8I,OAAO,CAACtN,KAAK+rB,aAAe,EAAG/rB,KAAKgsB,cAAgB,I,CAGxFtrB,MAAMyR,iBACP,CAEOic,aAAAA,GAEN,GADA1tB,MAAM0tB,gBACFpuB,KAAK8tB,gBAAiB,CACzB9tB,KAAK8tB,iBAAkB,EACvB,MAAMprB,EAAO,mBACT1C,KAAK8D,OAAOC,UAAUrB,IACzB1C,KAAK8D,OAAOE,SAAStB,EAAM,CAAEA,KAAMA,EAAMuB,OAAQjE,M,CAGpD,CAEUytB,WAAAA,GACJztB,KAAKirB,eAAerf,SAASyiB,cACjCruB,KAAKirB,eAAerf,SAASyiB,eAAeruB,KAAKY,IAAI,cAAgBZ,KAAKY,IAAI,SAAWZ,KAAKY,IAAI,SAEpG,CAMOiE,mBAAAA,GACN7E,KAAK2sB,kBAAmB,EACxB3sB,KAAK+L,WACN,CAKOD,mBAAAA,GACN9L,KAAK2E,OAAOioB,MAAMjoB,IACjBA,EAAOmH,qBAAqB,GAE9B,CAEU/L,SAAAA,GACTC,KAAKsuB,eAAepuB,KAAKwhB,GAAqB5S,IAAI9O,KAAKgP,QACvDhP,KAAKuuB,UAAUC,UAAYlD,GAAAA,GAAiBtrB,KAAKuuB,UAAUC,UAAW,CAAC,QAEvExuB,KAAKoE,SAASlE,KAAKF,KAAKsE,kBAExB5D,MAAMX,YAENC,KAAKkqB,eAELlqB,KAAKirB,eAAe7mB,SAASlE,KAAKF,KAAK4qB,iBAET,MAA1B5qB,KAAKY,IAAI,eACZZ,KAAK0D,IAAI,aAAc1D,KAAKkhB,QAAU,GAET,MAA1BlhB,KAAKY,IAAI,eACZZ,KAAK0D,IAAI,aAAc1D,KAAKohB,SAAW,GAKxCphB,KAAKirB,eAAevnB,IAAI,eAAe,GACvC1D,KAAKirB,eAAevnB,IAAI,uBAAuB,GAC/C1D,KAAKirB,eAAevnB,IAAI,aAAc+qB,GAAAA,EAAU3f,IAAI9O,KAAKgP,MAAO,CAC/Dwf,UAAW,CAAC,MAAO,cACnBE,KAAMC,GAAAA,GAAMC,QAAQ,GACpB3K,YAAa,KAGdjkB,KAAK8rB,WAAW5rB,KAAKF,KAAKirB,eAAennB,OAAO1D,GAAG,eAAgB+qB,IAClEnrB,KAAK6uB,iBAAiB1D,EAAM,KAG7BnrB,KAAK8rB,WAAW5rB,KAAKF,KAAKirB,eAAennB,OAAO1D,GAAG,mBAAoB+qB,IACtEnrB,KAAK8uB,eAAe3D,EAAM,KAG3BnrB,KAAK8rB,WAAW5rB,KAAKF,KAAKirB,eAAennB,OAAO1D,GAAG,qBAAsB+qB,IACxEnrB,KAAK+uB,iBAAiB5D,EAAM,KAG7B,IAAI6D,GAAU,EACd,IAAK,IAAIhsB,EAAI,EAAGA,EAAIisB,GAAAA,GAASC,SAASvtB,OAAQqB,IACzCisB,GAAAA,GAASC,SAASlsB,GAAGmsB,MAAM,iBAC9BH,GAAU,GAGPA,GACJhvB,KAAKgP,MAAMogB,gBAGZpvB,KAAKytB,aAEN,CAEUoB,gBAAAA,CAAiB1D,GAE1BnrB,KAAKqvB,eAAiBrvB,KAAKY,IAAI,YAAa,GAE5C,IAAI0uB,EAAQzrB,EAAAA,GAAa7D,KAAKirB,eAAesE,aAAa5tB,OAC1D,GAAa,GAAT2tB,EAAY,CAEf,MAAME,EAAYxvB,KAAKirB,eAAesE,YAAY,GAE9CC,GAAcA,EAAU9pB,GAAKylB,EAAMviB,MAAMlD,GAAK8pB,EAAU3pB,GAAKslB,EAAMviB,MAAM/C,IAC5EypB,EAAQ,E,CAIV,GAAIA,EAAQ,EAAG,CACdtvB,KAAKyvB,gBAAkBzvB,KAAKY,IAAI,cAChCZ,KAAK0vB,gBAAkB1vB,KAAKY,IAAI,cAChCZ,KAAK2vB,eAAiB3vB,KAAKY,IAAI,aAC/BZ,KAAK4vB,eAAiB5vB,KAAKY,IAAI,aAC/BZ,KAAK6vB,eAAiB7vB,KAAKY,IAAI,aAE/B,MAAMkvB,EAAS9vB,KAAKirB,eAAe8E,kBACnC,GAAID,EAAQ,CACX,IAAIE,EAAYhwB,KAAKiwB,YAAYH,GAC7BE,IACHhwB,KAAKirB,eAAesE,YAAYO,GAAUE,E,OAIxC,GAAa,GAATV,EAAY,CACpB,IAAIY,EAAKlwB,KAAKirB,eAAerqB,IAAI,cAKjC,GAJIsvB,GACHA,EAAGpsB,OAAOqsB,WAAW,SAGlBnwB,KAAKY,IAAI,SAAWZ,KAAKY,IAAI,QAAS,CAErCZ,KAAKowB,KACRpwB,KAAKowB,IAAIngB,OAENjQ,KAAKqwB,MACRrwB,KAAKqwB,KAAKpgB,OAEPjQ,KAAKswB,MACRtwB,KAAKswB,KAAKrgB,OAEPjQ,KAAKuwB,MACRvwB,KAAKuwB,KAAKtgB,OAEPjQ,KAAKwwB,MACRxwB,KAAKwwB,KAAKvgB,OAGX,MAAMuf,EAAYxvB,KAAKirB,eAAerf,SAAS4f,QAAQL,EAAMviB,OAC7D5I,KAAKyvB,gBAAkBzvB,KAAKY,IAAI,cAChCZ,KAAK0vB,gBAAkB1vB,KAAKY,IAAI,cAChCZ,KAAK2vB,eAAiB3vB,KAAKY,IAAI,aAC/BZ,KAAK4vB,eAAiB5vB,KAAKY,IAAI,aAC/BZ,KAAK6vB,eAAiB7vB,KAAKY,IAAI,aAE/B,IAAI4D,EAAaxE,KAAKY,IAAI,cAE1B,GAAI4D,EAAW8I,OAAQ,CACtB,IAAImjB,EAAKjsB,EAAW8I,OAAO,CAACkiB,EAAU9pB,EAAG8pB,EAAU3pB,IAC/C6qB,EAAKlsB,EAAW8I,OAAO,CAACkiB,EAAU9pB,EAAI,EAAG8pB,EAAU3pB,EAAI,IACvD4qB,GAAMC,IACT1wB,KAAK2wB,MAAQ3qB,KAAKC,IAAIyqB,EAAG,GAAKD,EAAG,IACjCzwB,KAAK4wB,MAAQ5qB,KAAKC,IAAIyqB,EAAG,GAAKD,EAAG,I,GAKtC,CASOnjB,MAAAA,CAAO1E,GACb,IAAIpE,EAAaxE,KAAKY,IAAI,cAE1B,GAAI4D,EAAW8I,OAAQ,CACtB,MAAMujB,EAAKrsB,EAAW8I,OAAO,CAAC1E,EAAMlD,EAAGkD,EAAM/C,IAC7C,GAAIgrB,EACH,MAAO,CAAEtlB,UAAWslB,EAAG,GAAIrlB,SAAUqlB,EAAG,G,CAI1C,MAAO,CAAEtlB,UAAW,EAAGC,SAAU,EAClC,CAWOF,OAAAA,CAAQ1C,EAAkB4Z,EAAoBC,GACpD,IACI+J,EADAhoB,EAAaxE,KAAKY,IAAI,cAQ1B,GALK4D,EAAW8Z,SACfkE,OAAY3hB,EACZ4hB,OAAY5hB,GAGI,MAAb2hB,GAAkC,MAAbC,EAAmB,CAC1B,MAAbD,IACHA,EAAY,GAEI,MAAbC,IACHA,EAAY,GAEb,IAAIrP,EAAW5O,EAAW8Z,SAC1B9Z,EAAW8Z,OAAO,CAACkE,EAAWC,EAAW,IACzC+J,EAAKhoB,EAAW,CAACoE,EAAM2C,UAAW3C,EAAM4C,WACxChH,EAAW8Z,OAAOlL,E,MAGlBoZ,EAAKhoB,EAAW,CAACoE,EAAM2C,UAAW3C,EAAM4C,WAGzC,OAAIghB,EACI,CAAE9mB,EAAG8mB,EAAG,GAAI3mB,EAAG2mB,EAAG,IAGnB,CAAE9mB,EAAG,EAAGG,EAAG,EACnB,CAEUipB,cAAAA,CAAegC,GACxB9wB,KAAKirB,eAAesE,YAAc,CAAC,CACpC,CAEUwB,YAAAA,GACT,MAAM9F,EAAiBjrB,KAAKirB,eAC5B,IAAIjoB,EAAI,EACJguB,EAA4B,GAC5BC,EAA4B,GAWhC,GATAptB,EAAAA,GAAaonB,EAAesE,aAAa,CAACnhB,EAAGxF,KAC5CooB,EAAWhuB,GAAK4F,EAChB,IAAIonB,EAAYhwB,KAAKiwB,YAAY7hB,GAC7B4hB,IACHiB,EAAWjuB,GAAKgtB,GAEjBhtB,GAAG,IAGAguB,EAAWrvB,OAAS,GAAKsvB,EAAWtvB,OAAS,EAAG,CACnD,MAAMsJ,EAAUggB,EAAerf,SAE/B,IAAIslB,EAAaF,EAAW,GACxBG,EAAaH,EAAW,GAExBI,EAAaH,EAAW,GACxBI,EAAaJ,EAAW,GAE5B,GAAIC,GAAcC,GAAcC,GAAcC,EAAY,CAEzDH,EAAajmB,EAAQugB,QAAQ0F,GAC7BC,EAAalmB,EAAQugB,QAAQ2F,GAE7BC,EAAanmB,EAAQugB,QAAQ4F,GAC7BC,EAAapmB,EAAQugB,QAAQ6F,GAE7B,IAAIC,EAAkBtrB,KAAKkB,MAAMiqB,EAAWzrB,EAAIwrB,EAAWxrB,EAAGyrB,EAAWtrB,EAAIqrB,EAAWrrB,GAGpF0rB,EAFkBvrB,KAAKkB,MAAMmqB,EAAW3rB,EAAI0rB,EAAW1rB,EAAG2rB,EAAWxrB,EAAIurB,EAAWvrB,GAE1DyrB,EAAkBtxB,KAAKqvB,eACrDkC,EAAQ5D,GAAAA,GAAiB4D,EAAOvxB,KAAKY,IAAI,eAAgB,GAAIZ,KAAKY,IAAI,eAAgB,KAEtF,IAAI4wB,EAAa,CAAE9rB,EAAG0rB,EAAW1rB,GAAK2rB,EAAW3rB,EAAI0rB,EAAW1rB,GAAK,EAAGG,EAAGurB,EAAWvrB,GAAKwrB,EAAWxrB,EAAIurB,EAAWvrB,GAAK,GACtH4rB,EAAa,CAAE/rB,EAAGwrB,EAAWxrB,GAAKyrB,EAAWzrB,EAAIwrB,EAAWxrB,GAAK,EAAGG,EAAGqrB,EAAWrrB,GAAKsrB,EAAWtrB,EAAIqrB,EAAWrrB,GAAK,GAEtH6rB,EAAK1xB,KAAKyvB,iBAAmB,EAC7BkC,EAAK3xB,KAAK0vB,iBAAmB,EAE7BnN,EAAYviB,KAAKqvB,eAEjB5C,EAAK+E,EAAW9rB,IAAOgsB,EAAKD,EAAW/rB,GAAK6c,EAAYgP,EACxD7E,EAAK8E,EAAW3rB,IAAO8rB,EAAKF,EAAW5rB,GAAK0c,EAAYgP,EAE5DvxB,KAAK0D,IAAI,YAAa6tB,GACtBvxB,KAAK0D,IAAI,aAAc+oB,GACvBzsB,KAAK0D,IAAI,aAAcgpB,E,EAG1B,CAEUqC,gBAAAA,CAAiB5D,GAC1B,MAAMF,EAAiBjrB,KAAKirB,eAC5B,IAAIuE,EAAYvE,EAAe2G,gBAC/B,MAAMC,EAAc5G,EAAe8E,kBAG7B+B,EAFgB3G,EAAME,cAEIyG,UAEhC,GAAI9xB,KAAKY,IAAI,cACRkxB,IACH9xB,KAAKiwB,YAAY6B,GAAa3G,EAAMviB,MAEhC/E,EAAAA,GAAaonB,EAAesE,aAAa5tB,OAAS,GACrD3B,KAAK+wB,oBAMR,KAAIc,IAAeC,GAAaA,GAAaD,IAIxCrC,EAAW,CACd,MAAMrN,EAAOniB,KAAKY,IAAI,QAChBwhB,EAAOpiB,KAAKY,IAAI,QACtB,GAAY,QAARuhB,GAA0B,QAARC,EAAgB,CACrC,MAAMnX,EAAUggB,EAAerf,SAC/B,IAAImmB,EAAQ9mB,EAAQugB,QAAQL,EAAMviB,OAClC4mB,EAAYvkB,EAAQugB,QAAQgE,GAE5B,IAAI9pB,EAAI1F,KAAKyvB,gBACT5pB,EAAI7F,KAAK0vB,gBAEb,GAAI1pB,KAAKkB,MAAMsoB,EAAU9pB,EAAIqsB,EAAMrsB,EAAG8pB,EAAU3pB,EAAIksB,EAAMlsB,GAAK,EAAG,CACjE,IAAIqqB,EAAKjF,EAAerqB,IAAI,cAK5B,GAJIsvB,GACHA,EAAGpsB,OAAOkuB,YAAY,SAGnB5lB,EAAAA,GAAe1G,IAAM0G,EAAAA,GAAevG,GAAI,CAC3C,IAAIrB,EAAaxE,KAAKY,IAAI,cAC1B,MAAM2hB,EAAYviB,KAAKY,IAAI,YAAa,GAElCwiB,EAAYpjB,KAAKY,IAAI,YAAa,IAClCua,EAASnb,KAAKktB,WAEdvR,EAAI3b,KAAKkhB,QACTtF,EAAI5b,KAAKohB,SAET6Q,EAAK9W,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BmR,EAAKnR,EAAO,GAAG,GAAKA,EAAO,GAAG,GAEpC,GAAY,cAARgH,EAAsB,CACzBzc,GAAKqsB,EAAMrsB,EAAI8pB,EAAU9pB,EAEzB,MAAM6iB,EAAK5M,EAAI,GAAKA,EAAI,EAAI3b,KAAKgtB,UAAYzK,EAC7C7c,EAAIM,KAAKwU,IAAI9U,EAAG6iB,EAAK0J,EAAK7O,EAAYb,GACtC7c,EAAIM,KAAKoK,IAAI1K,EAAG6iB,EAAK0J,EAAK7O,EAAYb,E,CAGvC,GAAY,cAARH,EAAsB,CACzBvc,GAAKksB,EAAMlsB,EAAI2pB,EAAU3pB,EACzB,MAAM2iB,EAAK5M,EAAI,GAAKA,EAAI,EAAI5b,KAAKitB,UAAY1K,EAC7C1c,EAAIG,KAAKwU,IAAI3U,EAAG2iB,EAAK8D,EAAKlJ,EAAYb,GACtC1c,EAAIG,KAAKoK,IAAIvK,EAAG2iB,EAAK8D,EAAKlJ,EAAYb,E,CAMvC,GAHAviB,KAAK0D,IAAI,aAAcgC,GACvB1F,KAAK0D,IAAI,aAAcmC,GAEnBrB,EAAW8I,OAAQ,CACtB,IAAI4kB,EAAe1tB,EAAW8I,OAAO,CAACkiB,EAAU9pB,EAAG8pB,EAAU3pB,IACzDsH,UAAY+kB,IACH,WAAR/P,GACHniB,KAAK0D,IAAI,YAAa1D,KAAK2vB,gBAAmBH,EAAU9pB,EAAIqsB,EAAMrsB,GAAK1F,KAAK2wB,OAEjE,WAARvO,GACHpiB,KAAK0D,IAAI,YAAa1D,KAAK4vB,gBAAmBJ,EAAU3pB,EAAIksB,EAAMlsB,GAAK7F,KAAK4wB,O,KASrF,CAEUjF,mBAAAA,CAAoBvhB,EAAe8jB,EAAkBiE,GAC9DnyB,KAAKwwB,KAAOxwB,KAAKoyB,QAAQ,CAAErX,IAAK,YAAa1C,GAAIrY,KAAKY,IAAI,YAAa,GAAKwJ,EAAO8jB,SAAUA,EAAUiE,OAAQA,GAChH,CAEUvG,mBAAAA,CAAoBxhB,EAAe8jB,EAAkBiE,GAC9DnyB,KAAKuwB,KAAOvwB,KAAKoyB,QAAQ,CAAErX,IAAK,YAAa1C,GAAIrY,KAAKY,IAAI,YAAa,GAAKwJ,EAAO8jB,SAAUA,EAAUiE,OAAQA,GAChH,CAEU1G,gBAAAA,CAAiBrhB,EAAexB,GACzC,IAAIsH,EAAOlQ,KAAKY,IAAI,WAAY,GAC5B2hB,EAAYviB,KAAKY,IAAI,YAAa,GAClCyxB,EAAe9P,EACfnY,EAAQ,EACXioB,EAAe9P,EAAYrS,EAEnB9F,EAAQ,IAChBioB,EAAe9P,EAAYrS,GAGxBmiB,GAAgB9P,GACnBviB,KAAKsyB,YAAY1pB,EAAOypB,EAE1B,CAUOE,eAAAA,CAAgBlgB,EAAyE6b,EAAmB1L,EAAoBC,GAClIpQ,EAAUG,MAAQH,EAAUC,OAC/BD,EAAUG,MAAQ,IAClBH,EAAUC,MAAQ,KAGnB,MACMkgB,EADUxyB,KAAK0E,WAAW,WACNyW,OAAOnb,KAAKksB,oBAEtC,IAAI7gB,EAAKrL,KAAKsL,QAAQ,CAAEC,UAAW8G,EAAUC,KAAM9G,SAAU6G,EAAUI,KAAO+P,EAAWC,GACrFpV,EAAKrN,KAAKsL,QAAQ,CAAEC,UAAW8G,EAAUG,MAAOhH,SAAU6G,EAAUE,QAAUiQ,EAAWC,GAEzFpX,EAAGxF,EAAI2sB,EAAU,GAAG,KACvBnnB,EAAGxF,EAAI2sB,EAAU,GAAG,IAGjBnlB,EAAGxH,EAAI2sB,EAAU,GAAG,KACvBnlB,EAAGxH,EAAI2sB,EAAU,GAAG,IAGrB,IAAIC,EAAKzyB,KAAKY,IAAI,YAAa,GAE3Bua,EAAiB9P,EAAG3F,EAApByV,EAA8B9N,EAAG3H,EAAjCyV,EAAyC9P,EAAGxF,EAA5CsV,EAAuD9N,EAAGxH,EAE1D+kB,EAAkB5qB,KAAK4qB,gBAEvBrI,EAAY,GAAKvc,KAAKwU,IAAIoQ,EAAgBmB,cAAgB5Q,EAAeA,GAAesX,EAAI7H,EAAgBoB,eAAiB7Q,EAAgBA,GAAcsX,GAC3J/sB,EAAIyV,GAAeA,EAAeA,GAAe,EACjDtV,EAAIsV,GAAcA,EAAgBA,GAAc,EAEhD7O,EAAWtM,KAAKsN,OAAO,CAAE5H,IAAGG,MAMhC,OAJiB,MAAb2c,GAAkC,MAAbC,GACxBziB,KAAKse,OAAOkE,EAAWC,GAGjBziB,KAAKmuB,eAAe7hB,EAAUiW,GAAW,EAAM2L,EACvD,CAUOoE,WAAAA,CAAY1pB,EAAe2oB,EAAerS,EAAkBgP,GAC9DqD,IACHA,EAAQ5D,GAAAA,GAAiB4D,EAAOvxB,KAAKY,IAAI,eAAgB,GAAIZ,KAAKY,IAAI,eAAgB,MAGlFwL,EAAAA,GAAe8hB,KACnBA,EAAWluB,KAAKY,IAAI,oBAAqB,IAE1C,MAAMuxB,EAASnyB,KAAKY,IAAI,mBAClB2hB,EAAYviB,KAAKY,IAAI,YAAa,GAEpCZ,KAAKY,IAAI,uBAAyB2wB,GAASvxB,KAAKY,IAAI,gBAAiB,KACxEgI,EAAQ5I,KAAKsL,QAAQtL,KAAKguB,gBAC1B9O,GAAS,GAGV,IAAIxZ,EAAIkD,EAAMlD,EACVG,EAAI+C,EAAM/C,EAEV6rB,EAAK1xB,KAAKY,IAAI,aAAc,GAC5B+wB,EAAK3xB,KAAKY,IAAI,aAAc,GAE5B2nB,EAAK7iB,EACL8iB,EAAK3iB,EAELqZ,IACHqJ,EAAKvoB,KAAKkhB,QAAU,EACpBsH,EAAKxoB,KAAKohB,SAAW,GAGtB,IAAIqL,EAAKlE,GAAO7iB,EAAIgsB,GAAMnP,EAAYgP,EAClC7E,EAAKlE,GAAO3iB,EAAI8rB,GAAMpP,EAAYgP,EAWtC,OARAvxB,KAAKqwB,KAAOrwB,KAAKoyB,QAAQ,CAAErX,IAAK,aAAc1C,GAAIoU,EAAIyB,SAAUA,EAAUiE,OAAQA,IAClFnyB,KAAKswB,KAAOtwB,KAAKoyB,QAAQ,CAAErX,IAAK,aAAc1C,GAAIqU,EAAIwB,SAAUA,EAAUiE,OAAQA,IAClFnyB,KAAKowB,IAAMpwB,KAAKoyB,QAAQ,CAAErX,IAAK,YAAa1C,GAAIkZ,EAAOrD,SAAUA,EAAUiE,OAAQA,IAE/E5P,GAAagP,GAChBvxB,KAAKgP,MAAM0jB,YAAY1yB,KAAK2yB,GAAG,2BAA4B3yB,KAAKgP,MAAM4jB,OAAQxmB,EAAAA,GAAqBmlB,KAG7FvxB,KAAKowB,GACb,CAaOjC,cAAAA,CAAe7hB,EAAqBilB,EAAerS,EAAkBgP,EAAmB1L,EAAoBC,GAElH,IAAI+J,EAAKxsB,KAAKsL,QAAQgB,EAAUkW,EAAWC,GAM3C,GAJiB,MAAbD,GAAkC,MAAbC,GACxBziB,KAAKse,OAAOkE,EAAWC,EAAWyL,GAG/B1B,EACH,OAAOxsB,KAAKsyB,YAAY9F,EAAI+E,EAAOrS,EAAQgP,EAE7C,CAEO5P,MAAAA,CAAOkE,EAAoBC,EAAoByL,GAErD,GADmBluB,KAAKY,IAAI,cACZ0d,OAEX,CACClS,EAAAA,GAAe8hB,KACnBA,EAAWluB,KAAKY,IAAI,oBAAqB,IAG1C,MAAMuxB,EAASnyB,KAAKY,IAAI,mBACP,MAAb4hB,GACHxiB,KAAKoyB,QAAQ,CAAErX,IAAK,YAAa1C,GAAImK,EAAW0L,SAAUA,EAAUiE,OAAQA,IAE5D,MAAb1P,GACHziB,KAAKoyB,QAAQ,CAAErX,IAAK,YAAa1C,GAAIoK,EAAWyL,SAAUA,EAAUiE,OAAQA,G,MAG/E,CAKOU,MAAAA,GACN,OAAO7yB,KAAKsyB,YAAY,CAAE5sB,EAAG1F,KAAKkhB,QAAU,EAAGrb,EAAG7F,KAAKohB,SAAW,GAAKphB,KAAKY,IAAI,YAAa,GAAKZ,KAAKY,IAAI,WAAY,GACxH,CAKOkyB,OAAAA,GACN,OAAO9yB,KAAKsyB,YAAY,CAAE5sB,EAAG1F,KAAKkhB,QAAU,EAAGrb,EAAG7F,KAAKohB,SAAW,GAAKphB,KAAKY,IAAI,YAAa,GAAKZ,KAAKY,IAAI,WAAY,GACxH,CAEOoL,WAAAA,GACNtL,MAAMsL,cACNhM,KAAK2sB,kBAAmB,EACxB3sB,KAAK+tB,YAAa,CACnB,CAKOgF,OAAAA,CAAQvxB,GACd,MAAMiD,EAAUzE,KAAK0E,WAAW,WAC1B/B,EAAWnB,EAASZ,IAAI,YAC9B,OAAI+B,EACI8B,EAAQ0gB,KAAKxiB,GAEd,CACR,EA57BA9C,OAAAC,eAAAkqB,GAAA,a,gDAAkC,aAClCnqB,OAAAC,eAAAkqB,GAAA,c,gDAA0CC,GAAAA,EAAY/kB,WAAWC,OAAO,CAAC6kB,GAAS5kB,cEhG7E,MAAO4tB,WAAuBtzB,EAApCE,WAAAA,G,oBASCC,OAAAC,eAAA,e,gDAAwD,CAAC,QAAS,gBAElED,OAAAC,eAAA,uB,wDAmZD,CAjZWC,SAAAA,GACTC,KAAKC,OAAOC,KAAK,YAAa,SAAU,YAAa,WAAY,SACjEQ,MAAMX,WACP,CAKO+L,mBAAAA,GACN9L,KAAK+L,WACN,CAOO2D,eAAAA,CAAgBlO,GACtBd,MAAMgP,kBAEFlO,GACHxB,KAAKizB,iBAAiBzxB,EAExB,CAEUmC,eAAAA,CAAgBnC,GACzBd,MAAMiD,gBAAgBnC,GACtB,IAAImB,EAAWnB,EAASZ,IAAI,YAC5B,GAAK+B,GAKJ,GAAqB,SAAjBA,EAASD,KAAiB,CAC7B,MAAMiG,EAAchG,EAASgG,YACzBA,IACHnH,EAASkC,IAAI,YAAaiF,EAAY,IACtCnH,EAASkC,IAAI,WAAYiF,EAAY,I,MAGlC,GAAqB,cAAjBhG,EAASD,KAAsB,CACvC,MAAMiG,EAAchG,EAASgG,YACzBA,GAAeA,EAAY,KAC9BnH,EAASkC,IAAI,YAAaiF,EAAY,GAAG,IACzCnH,EAASkC,IAAI,WAAYiF,EAAY,GAAG,I,OAf1ChG,EAAW,CAAED,KAAM,QAASiG,YAAa,CAACnH,EAASZ,IAAI,YAAa,GAAIY,EAASZ,IAAI,WAAY,KACjGY,EAASkC,IAAI,WAAYf,GAmB1B3C,KAAKqC,aAAaM,EAAU3C,KAC7B,CAEUkzB,YAAAA,CAAa1xB,GACtBA,EAAS8rB,QAAU,GAEnBttB,KAAKstB,QAAQV,MAAMuG,IAClB,MAAMxwB,EAAWnB,EAASZ,IAAI,YAE9B,GAAI+B,EACH,GAAqB,SAAjBA,EAASD,KACZ1C,KAAKozB,iBAAiBpzB,KAAKqzB,YAAY7xB,EAAU2xB,SAE7C,GAAIxwB,EAASD,KAAO,aAAc,CACtC,IAAIM,EAAI,EACR1B,EAAAA,GAAYqB,EAASgG,aAAa,KACjC3I,KAAKozB,iBAAiBpzB,KAAKqzB,YAAY7xB,EAAU2xB,EAAgBnwB,IACjEA,GAAG,G,IAKR,CAEUowB,gBAAAA,CAAiB7F,GAC1B,GAAIA,EAAQ,CACX,MAAMC,EAASD,EAAO3sB,IAAI,UACpBO,EAAQnB,KAAKmB,MACnB,GAAIqsB,GAAUrsB,EAAO,CACpB,MAAMK,EAAWgsB,EAAOhsB,SACpBA,IACCA,EAASZ,IAAI,SACZ4sB,EAAO8F,QAAUnyB,EAAMmD,kBAC1BnD,EAAMmD,iBAAiBF,SAASC,UAAUmpB,GAIvCA,EAAO8F,QAAUtzB,KAAKsE,kBACzBtE,KAAKsE,iBAAiBF,SAASC,UAAUmpB,G,EAM/C,CAEO+F,eAAAA,CAAgBhG,GACtB,MAAMC,EAASD,EAAO3sB,IAAI,UAC1B,GAAI4sB,EAAQ,CACX,MAAMhsB,EAAWgsB,EAAOhsB,SACxB,GAAIA,GAAYA,EAASZ,IAAI,SAC5B,OAGD,MAAM4K,EAAWhK,EAASZ,IAAI,YACxB2K,EAAY/J,EAASZ,IAAI,aACzB4yB,EAAehyB,EAASZ,IAAI,gBAC5B6yB,EAAQjyB,EAASZ,IAAI,SACrBO,EAAQnB,KAAKmB,MACnB,IAAIsS,EACJ,GAAI+f,EACH/f,EAAO+f,EAAa5yB,IAAI,eAEpB,CACJ,MAAM8yB,EAASlyB,EAASZ,IAAI,UAExB8yB,GAAUvyB,GACbA,EAAMwD,OAAOioB,MAAMjoB,IAClB,GAAIA,EAAO0oB,OAAsB,iBAAkB,CAClD,IAAIsG,EAAShvB,EAAOlD,gBAAgBiyB,GAChCC,IACHnyB,EAASkC,IAAI,eAAgBiwB,GAC7BlgB,EAAOkgB,EAAO/yB,IAAI,W,KAOnBZ,KAAK4zB,gBACR5zB,KAAK4zB,eAAe9jB,UAGjB2D,IACHzT,KAAK4zB,eAAiBngB,EAAK3P,OAAO1D,GAAG,eAAe,KACnDJ,KAAKizB,iBAAiBzxB,EAAS,KAIjC,MAAMqyB,EAAkBryB,EAASZ,IAAI,mBACrC,IAAIqV,EACJ,GAAI4d,EACH5d,EAAU4d,EAAgBjzB,IAAI,kBAE1B,CACJ,MAAMkzB,EAAYtyB,EAASZ,IAAI,aAE3BkzB,GAAa3yB,GAChBA,EAAMwD,OAAOioB,MAAMjoB,IAClB,GAAIA,EAAO0oB,OAAyB,oBAAqB,CACxD,IAAI0G,EAAYpvB,EAAOlD,gBAAgBqyB,GACnCC,IACHvyB,EAASkC,IAAI,kBAAmBqwB,GAChC9d,EAAU8d,EAAUnzB,IAAI,c,KAO7B,MAAMozB,EAAiBxyB,EAASZ,IAAI,kBACpC,IAAI+H,EAEAgO,EAEJ,GAAIV,EAAS,CACZ,IAAI3J,EAAW2J,EAAQge,iBACvBtrB,EAAc,CAAC2D,EAASf,UAAWe,EAASd,UAC5ChK,EAASoO,OAAO,YAAatD,EAASf,WACtC/J,EAASoO,OAAO,WAAYtD,EAASd,S,MAEjC,GAAIiI,GAAQrH,EAAAA,GAAe4nB,GAAiB,CAChD,IAAI1nB,EAAWmH,EAAKlH,mBAAmBynB,GAGvC,GAFArrB,EAAc,CAAC2D,EAASf,UAAWe,EAASd,UAExChK,EAASZ,IAAI,aAAc2sB,EAAO3sB,IAAI,gBAAkBO,EAAO,CAClE,MAAM+yB,EAAYzgB,EAAKlH,mBAAmBynB,EAAiB,MACrDG,EAAY1gB,EAAKlH,mBAAmBynB,EAAiB,MAErDld,EAAS3V,EAAMmK,QAAQ4oB,GACvB/c,EAAShW,EAAMmK,QAAQ6oB,GAG7Bxd,EAAQgX,GAAAA,GAAe7W,EAAQK,E,CAGhC3V,EAASoO,OAAO,YAAatD,EAASf,WACtC/J,EAASoO,OAAO,WAAYtD,EAASd,S,MAEjC,GAAIY,EAAAA,GAAeb,IAAca,EAAAA,GAAeZ,GACpD7C,EAAc,CAAC4C,EAAWC,OAEtB,CACJ,MAAM7I,EAAWnB,EAASZ,IAAI,YAC9B,GAAI+B,EACH,GAAqB,SAAjBA,EAASD,KACZ1C,KAAKo0B,oBAAoB7G,EAAQ5qB,EAAUA,EAASgG,YAAiCgO,QAEjF,GAAqB,cAAjBhU,EAASD,KAAsB,CACvC,IAAI2xB,EAAQ9G,EAAO+G,QAAU,EAC7B3rB,EAAchG,EAASgG,YAAY0rB,E,GAKjCZ,GAAS9qB,GACb3I,KAAKo0B,oBAAoB7G,EAAQ,CAAE7qB,KAAM,QAASiG,YAAaA,GAAeA,EAAagO,E,CAG9F,CAEUyd,mBAAAA,CAAoB7G,EAAgB5qB,EAA4BgG,EAA+BgO,GACxG,MAAM6W,EAASD,EAAO3sB,IAAI,UACpBO,EAAQnB,KAAKmB,MACnB,GAAIA,EAAO,CACV,MAAMqD,EAAarD,EAAMP,IAAI,cACvB6D,EAAUtD,EAAMuD,WAAW,WAC3BlD,EAA8CgsB,EAAOhsB,SAErDgrB,EAAKhoB,EAAWmE,GAEtB,GAAI6jB,EAAI,CACP,MAAM5jB,EAAQ,CAAElD,EAAG8mB,EAAG,GAAI3mB,EAAG2mB,EAAG,IAChCgB,EAAOvL,OAAOrZ,GACdpH,EAASoO,OAAO,QAAShH,E,CAG1B,IAAIsQ,GAAU,EACVzU,EAAQ9B,GACP3C,KAAKY,IAAI,eACZsY,GAAU,GAIPlZ,KAAKY,IAAI,cACZsY,GAAU,GAGZsU,EAAOhe,WAAW,UAAW0J,GAC7B1X,EAASkC,IAAI,WAAYwV,GAErB1X,GAAqB,MAATmV,GAAiBnV,EAASZ,IAAI,aAAc2sB,EAAO3sB,IAAI,gBACtE4sB,EAAO9pB,IAAI,WAAYiT,EAAQnV,EAASZ,IAAI,kBAAmB2sB,EAAO3sB,IAAI,kBAAmB,I,CAGhG,CAUO2zB,cAAAA,CAAe/yB,EAA6C+gB,EAAmBjE,GACrF,MAAMnd,EAAQnB,KAAKmB,MACnB,GAAIA,EAAO,CACV,MAAMoK,EAAY/J,EAASZ,IAAI,YAAa,GACtC4K,EAAWhK,EAASZ,IAAI,WAAY,GAC1C,OAAI0d,EACInd,EAAMgtB,eAAe,CAAE5iB,UAAWA,EAAWC,SAAUA,GAAY+W,GAAW,OAAM1hB,GAAY0K,GAAYC,GAE7GrK,EAAMgtB,eAAe,CAAE5iB,UAAWA,EAAWC,SAAUA,GAAY+W,GAAW,E,CAEvF,CAWAiS,eAAAA,CAAgBzyB,EAAqDuc,GAEpE,IAAIhM,EAAsB,KACtBE,EAAuB,KACvBC,EAAqB,KACrBF,EAAwB,KAmB5B,GAjBAjR,EAAAA,GAAYS,GAAYP,IACvB,MAAM+J,EAAY/J,EAASZ,IAAI,YAAa,GACtC4K,EAAWhK,EAASZ,IAAI,WAAY,IAE9B,MAAR0R,GAAgBA,EAAO/G,KAC1B+G,EAAO/G,IAEK,MAATiH,GAAiBA,EAAQjH,KAC5BiH,EAAQjH,IAEE,MAAPkH,GAAeA,EAAMjH,KACxBiH,EAAMjH,IAEO,MAAV+G,GAAkBA,EAAS/G,KAC9B+G,EAAS/G,E,IAGC,MAAR8G,GAAyB,MAATE,GAAwB,MAAPC,GAAyB,MAAVF,EAAgB,CACnE,MAAMpR,EAAQnB,KAAKmB,MACnB,GAAIA,EACH,OAAImd,EACInd,EAAMoxB,gBAAgB,CAAEjgB,OAAME,QAAOC,MAAKF,eAAU1R,IAAayR,GAAQE,EAAQF,GAAQ,KAAMG,GAAOA,EAAMF,GAAU,IAEvHpR,EAAMoxB,gBAAgB,CAAEjgB,OAAME,QAAOC,MAAKF,U,CAGpD,CAMO1C,eAAAA,CAAgBrO,GACtB,MAAML,EAAQnB,KAAKmB,MACfA,GACHA,EAAMwD,OAAOioB,MAAMjoB,IACdA,EAAO0oB,OAAsB,kBAChC/rB,EAAAA,GAAYqD,EAAO5C,WAAY0yB,IAC9B,MAAMhlB,EAAkBglB,EAAG7zB,IAAI,mBAC3B6O,GACHnO,EAAAA,GAAYmO,GAAkB7G,IACzBA,GAASpH,IACZF,EAAAA,GAAcmO,EAAiB7G,GAC/BjE,EAAO+K,gBAAgB+kB,G,UAS9B/zB,MAAMmP,gBAAgBrO,EACvB,CAKUE,gBAAAA,CAAiBF,GAC1Bd,MAAMgB,iBAAiBF,GACvB,MAAM8rB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOhe,WAAW,WAAW,E,GAIjC,CAMU3N,kBAAAA,CAAmBL,GAC5Bd,MAAMmB,mBAAmBL,GACzB,MAAM8rB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOhe,WAAW,WAAW,E,GAIjC,CAKUvN,mBAAAA,CAAoBT,GAC7Bd,MAAMuB,oBAAoBT,GAC1B,MAAM8rB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOhe,WAAW,WAAW,E,GAIjC,CAKUtN,qBAAAA,CAAsBV,GAC/Bd,MAAMwB,sBAAsBV,GAC5B,MAAM8rB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOhe,WAAW,WAAW,E,GAIjC,EA3ZA3P,OAAAC,eAAAkzB,GAAA,a,gDAAkC,mBAClCnzB,OAAAC,eAAAkzB,GAAA,c,gDAA0CtzB,EAAUwF,WAAWC,OAAO,CAAC6tB,GAAe5tB,c,0BCpIjF,MAAOsvB,WAAmBhqB,EAAAA,EAAhC9K,WAAAA,G,oBAOCC,OAAAC,eAAA,yB,iDAAsC,IAKtCD,OAAAC,eAAA,e,wDAkHD,CAhHQ6K,cAAAA,GAGN,GAFAjK,MAAMiK,iBAEF3K,KAAK4K,kBAAoB5K,KAAKkB,QAAQ,aAAelB,KAAKkB,QAAQ,aAAc,CACnF,MAAMyB,EAAW3C,KAAKY,IAAI,YAE1B,GAAI+B,EAAU,CACb,MAAMgC,EAAS3E,KAAK2E,OACpB,GAAIA,EAAQ,CACX,MAAMH,EAAaG,EAAOH,aACtBA,GACHA,EAAWsG,UAAU9K,KAAKY,IAAI,YAAa,KAG5C,MAAM6D,EAAUE,EAAOF,UAEnBA,IACHzE,KAAK+K,QAAS,EAEd/K,KAAK0D,IAAI,QAASkI,IACjBnH,EAAQoH,QAAQ7L,KAAK4L,UACrBnH,EAAQ9B,GACR8B,EAAQoH,QAAQ,KAAK,IAGlB7L,KAAK20B,WACR30B,KAAK40B,c,GAMX,CAKO9oB,mBAAAA,GACN9L,KAAK+L,YACL/L,KAAK4K,kBAAmB,CACzB,CAEOoB,WAAAA,GACNtL,MAAMsL,cACNhM,KAAK4K,kBAAmB,CACzB,CAOOgf,WAAAA,GACN,MAAMjnB,EAAW3C,KAAKY,IAAI,YAC1B,OAAI+B,EACI+qB,GAAyB/qB,GAGzB,CAAE6I,SAAU,EAAGD,UAAW,EAEnC,CAOO0oB,cAAAA,GAEN,IAAIY,EAAc,EACdlsB,EAA4B,GAChC,MAAMhG,EAAW3C,KAAKY,IAAI,YAE1B,GAAI+B,EAAU,CACb,GAAqB,WAAjBA,EAASD,KACZiG,EAAchG,EAASgG,iBAEnB,GAAqB,gBAAjBhG,EAASD,KACjB,IAAK,IAAIM,EAAI,EAAGA,EAAIL,EAASgG,YAAYhH,OAAQqB,IAAK,CACrD,IAAI2M,EAAShN,EAASgG,YAAY3F,GAC9BmiB,EAAO2P,GAAQ,CAAEpyB,KAAM,UAAWiG,YAAagH,IAC/CwV,EAAO0P,IACVlsB,EAAcgH,EACdklB,EAAc1P,E,CAKjB,IAAIjG,EAAS6V,KAAWpsB,GACxB,MAAO,CAAE4C,UAAW2T,EAAO,GAAI1T,SAAU0T,EAAO,G,CAGjD,MAAO,CAAE3T,UAAW,EAAGC,SAAU,EAClC,CAGOS,gBAAAA,GACN,MAAMtH,EAAS3E,KAAK2E,OAEpB,GAAIA,EAAQ,CACX,MAAMH,EAAaG,EAAOH,aAC1B,GAAIA,EAAY,CACf,MAAM8H,EAAWtM,KAAKi0B,iBAChBzH,EAAKhoB,EAAW,CAAC8H,EAASf,UAAWe,EAASd,WAEpD,GAAIghB,EACH,MAAO,CAAE9mB,EAAG8mB,EAAG,GAAI3mB,EAAG2mB,EAAG,G,EAI5B,MAAO,CAAE9mB,EAAG,EAAGG,EAAG,EACnB,EAxHAhG,OAAAC,eAAA40B,GAAA,a,gDAAkC,eAClC70B,OAAAC,eAAA40B,GAAA,c,gDAA0ChqB,EAAAA,EAASxF,WAAWC,OAAO,CAACuvB,GAAWtvB,cCa5E,MAAO4vB,WAAyBt1B,EAAtCE,WAAAA,G,oBAmBCC,OAAAC,eAAA,oB,gDAAwD,IAAI8O,EAAAA,EAC3DC,GAAAA,GAASC,IAAI,CAAC,IACd,IAAM4lB,GAAW3lB,KAAK/O,KAAKgP,MAAO,CAAC,EAAG,CAAChP,KAAKi1B,YAAY/lB,eAUzDrP,OAAAC,eAAA,e,gDAAwD,CAAC,UAAW,iBA6JrE,CAvLQo1B,cAAAA,CAAe1zB,GACrB,MAAM2zB,EAAan1B,KAAKoE,SAASlE,KAAKF,KAAKi1B,YAAY5lB,QAGvD,OAFA8lB,EAAW7lB,aAAa9N,GACxBxB,KAAKi1B,YAAY/0B,KAAKi1B,GACfA,CACR,CA0BOrpB,mBAAAA,GACNxK,EAAAA,GAAYtB,KAAK+B,WAAYP,IAC5B,IAAI2zB,EAAa3zB,EAASZ,IAAI,cAC1Bu0B,GACHA,EAAWrpB,qB,GAGd,CAEO9K,gBAAAA,GACNN,MAAMM,mBAEFhB,KAAKkB,QAAQ,SAChBlB,KAAKi1B,YAAY/lB,SAASxL,IAAI,OAAQ1D,KAAKY,IAAI,SAE5CZ,KAAKkB,QAAQ,WAChBlB,KAAKi1B,YAAY/lB,SAASxL,IAAI,SAAU1D,KAAKY,IAAI,UAEnD,CAEU+C,eAAAA,CAAgBnC,GACzBd,MAAMiD,gBAAgBnC,GAEtB,IAAI2zB,EAAa3zB,EAASZ,IAAI,cACzBu0B,IACJA,EAAan1B,KAAKk1B,eAAe1zB,IAGlCA,EAASkC,IAAI,aAAcyxB,GAC3B,IAAIxyB,EAAWnB,EAASZ,IAAI,YAE5B,GAAI+B,EAAU,CACb,GAAI3C,KAAKY,IAAI,kBAAmB,CAE/B,GADoB+B,EAASgG,YAE5B,IAAK,IAAIjD,EAAI,EAAGA,EAAI/C,EAASgG,YAAYhH,OAAQ+D,IAChD,GAAqB,gBAAjB/C,EAASD,KACZ,IAAK,IAAImD,EAAI,EAAGA,EAAIlD,EAASgG,YAAYjD,GAAG/D,OAAQkE,IACnDlD,EAASgG,YAAYjD,GAAGG,GAAG2L,eAI5B7O,EAASgG,YAAYjD,GAAG8L,S,CAK5B2jB,EAAWzxB,IAAI,WAAYf,E,CAG5BwyB,EAAWxwB,OAAS3E,KAEpBA,KAAKqC,aAAab,EAASZ,IAAI,YAAaZ,KAC7C,CAKO6P,eAAAA,CAAgBrO,GACtBd,MAAMmP,gBAAgBrO,GACtB,MAAM2zB,EAAa3zB,EAASZ,IAAI,cAC5Bu0B,IACHn1B,KAAKi1B,YAAYlwB,YAAYowB,GAC7BA,EAAWrlB,WAEZ9P,KAAKoC,gBAAgBZ,EAASZ,IAAI,YACnC,CAKUc,gBAAAA,CAAiBF,GAC1Bd,MAAMgB,iBAAiBF,GACvB,MAAM2zB,EAAa3zB,EAASZ,IAAI,cAC5Bu0B,GACHA,EAAW3lB,WAAW,WAAW,EAEnC,CAKU3N,kBAAAA,CAAmBL,GAC5Bd,MAAMmB,mBAAmBL,GACzB,MAAM2zB,EAAa3zB,EAASZ,IAAI,cAC5Bu0B,GACHA,EAAW3lB,WAAW,WAAW,EAEnC,CAKUvN,mBAAAA,CAAoBT,GAC7Bd,MAAMuB,oBAAoBT,GAC1B,MAAM2zB,EAAa3zB,EAASZ,IAAI,cAC5Bu0B,GACHA,EAAW3lB,WAAW,WAAW,EAEnC,CAKUtN,qBAAAA,CAAsBV,GAC/Bd,MAAMwB,sBAAsBV,GAC5B,MAAM2zB,EAAa3zB,EAASZ,IAAI,cAC5Bu0B,GACHA,EAAW3lB,WAAW,WAAW,EAEnC,CAOOE,eAAAA,CAAgBlO,GAEtB,GADAd,MAAMgP,kBACFlO,EAAU,CACb,MAAM2zB,EAAa3zB,EAASZ,IAAI,cAC5Bu0B,GACHA,EAAWzxB,IAAI,WAAYlC,EAASZ,IAAI,Y,CAG3C,CASO2zB,cAAAA,CAAe/yB,EAA+C8c,GACpE,MAAMrI,EAAUzU,EAASZ,IAAI,cAC7B,GAAIqV,EAAS,CACZ,MAAMtT,EAAWsT,EAAQrV,IAAI,YACvBO,EAAQnB,KAAKmB,MAEnB,GAAIwB,GAAYxB,EAAO,CAEtB,GAAImd,EAAQ,CACX,MAAM2H,EAAWyH,GAAyB/qB,GAE1C,OADAxB,EAAMmd,QAAQ2H,EAAS1a,WAAY0a,EAASza,UACrCrK,EAAMoxB,gBAAgB7E,GAAuB/qB,QAAW9B,GAAYolB,EAAS1a,WAAY0a,EAASza,S,CAG1G,OAAOrK,EAAMoxB,gBAAgB7E,GAAuB/qB,G,EAGvD,EAnKA9C,OAAAC,eAAAk1B,GAAA,a,gDAAkC,qBAClCn1B,OAAAC,eAAAk1B,GAAA,c,gDAA0Ct1B,EAAUwF,WAAWC,OAAO,CAAC6vB,GAAiB5vB,c,gDC+CnF,MAAOgwB,WAA6BpC,GAA1CpzB,WAAAA,G,oBASCC,OAAAC,eAAA,kB,gDAA2DE,KAAKgS,aAAa,CAAC,KAC9EnS,OAAAC,eAAA,sB,gDAAkC,IAClCD,OAAAC,eAAA,kB,gDAAyE,KACzED,OAAAC,eAAA,2B,gDAAiE,KAEjED,OAAAC,eAAA,sB,gDAAkC,IAClCD,OAAAC,eAAA,kB,gDAAyE,KAEzED,OAAAC,eAAA,oB,gDAAqBu1B,GAAAA,MAErBx1B,OAAAC,eAAA,gB,gDAAqD,IA2StD,CAzSWC,SAAAA,GACTC,KAAKC,OAAOC,KAAK,WACjBF,KAAKG,eAAe,eAAgB,WAEpCO,MAAMX,WACP,CAEOoS,eAAAA,GACNzR,MAAMyR,kBAEFnS,KAAKkB,QAAQ,mBAChBlB,KAAKs1B,QAAU3H,GAAAA,GAAmB,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,IAG/D,MAAM4H,EAA8E,CAAC,EAErFj0B,EAAAA,GAAYtB,KAAK+B,WAAYP,IAC5B,MAAMg0B,EAAUh0B,EAASZ,IAAI,UAAW,YAEnC20B,EAAOC,KACXD,EAAOC,GAAW,IAEnBD,EAAOC,GAASt1B,KAAKsB,EAAS,IAG/BxB,KAAKy1B,eAAiB,EACtBz1B,KAAK01B,UAAY,GACjB11B,KAAK21B,eAAiB,EACtB31B,KAAK41B,UAAY,GAEjBt0B,EAAAA,GAAYtB,KAAK61B,oBAAqBr0B,IACrCA,EAASoO,OAAO,gBAAY/O,EAAU,IAGvCS,EAAAA,GAAYtB,KAAK+B,WAAYP,IAC5BA,EAASoO,OAAO,eAAW/O,EAAU,IAGtCgD,EAAAA,GAAa0xB,GAAQ,CAACO,EAAMC,KAC3B/1B,KAAKg2B,cAAcD,EAAM,IAG1BlyB,EAAAA,GAAa0xB,GAAQ,CAACO,EAAMC,KAC3B/1B,KAAKi2B,cAAcF,EAAM,IAG1Bz0B,EAAAA,GAAYtB,KAAK+B,WAAYP,IAC5B,IAAKA,EAASZ,IAAI,WAAY,CAC7B,MAAM0sB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAO9pB,IAAI,eAAe,E,OAMhC,CAcOwyB,aAAAA,CAAc10B,EAAwC8c,GAC5Dte,KAAKw0B,gBAAgBhzB,EAASZ,IAAI,WAAY,IAAK0d,EACpD,CAEU2X,aAAAA,CAAcl0B,GACvB,MAAMZ,EAAQnB,KAAKmB,MACnB,GAAIA,GAASA,EAAMP,IAAI,YAAa,IAAMO,EAAMP,IAAI,eAAgB,KAAOZ,KAAKY,IAAI,kBAAmB,WAItG,KAAOmB,EAAUJ,OAAS,GAAG,CAC5B3B,KAAK21B,gBACL31B,KAAK41B,UAAU51B,KAAK21B,eAAiB,GACrC,MAAMQ,EAAUn2B,KAAK41B,UAAU51B,KAAK21B,eAC9Bn0B,EAAWO,EAAU,GAE3Bo0B,EAAQj2B,KAAKsB,GACbF,EAAAA,GAAcS,EAAWP,GAEzBxB,KAAKo2B,iBAAiB50B,EAAUO,E,CAIlC,IAAIiB,EAAI,EAER1B,EAAAA,GAAYtB,KAAK41B,WAAYO,IAC5B,IAAIE,EAAO,EACPC,EAAO,EAEPrzB,EAAMkzB,EAAQx0B,OAElB,GAAIsB,EAAM,EAAG,CAEZ,IAAIszB,EAAoBv2B,KAAK61B,mBAAmB7yB,GAChD,IAAKuzB,EAAmB,CACvBA,EAAoB,IAAIC,GAAAA,EAASx2B,UAAMa,EAAW,CAAC,GAEnD,MAAM41B,EAAez2B,KAAKY,IAAI,mBAC9B,GAAI61B,EAAc,CACjB,MAAMlJ,EAASgJ,EAAkB7yB,IAAI,SAAiB+yB,EAAaz2B,KAAKgP,MAAOhP,KAAMu2B,IAErF,GAAIhJ,EAAQ,CACX,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,IACHxtB,KAAKsE,iBAAiBF,SAASlE,KAAKstB,GACpCA,EAAOle,aAAainB,G,EAKvBv2B,KAAK61B,mBAAmB31B,KAAKq2B,E,CAG9Bj1B,EAAAA,GAAY60B,GAAU30B,IACrBA,EAASoO,OAAO,UAAW2mB,GAE3B,MAAM3tB,EAAQpH,EAASZ,IAAI,SACvBgI,IACHytB,GAAQztB,EAAMlD,EACd4wB,GAAQ1tB,EAAM/C,GAGf,MAAMynB,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAO9pB,IAAI,eAAe,E,OAM9B,IAAIgzB,EAAWL,EAAOpzB,EAClB0zB,EAAWL,EAAOrzB,EAEtBszB,EAAkB3mB,OAAO,WAAmBumB,GAE5C,MAAMS,EAAUL,EAAkB31B,IAAI,SACtC21B,EAAkB3mB,OAAO,QAAgB3M,GAEzC,MAAMsqB,EAASgJ,EAAkB31B,IAAI,UACrC,GAAI2sB,EAAQ,CACX,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,IACHA,EAAO9pB,IAAI,eAAe,GAC1B8pB,EAAOvL,OAAO,CAAEvc,EAAGgxB,EAAU7wB,EAAG8wB,IAE5BC,GAAW3zB,GACVuqB,aAAkBqJ,GAAAA,GACrBrJ,EAAOsJ,cAAcC,IAChBA,aAAiBC,GAAAA,GACpBD,EAAME,KAAKC,e,KAOjBl0B,G,KAIF1B,EAAAA,GAAYtB,KAAK61B,oBAAqBr0B,IACrC,IAAI4C,EAAW5C,EAASZ,IAAI,YAC5B,IAAKwD,GAA+B,GAAnBA,EAASzC,OAAa,CACtC,MAAM4rB,EAAS/rB,EAASZ,IAAI,UAC5B,GAAI2sB,EAAQ,CACX,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAO9pB,IAAI,eAAe,E,KAK/B,CAEU0yB,gBAAAA,CAAiB50B,EAAmDO,GAC7E,MAAM6G,EAAQpH,EAASZ,IAAI,SACvBgI,GACHtH,EAAAA,GAAYS,GAAY0yB,IACvB,GAAIA,IAAOA,EAAG7zB,IAAI,WAAY,CAC7B,MAAMu2B,EAAU1C,EAAG7zB,IAAI,SACvB,GAAIu2B,GAECnxB,KAAKkB,MAAMiwB,EAAQzxB,EAAIkD,EAAMlD,EAAGyxB,EAAQtxB,EAAI+C,EAAM/C,GAAK7F,KAAKY,IAAI,cAAe,IAAK,CACvEZ,KAAK41B,UAAU51B,KAAK21B,eAC5Bz1B,KAAKu0B,GACbnzB,EAAAA,GAAcS,EAAW0yB,GACzBz0B,KAAKo2B,iBAAiB3B,EAAI1yB,E,KAMhC,CAEUi0B,aAAAA,CAAcj0B,GACvB,MAAMZ,EAAQnB,KAAKmB,MACnB,GAAIA,GAASA,EAAMP,IAAI,YAAa,IAAMO,EAAMP,IAAI,eAAgB,KAAOZ,KAAKY,IAAI,kBAAmB,KAAO,CAC7G,KAAOmB,EAAUJ,OAAS,GAAG,CAC5B3B,KAAKy1B,gBACLz1B,KAAK01B,UAAU11B,KAAKy1B,eAAiB,GACrC,MAAM2B,EAAUp3B,KAAK01B,UAAU11B,KAAKy1B,eAC9Bj0B,EAAWO,EAAU,GAE3Bq1B,EAAQl3B,KAAKsB,GACbF,EAAAA,GAAcS,EAAWP,GAEzBxB,KAAKq3B,iBAAiB71B,EAAUO,E,CAGjCT,EAAAA,GAAYtB,KAAK01B,WAAY0B,IAG5B,GAFUA,EAAQz1B,OAER,EAAG,CACZ,IAAI21B,EAAmE,GACnEpsB,EAAI,EACJsN,EAASxY,KAAKY,IAAI,gBAAiB,GACvCU,EAAAA,GAAY81B,GAAU51B,IACrB,IAAI+1B,EAAcv3B,KAAKs1B,QAAQpqB,GAC3BssB,GAAa,EAEjB,GAAIF,EAAgB31B,OAAS,EAC5B,KAAO61B,GACNl2B,EAAAA,GAAYg2B,GAAkBG,IAE7B,IADAD,GAAa,EACN7J,GAAAA,GAAqB,CAAEjoB,EAAG6xB,EAAY7xB,EAAGG,EAAG0xB,EAAY1xB,EAAG2S,OAAQA,GAAUif,IACnFvsB,SAEuBrK,GAAnBb,KAAKs1B,QAAQpqB,GAChBssB,GAAa,GAGbA,GAAa,EACbD,EAAcv3B,KAAKs1B,QAAQpqB,G,IAOhC,MAAMwF,EAAK6mB,EAAY7xB,EACjB6K,EAAKgnB,EAAY1xB,EAEvByxB,EAAgBp3B,KAAK,CAAEwF,EAAGgL,EAAI7K,EAAG0K,EAAIiI,OAAQA,IAE7ChX,EAASkC,IAAI,KAAMgN,GACnBlP,EAASkC,IAAI,KAAM6M,GAEnB,MAAM+c,EAAU9rB,EAAS8rB,QACrBA,GACHhsB,EAAAA,GAAYgsB,GAAUC,IACrB,MAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOvL,OAAO,CAAEvR,GAAIA,EAAIH,GAAIA,G,WAQpC,CAEU8mB,gBAAAA,CAAiB71B,EAAmDO,GAC7E,MAAM6G,EAAQpH,EAASZ,IAAI,SACvBgI,GACHtH,EAAAA,GAAYS,GAAY0yB,IACvB,GAAIA,IAAOA,EAAG7zB,IAAI,WAAY,CAC7B,MAAMu2B,EAAU1C,EAAG7zB,IAAI,SAEvB,GAAIu2B,GACCnxB,KAAKkB,MAAMiwB,EAAQzxB,EAAIkD,EAAMlD,EAAGyxB,EAAQtxB,EAAI+C,EAAM/C,GAAK7F,KAAKY,IAAI,kBAAmB,GAAI,CAC1EZ,KAAK01B,UAAU11B,KAAKy1B,eAC5Bv1B,KAAKu0B,GACbnzB,EAAAA,GAAcS,EAAW0yB,GACzBz0B,KAAKq3B,iBAAiB5C,EAAI1yB,E,KAMhC,EA3TAlC,OAAAC,eAAAs1B,GAAA,a,gDAAkC,yBAClCv1B,OAAAC,eAAAs1B,GAAA,c,gDAA0CpC,GAAe9tB,WAAWC,OAAO,CAACiwB,GAAqBhwB,c,0BCjG5F,MAAOsyB,WAAoBb,GAAAA,EAAjCj3B,WAAAA,G,oBAOCC,OAAAC,eAAA,mB,gDAAqCE,KAAKoE,SAASlE,KAAKy3B,GAAAA,EAAO7oB,IAAI9O,KAAKgP,MAAO,CAAEkS,MAAO,GAAIE,OAAQ,GAAIoN,UAAW,CAAC,aAOpH3uB,OAAAC,eAAA,oB,gDAAsCE,KAAKoE,SAASlE,KAAKy3B,GAAAA,EAAO7oB,IAAI9O,KAAKgP,MAAO,CAAEkS,MAAO,GAAIE,OAAQ,GAAIoN,UAAW,CAAC,cAQrH3uB,OAAAC,eAAA,kB,wDA0CD,CAxCWC,SAAAA,GACTW,MAAMX,YAENC,KAAK0D,IAAI,WAAY,YAErB1D,KAAK0D,IAAI,SAAU1D,KAAKgP,MAAM4oB,gBAC9B53B,KAAK0D,IAAI,YAAa,CAAC,gBAEvB1D,KAAK63B,WAAW5V,OAAO,CACtB6V,KAAMptB,EAAAA,EAASoE,IAAI9O,KAAKgP,MAAO,CAAEwf,UAAW,CAAC,UAC7CuJ,YAAQl3B,IAGTb,KAAKg4B,YAAY/V,OAAO,CACvB6V,KAAMptB,EAAAA,EAASoE,IAAI9O,KAAKgP,MAAO,CAAEwf,UAAW,CAAC,UAC7CuJ,YAAQl3B,GAEV,CAEOG,gBAAAA,GAGN,GAFAN,MAAMM,mBAEFhB,KAAKi4B,eAAe,SAAU,CACjC,MAAM92B,EAAQnB,KAAK0E,WAAW,SACxBpE,EAAWN,KAAKk4B,qBAAqB/2B,MACvCA,IACHnB,KAAKm4B,UAAY,IAAIC,GAAAA,GAAc,CAClCp4B,KAAK63B,WAAW/zB,OAAO1D,GAAG,SAAS,KAClCe,EAAM0xB,QAAQ,IAEf7yB,KAAKg4B,YAAYl0B,OAAO1D,GAAG,SAAS,KACnCe,EAAM2xB,SAAS,OAIdxyB,GAAYN,KAAKm4B,WACpBn4B,KAAKm4B,UAAUroB,S,CAGlB,EA5CAjQ,OAAAC,eAAA43B,GAAA,a,gDAAkC,gBAClC73B,OAAAC,eAAA43B,GAAA,c,gDAA0Cb,GAAAA,EAAU3xB,WAAWC,OAAO,CAACuyB,GAAYtyB,a,iBC5CpF,IAAIizB,EAAQC,EAAQ,MAOpB,SAASC,EAAUtiB,EAASnL,EAAW0tB,GAInC,IAAIC,EAAMC,EAAMC,EAAMC,EAHtB9tB,EAAYA,GAAa,EAIzB,IAAK,IAAI9H,EAAI,EAAGA,EAAIiT,EAAQ,GAAGtU,OAAQqB,IAAK,CACxC,IAAI2C,EAAIsQ,EAAQ,GAAGjT,KACdA,GAAK2C,EAAE,GAAK8yB,KAAMA,EAAO9yB,EAAE,MAC3B3C,GAAK2C,EAAE,GAAK+yB,KAAMA,EAAO/yB,EAAE,MAC3B3C,GAAK2C,EAAE,GAAKgzB,KAAMA,EAAOhzB,EAAE,MAC3B3C,GAAK2C,EAAE,GAAKizB,KAAMA,EAAOjzB,EAAE,GACpC,CAEA,IAAIub,EAAQyX,EAAOF,EACfrX,EAASwX,EAAOF,EAChBG,EAAW7yB,KAAKwU,IAAI0G,EAAOE,GAC3BxF,EAAIid,EAAW,EAEnB,GAAiB,IAAbA,EAAgB,CAChB,IAAIC,EAAkC,CAACL,EAAMC,GAE7C,OADAI,EAAgCrqB,SAAW,EACpCqqB,CACX,CAMA,IAHA,IAAIC,EAAY,IAAIV,OAAMx3B,EAAWm4B,GAG5BtzB,EAAI+yB,EAAM/yB,EAAIizB,EAAMjzB,GAAKmzB,EAC9B,IAAK,IAAIhzB,EAAI6yB,EAAM7yB,EAAI+yB,EAAM/yB,GAAKgzB,EAC9BE,EAAU74B,KAAK,IAAI+4B,EAAKvzB,EAAIkW,EAAG/V,EAAI+V,EAAGA,EAAG3F,IAKjD,IAAIijB,EA2ER,SAAyBjjB,GAMrB,IALA,IAAIkP,EAAO,EACPzf,EAAI,EACJG,EAAI,EACJmO,EAASiC,EAAQ,GAEZjT,EAAI,EAAGC,EAAM+Q,EAAOrS,OAAQiE,EAAI3C,EAAM,EAAGD,EAAIC,EAAK2C,EAAI5C,IAAK,CAChE,IAAIuH,EAAIyJ,EAAOhR,GACXwH,EAAIwJ,EAAOpO,GACXuzB,EAAI5uB,EAAE,GAAKC,EAAE,GAAKA,EAAE,GAAKD,EAAE,GAC/B7E,IAAM6E,EAAE,GAAKC,EAAE,IAAM2uB,EACrBtzB,IAAM0E,EAAE,GAAKC,EAAE,IAAM2uB,EACrBhU,GAAY,EAAJgU,CACZ,CACA,OAAa,IAAThU,EAAmB,IAAI8T,EAAKjlB,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAI,EAAGiC,GACxD,IAAIgjB,EAAKvzB,EAAIyf,EAAMtf,EAAIsf,EAAM,EAAGlP,EAC3C,CA3FmBmjB,CAAgBnjB,GAG3BojB,EAAW,IAAIJ,EAAKR,EAAOvX,EAAQ,EAAGwX,EAAOtX,EAAS,EAAG,EAAGnL,GAC5DojB,EAASlrB,EAAI+qB,EAAS/qB,IAAG+qB,EAAWG,GAIxC,IAFA,IAAIC,EAAYP,EAAUp3B,OAEnBo3B,EAAUp3B,QAAQ,CAErB,IAAI43B,EAAOR,EAAUnlB,MAGjB2lB,EAAKprB,EAAI+qB,EAAS/qB,IAClB+qB,EAAWK,EACPf,GAAO51B,QAAQC,IAAI,gCAAiCmD,KAAK4M,MAAM,IAAM2mB,EAAKprB,GAAK,IAAKmrB,IAIxFC,EAAKnpB,IAAM8oB,EAAS/qB,GAAKrD,IAG7B8Q,EAAI2d,EAAK3d,EAAI,EACbmd,EAAU74B,KAAK,IAAI+4B,EAAKM,EAAK7zB,EAAIkW,EAAG2d,EAAK1zB,EAAI+V,EAAGA,EAAG3F,IACnD8iB,EAAU74B,KAAK,IAAI+4B,EAAKM,EAAK7zB,EAAIkW,EAAG2d,EAAK1zB,EAAI+V,EAAGA,EAAG3F,IACnD8iB,EAAU74B,KAAK,IAAI+4B,EAAKM,EAAK7zB,EAAIkW,EAAG2d,EAAK1zB,EAAI+V,EAAGA,EAAG3F,IACnD8iB,EAAU74B,KAAK,IAAI+4B,EAAKM,EAAK7zB,EAAIkW,EAAG2d,EAAK1zB,EAAI+V,EAAGA,EAAG3F,IACnDqjB,GAAa,EACjB,CAEId,IACA51B,QAAQC,IAAI,eAAiBy2B,GAC7B12B,QAAQC,IAAI,kBAAoBq2B,EAAS/qB,IAG7C,IAAIqrB,EAAwB,CAACN,EAASxzB,EAAGwzB,EAASrzB,GAElD,OADA2zB,EAAsB/qB,SAAWyqB,EAAS/qB,EACnCqrB,CACX,CAEA,SAASR,EAAWzuB,EAAGC,GACnB,OAAOA,EAAE4F,IAAM7F,EAAE6F,GACrB,CAEA,SAAS6oB,EAAKvzB,EAAGG,EAAG+V,EAAG3F,GACnBjW,KAAK0F,EAAIA,EACT1F,KAAK6F,EAAIA,EACT7F,KAAK4b,EAAIA,EACT5b,KAAKmO,EAKT,SAA4BzI,EAAGG,EAAGoQ,GAI9B,IAHA,IAAIwjB,GAAS,EACTC,EAAYze,IAEP7M,EAAI,EAAGA,EAAI6H,EAAQtU,OAAQyM,IAGhC,IAFA,IAAI8H,EAAOD,EAAQ7H,GAEVpL,EAAI,EAAGC,EAAMiT,EAAKvU,OAAQiE,EAAI3C,EAAM,EAAGD,EAAIC,EAAK2C,EAAI5C,IAAK,CAC9D,IAAIuH,EAAI2L,EAAKlT,GACTwH,EAAI0L,EAAKtQ,GAER2E,EAAE,GAAK1E,IAAM2E,EAAE,GAAK3E,GACpBH,GAAK8E,EAAE,GAAKD,EAAE,KAAO1E,EAAI0E,EAAE,KAAOC,EAAE,GAAKD,EAAE,IAAMA,EAAE,KAAKkvB,GAAUA,GAEvEC,EAAY1zB,KAAKwU,IAAIkf,EAAWC,EAAaj0B,EAAGG,EAAG0E,EAAGC,GAC1D,CAGJ,OAAqB,IAAdkvB,EAAkB,GAAKD,EAAS,GAAK,GAAKzzB,KAAKuB,KAAKmyB,EAC/D,CAxBaE,CAAmBl0B,EAAGG,EAAGoQ,GAClCjW,KAAKoQ,IAAMpQ,KAAKmO,EAAInO,KAAK4b,EAAI5V,KAAK6zB,KACtC,CA4CA,SAASF,EAAaG,EAAIC,EAAIxvB,EAAGC,GAE7B,IAAI9E,EAAI6E,EAAE,GACN1E,EAAI0E,EAAE,GACNmG,EAAKlG,EAAE,GAAK9E,EACZ6K,EAAK/F,EAAE,GAAK3E,EAEhB,GAAW,IAAP6K,GAAmB,IAAPH,EAAU,CAEtB,IAAIjC,IAAMwrB,EAAKp0B,GAAKgL,GAAMqpB,EAAKl0B,GAAK0K,IAAOG,EAAKA,EAAKH,EAAKA,GAEtDjC,EAAI,GACJ5I,EAAI8E,EAAE,GACN3E,EAAI2E,EAAE,IAEC8D,EAAI,IACX5I,GAAKgL,EAAKpC,EACVzI,GAAK0K,EAAKjC,EAElB,CAKA,OAHAoC,EAAKopB,EAAKp0B,GAGEgL,GAFZH,EAAKwpB,EAAKl0B,GAEY0K,CAC1B,CA/JI8nB,EAAM2B,UAAS3B,EAAQA,EAAM2B,SAEjCC,EAAOC,QAAU3B,EACjB0B,EAAOC,QAAPD,QAAyB1B,C,+CCNV,MAAM4B,EACjBv6B,WAAAA,GAAiD,IAArCY,EAAI2P,UAAAxO,OAAA,QAAAd,IAAAsP,UAAA,GAAAA,UAAA,GAAG,GAAIiqB,EAAOjqB,UAAAxO,OAAA,QAAAd,IAAAsP,UAAA,GAAAA,UAAA,GAAGkqB,EAK7B,GAJAr6B,KAAKQ,KAAOA,EACZR,KAAK2B,OAAS3B,KAAKQ,KAAKmB,OACxB3B,KAAKo6B,QAAUA,EAEXp6B,KAAK2B,OAAS,EACd,IAAK,IAAIqB,GAAKhD,KAAK2B,QAAU,GAAK,EAAGqB,GAAK,EAAGA,IAAKhD,KAAKs6B,MAAMt3B,EAErE,CAEA9C,IAAAA,CAAKq6B,GACDv6B,KAAKQ,KAAKN,KAAKq6B,GACfv6B,KAAK2B,SACL3B,KAAKw6B,IAAIx6B,KAAK2B,OAAS,EAC3B,CAEAiS,GAAAA,GACI,GAAoB,IAAhB5T,KAAK2B,OAAc,OAEvB,MAAM8Q,EAAMzS,KAAKQ,KAAK,GAChB+R,EAASvS,KAAKQ,KAAKoT,MAQzB,OAPA5T,KAAK2B,SAED3B,KAAK2B,OAAS,IACd3B,KAAKQ,KAAK,GAAK+R,EACfvS,KAAKs6B,MAAM,IAGR7nB,CACX,CAEAgoB,IAAAA,GACI,OAAOz6B,KAAKQ,KAAK,EACrB,CAEAg6B,GAAAA,CAAIE,GACA,MAAM,KAACl6B,EAAI,QAAE45B,GAAWp6B,KAClBu6B,EAAO/5B,EAAKk6B,GAElB,KAAOA,EAAM,GAAG,CACZ,MAAMpH,EAAUoH,EAAM,GAAM,EACtB5lB,EAAUtU,EAAK8yB,GACrB,GAAI8G,EAAQG,EAAMzlB,IAAY,EAAG,MACjCtU,EAAKk6B,GAAO5lB,EACZ4lB,EAAMpH,CACV,CAEA9yB,EAAKk6B,GAAOH,CAChB,CAEAD,KAAAA,CAAMI,GACF,MAAM,KAACl6B,EAAI,QAAE45B,GAAWp6B,KAClB26B,EAAa36B,KAAK2B,QAAU,EAC5B44B,EAAO/5B,EAAKk6B,GAElB,KAAOA,EAAMC,GAAY,CACrB,IAAIroB,EAAoB,GAAZooB,GAAO,GACfE,EAAOp6B,EAAK8R,GAChB,MAAME,EAAQF,EAAO,EAMrB,GAJIE,EAAQxS,KAAK2B,QAAUy4B,EAAQ55B,EAAKgS,GAAQooB,GAAQ,IACpDtoB,EAAOE,EACPooB,EAAOp6B,EAAKgS,IAEZ4nB,EAAQQ,EAAML,IAAS,EAAG,MAE9B/5B,EAAKk6B,GAAOE,EACZF,EAAMpoB,CACV,CAEA9R,EAAKk6B,GAAOH,CAChB,EAGJ,SAASF,EAAe9vB,EAAGC,GACvB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,CACpC,C,iBC9EO,SAASqwB,EAAS1B,GACvB,OAAY,MAALA,EAAY,KAAO2B,EAAS3B,EACrC,CAEO,SAAS2B,EAAS3B,GACvB,GAAiB,oBAANA,EAAkB,MAAM,IAAI4B,MACvC,OAAO5B,CACT,C,yCCPO,SAAS6B,IACd,OAAO,CACT,CAEe,WAASt1B,GACtB,OAAO,WACL,OAAOA,CACT,CACF,C,kFCPA,MAAM6E,EAAI,QACJ+R,EAAI,WACJ5I,EAAI,WCIH,SAASunB,EAAkBC,EAASC,GAGzC,IAFA,IAAgFx1B,EAAGyO,EAA/EpR,EAAI,EAAGmD,GAAK+0B,ECFX,SAAiBlmB,EAAOmmB,GAC7B,IACI7sB,EACAtL,EAFA0Q,EAAIsB,EAAMrT,OAId,KAAO+R,GACL1Q,EAAIm4B,IAAWznB,IAAM,EACrBpF,EAAI0G,EAAMtB,GACVsB,EAAMtB,GAAKsB,EAAMhS,GACjBgS,EAAMhS,GAAKsL,EAGb,OAAO0G,CACT,CDX4BomB,CAAQ/qB,MAAMuF,KAAKslB,GAAUC,IAASx5B,OAAQ4M,EAAI,GAErEvL,EAAImD,GACTR,EAAIu1B,EAAQl4B,GACRoR,GAAKinB,EAAajnB,EAAGzO,KAAM3C,GAC1BoR,EAAIknB,EAAa/sB,EAAIgtB,EAAYhtB,EAAG5I,IAAK3C,EAAI,GAGpD,OAAOoR,CACT,CAEA,SAASmnB,EAAYhtB,EAAG5I,GACtB,IAAI3C,EAAG4C,EAEP,GAAI41B,EAAgB71B,EAAG4I,GAAI,MAAO,CAAC5I,GAGnC,IAAK3C,EAAI,EAAGA,EAAIuL,EAAE5M,SAAUqB,EAC1B,GAAIy4B,EAAY91B,EAAG4I,EAAEvL,KACdw4B,EAAgBE,EAAcntB,EAAEvL,GAAI2C,GAAI4I,GAC7C,MAAO,CAACA,EAAEvL,GAAI2C,GAKlB,IAAK3C,EAAI,EAAGA,EAAIuL,EAAE5M,OAAS,IAAKqB,EAC9B,IAAK4C,EAAI5C,EAAI,EAAG4C,EAAI2I,EAAE5M,SAAUiE,EAC9B,GAAI61B,EAAYC,EAAcntB,EAAEvL,GAAIuL,EAAE3I,IAAKD,IACpC81B,EAAYC,EAAcntB,EAAEvL,GAAI2C,GAAI4I,EAAE3I,KACtC61B,EAAYC,EAAcntB,EAAE3I,GAAID,GAAI4I,EAAEvL,KACtCw4B,EAAgBG,EAAcptB,EAAEvL,GAAIuL,EAAE3I,GAAID,GAAI4I,GACnD,MAAO,CAACA,EAAEvL,GAAIuL,EAAE3I,GAAID,GAM1B,MAAM,IAAIo1B,KACZ,CAEA,SAASU,EAAYlxB,EAAGC,GACtB,IAAIoxB,EAAKrxB,EAAEkQ,EAAIjQ,EAAEiQ,EAAG/J,EAAKlG,EAAE9E,EAAI6E,EAAE7E,EAAG6K,EAAK/F,EAAE3E,EAAI0E,EAAE1E,EACjD,OAAO+1B,EAAK,GAAKA,EAAKA,EAAKlrB,EAAKA,EAAKH,EAAKA,CAC5C,CAEA,SAAS8qB,EAAa9wB,EAAGC,GACvB,IAAIoxB,EAAKrxB,EAAEkQ,EAAIjQ,EAAEiQ,EAA4B,KAAxBzU,KAAKoK,IAAI7F,EAAEkQ,EAAGjQ,EAAEiQ,EAAG,GAAW/J,EAAKlG,EAAE9E,EAAI6E,EAAE7E,EAAG6K,EAAK/F,EAAE3E,EAAI0E,EAAE1E,EAChF,OAAO+1B,EAAK,GAAKA,EAAKA,EAAKlrB,EAAKA,EAAKH,EAAKA,CAC5C,CAEA,SAASirB,EAAgBjxB,EAAGgE,GAC1B,IAAK,IAAIvL,EAAI,EAAGA,EAAIuL,EAAE5M,SAAUqB,EAC9B,IAAKq4B,EAAa9wB,EAAGgE,EAAEvL,IACrB,OAAO,EAGX,OAAO,CACT,CAEA,SAASs4B,EAAa/sB,GACpB,OAAQA,EAAE5M,QACR,KAAK,EAAG,OAMZ,SAAuB4I,GACrB,MAAO,CACL7E,EAAG6E,EAAE7E,EACLG,EAAG0E,EAAE1E,EACL4U,EAAGlQ,EAAEkQ,EAET,CAZmBohB,CAActtB,EAAE,IAC/B,KAAK,EAAG,OAAOmtB,EAAcntB,EAAE,GAAIA,EAAE,IACrC,KAAK,EAAG,OAAOotB,EAAcptB,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAE/C,CAUA,SAASmtB,EAAcnxB,EAAGC,GACxB,IAAIiD,EAAKlD,EAAE7E,EAAGgI,EAAKnD,EAAE1E,EAAGi2B,EAAKvxB,EAAEkQ,EAC3BgC,EAAKjS,EAAE9E,EAAGgX,EAAKlS,EAAE3E,EAAGk2B,EAAKvxB,EAAEiQ,EAC3BuhB,EAAMvf,EAAKhP,EAAIwuB,EAAMvf,EAAKhP,EAAIwuB,EAAMH,EAAKD,EACzCrmB,EAAIzP,KAAKuB,KAAKy0B,EAAMA,EAAMC,EAAMA,GACpC,MAAO,CACLv2B,GAAI+H,EAAKgP,EAAKuf,EAAMvmB,EAAIymB,GAAO,EAC/Br2B,GAAI6H,EAAKgP,EAAKuf,EAAMxmB,EAAIymB,GAAO,EAC/BzhB,GAAIhF,EAAIqmB,EAAKC,GAAM,EAEvB,CAEA,SAASJ,EAAcpxB,EAAGC,EAAG8R,GAC3B,IAAI7O,EAAKlD,EAAE7E,EAAGgI,EAAKnD,EAAE1E,EAAGi2B,EAAKvxB,EAAEkQ,EAC3BgC,EAAKjS,EAAE9E,EAAGgX,EAAKlS,EAAE3E,EAAGk2B,EAAKvxB,EAAEiQ,EAC3B0hB,EAAK7f,EAAE5W,EAAG02B,EAAK9f,EAAEzW,EAAGw2B,EAAK/f,EAAE7B,EAC3B6hB,EAAK7uB,EAAKgP,EACV8f,EAAK9uB,EAAK0uB,EACVK,EAAK9uB,EAAKgP,EACV+f,EAAK/uB,EAAK0uB,EACVpc,EAAK+b,EAAKD,EACVY,EAAKL,EAAKP,EACVa,EAAKlvB,EAAKA,EAAKC,EAAKA,EAAKouB,EAAKA,EAC9Bzf,EAAKsgB,EAAKlgB,EAAKA,EAAKC,EAAKA,EAAKqf,EAAKA,EACnCa,EAAKD,EAAKR,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EACnCQ,EAAKN,EAAKC,EAAKF,EAAKG,EACpBK,GAAMN,EAAKI,EAAKH,EAAKpgB,IAAY,EAALwgB,GAAUpvB,EACtCsvB,GAAMN,EAAKzc,EAAKwc,EAAKE,GAAMG,EAC3BG,GAAMT,EAAKlgB,EAAKigB,EAAKM,IAAY,EAALC,GAAUnvB,EACtCuvB,GAAMX,EAAKI,EAAKH,EAAKvc,GAAM6c,EAC3BruB,EAAIuuB,EAAKA,EAAKE,EAAKA,EAAK,EACxB1uB,EAAI,GAAKutB,EAAKgB,EAAKC,EAAKC,EAAKC,GAC7BC,EAAIJ,EAAKA,EAAKE,EAAKA,EAAKlB,EAAKA,EAC7BrhB,IAAMzU,KAAKC,IAAIuI,GAAK,MAAQD,EAAIvI,KAAKuB,KAAKgH,EAAIA,EAAI,EAAIC,EAAI0uB,KAAO,EAAI1uB,GAAK0uB,EAAI3uB,GAClF,MAAO,CACL7I,EAAG+H,EAAKqvB,EAAKC,EAAKtiB,EAClB5U,EAAG6H,EAAKsvB,EAAKC,EAAKxiB,EAClBA,EAAGA,EAEP,CEtHA,SAAS0iB,EAAM3yB,EAAGD,EAAG+R,GACnB,IAAoB5W,EAAG42B,EACHz2B,EAAG22B,EADnB9rB,EAAKlG,EAAE9E,EAAI6E,EAAE7E,EACb6K,EAAK/F,EAAE3E,EAAI0E,EAAE1E,EACbwW,EAAK3L,EAAKA,EAAKH,EAAKA,EACpB8L,GACFigB,EAAK/xB,EAAEkQ,EAAI6B,EAAE7B,EAAG6hB,GAAMA,EACtBE,EAAKhyB,EAAEiQ,EAAI6B,EAAE7B,EACT6hB,GADYE,GAAMA,IAEpB92B,GAAK2W,EAAKmgB,EAAKF,IAAO,EAAIjgB,GAC1BxW,EAAIG,KAAKuB,KAAKvB,KAAKoK,IAAI,EAAGosB,EAAKngB,EAAK3W,EAAIA,IACxC4W,EAAE5W,EAAI8E,EAAE9E,EAAIA,EAAIgL,EAAK7K,EAAI0K,EACzB+L,EAAEzW,EAAI2E,EAAE3E,EAAIH,EAAI6K,EAAK1K,EAAI6K,IAEzBhL,GAAK2W,EAAKigB,EAAKE,IAAO,EAAIngB,GAC1BxW,EAAIG,KAAKuB,KAAKvB,KAAKoK,IAAI,EAAGksB,EAAKjgB,EAAK3W,EAAIA,IACxC4W,EAAE5W,EAAI6E,EAAE7E,EAAIA,EAAIgL,EAAK7K,EAAI0K,EACzB+L,EAAEzW,EAAI0E,EAAE1E,EAAIH,EAAI6K,EAAK1K,EAAI6K,KAG3B4L,EAAE5W,EAAI6E,EAAE7E,EAAI4W,EAAE7B,EACd6B,EAAEzW,EAAI0E,EAAE1E,EAEZ,CAEA,SAAS2xB,EAAWjtB,EAAGC,GACrB,IAAIoxB,EAAKrxB,EAAEkQ,EAAIjQ,EAAEiQ,EAAI,KAAM/J,EAAKlG,EAAE9E,EAAI6E,EAAE7E,EAAG6K,EAAK/F,EAAE3E,EAAI0E,EAAE1E,EACxD,OAAO+1B,EAAK,GAAKA,EAAKA,EAAKlrB,EAAKA,EAAKH,EAAKA,CAC5C,CAEA,SAAS6sB,EAAMC,GACb,IAAI9yB,EAAI8yB,EAAK3rB,EACTlH,EAAI6yB,EAAKC,KAAK5rB,EACdmrB,EAAKtyB,EAAEkQ,EAAIjQ,EAAEiQ,EACb/J,GAAMnG,EAAE7E,EAAI8E,EAAEiQ,EAAIjQ,EAAE9E,EAAI6E,EAAEkQ,GAAKoiB,EAC/BtsB,GAAMhG,EAAE1E,EAAI2E,EAAEiQ,EAAIjQ,EAAE3E,EAAI0E,EAAEkQ,GAAKoiB,EACnC,OAAOnsB,EAAKA,EAAKH,EAAKA,CACxB,CAEA,SAASgtB,EAAKC,GACZx9B,KAAK0R,EAAI8rB,EACTx9B,KAAKs9B,KAAO,KACZt9B,KAAKM,SAAW,IAClB,CAEO,SAASm9B,EAAmBvC,EAASC,GAC1C,KAAMh1B,GDjDgBT,ECiDKw1B,EAAhBA,EDhDS,kBAANx1B,GAAkB,WAAYA,EACxCA,EACA2K,MAAMuF,KAAKlQ,IC8CsB/D,QAAS,OAAO,EDjDxC,IAAS+D,ECmDlB6E,EAAGC,EAAG8R,EAAGnW,EAAGu3B,EAAIpkB,EAAItW,EAAG4C,EAAGwI,EAAGuvB,EAAIC,EAIrC,IADArzB,EAAI2wB,EAAQ,IAAMx1B,EAAI,EAAG6E,EAAE1E,EAAI,IACzBM,EAAI,GAAI,OAAOoE,EAAEkQ,EAIvB,GADAjQ,EAAI0wB,EAAQ,GAAI3wB,EAAE7E,GAAK8E,EAAEiQ,EAAGjQ,EAAE9E,EAAI6E,EAAEkQ,EAAGjQ,EAAE3E,EAAI,IACvCM,EAAI,GAAI,OAAOoE,EAAEkQ,EAAIjQ,EAAEiQ,EAG7B0iB,EAAM3yB,EAAGD,EAAG+R,EAAI4e,EAAQ,IAGxB3wB,EAAI,IAAIgzB,EAAKhzB,GAAIC,EAAI,IAAI+yB,EAAK/yB,GAAI8R,EAAI,IAAIihB,EAAKjhB,GAC/C/R,EAAE+yB,KAAOhhB,EAAEhc,SAAWkK,EACtBA,EAAE8yB,KAAO/yB,EAAEjK,SAAWgc,EACtBA,EAAEghB,KAAO9yB,EAAElK,SAAWiK,EAGtBszB,EAAM,IAAK76B,EAAI,EAAGA,EAAImD,IAAKnD,EAAG,CAC5Bm6B,EAAM5yB,EAAEmH,EAAGlH,EAAEkH,EAAG4K,EAAI4e,EAAQl4B,IAAKsZ,EAAI,IAAIihB,EAAKjhB,GAK9C1W,EAAI4E,EAAE8yB,KAAMlvB,EAAI7D,EAAEjK,SAAUq9B,EAAKnzB,EAAEkH,EAAE+I,EAAGmjB,EAAKrzB,EAAEmH,EAAE+I,EACjD,GACE,GAAIkjB,GAAMC,EAAI,CACZ,GAAIpG,EAAW5xB,EAAE8L,EAAG4K,EAAE5K,GAAI,CACxBlH,EAAI5E,EAAG2E,EAAE+yB,KAAO9yB,EAAGA,EAAElK,SAAWiK,IAAKvH,EACrC,SAAS66B,CACX,CACAF,GAAM/3B,EAAE8L,EAAE+I,EAAG7U,EAAIA,EAAE03B,IACrB,KAAO,CACL,GAAI9F,EAAWppB,EAAEsD,EAAG4K,EAAE5K,GAAI,EACxBnH,EAAI6D,GAAKkvB,KAAO9yB,EAAGA,EAAElK,SAAWiK,IAAKvH,EACrC,SAAS66B,CACX,CACAD,GAAMxvB,EAAEsD,EAAE+I,EAAGrM,EAAIA,EAAE9N,QACrB,QACOsF,IAAMwI,EAAEkvB,MAOjB,IAJAhhB,EAAEhc,SAAWiK,EAAG+R,EAAEghB,KAAO9yB,EAAGD,EAAE+yB,KAAO9yB,EAAElK,SAAWkK,EAAI8R,EAGtDohB,EAAKN,EAAM7yB,IACH+R,EAAIA,EAAEghB,QAAU9yB,IACjB8O,EAAK8jB,EAAM9gB,IAAMohB,IACpBnzB,EAAI+R,EAAGohB,EAAKpkB,GAGhB9O,EAAID,EAAE+yB,IACR,CAGkB,IAAlB/yB,EAAI,CAACC,EAAEkH,GAAI4K,EAAI9R,GAAW8R,EAAIA,EAAEghB,QAAU9yB,GAAGD,EAAErK,KAAKoc,EAAE5K,GAGtD,IAH0D4K,EAAI2e,EAAkB1wB,EAAG4wB,GAG9En4B,EAAI,EAAGA,EAAImD,IAAKnD,GAAGuH,EAAI2wB,EAAQl4B,IAAM0C,GAAK4W,EAAE5W,EAAG6E,EAAE1E,GAAKyW,EAAEzW,EAE7D,OAAOyW,EAAE7B,CACX,CC7GA,SAASqjB,EAAc3vB,GACrB,OAAOnI,KAAKuB,KAAK4G,EAAE5K,MACrB,CAEe,aACb,IAAIiV,EAAS,KACT9H,EAAK,EACLH,EAAK,EACLwtB,EAAU/C,EAAAA,EAEd,SAAS6C,EAAKG,GACZ,MAAM7C,EJXK,WACb,IAAIjwB,EAAI,EACR,MAAO,KAAOA,GAAKX,EAAIW,EAAIoR,GAAK5I,GAAKA,CACvC,CIQmBuqB,GAYf,OAXAD,EAAKt4B,EAAIgL,EAAK,EAAGstB,EAAKn4B,EAAI0K,EAAK,EAC3BiI,EACFwlB,EAAKE,WAAWC,EAAW3lB,IACtB4lB,UAAUC,EAAmBN,EAAS,GAAK5C,IAC3C+C,WAAWI,EAAe,IAE/BN,EAAKE,WAAWC,EAAWL,IACtBM,UAAUC,EAAmBrD,EAAAA,EAAc,EAAGG,IAC9CiD,UAAUC,EAAmBN,EAASC,EAAKvjB,EAAIzU,KAAKwU,IAAI9J,EAAIH,GAAK4qB,IACjE+C,WAAWI,EAAet4B,KAAKwU,IAAI9J,EAAIH,IAAO,EAAIytB,EAAKvjB,KAEvDujB,CACT,CAcA,OAZAH,EAAKrlB,OAAS,SAAS9S,GACrB,OAAOyK,UAAUxO,QAAU6W,GAASqiB,EAAAA,EAAAA,GAASn1B,GAAIm4B,GAAQrlB,CAC3D,EAEAqlB,EAAK7c,KAAO,SAAStb,GACnB,OAAOyK,UAAUxO,QAAU+O,GAAMhL,EAAE,GAAI6K,GAAM7K,EAAE,GAAIm4B,GAAQ,CAACntB,EAAIH,EAClE,EAEAstB,EAAKE,QAAU,SAASr4B,GACtB,OAAOyK,UAAUxO,QAAUo8B,EAAuB,oBAANr4B,EAAmBA,GAAI64B,EAAAA,EAAAA,IAAU74B,GAAIm4B,GAAQE,CAC3F,EAEOF,CACT,CAEA,SAASM,EAAW3lB,GAClB,OAAO,SAAS6kB,GACTA,EAAKj5B,WACRi5B,EAAK5iB,EAAIzU,KAAKoK,IAAI,GAAIoI,EAAO6kB,IAAS,GAE1C,CACF,CAEA,SAASgB,EAAmBN,EAAS3vB,EAAG+sB,GACtC,OAAO,SAASkC,GACd,GAAIj5B,EAAWi5B,EAAKj5B,SAAU,CAC5B,IAAIA,EACApB,EAGAoR,EAFAjO,EAAI/B,EAASzC,OACb8Y,EAAIsjB,EAAQV,GAAQjvB,GAAK,EAG7B,GAAIqM,EAAG,IAAKzX,EAAI,EAAGA,EAAImD,IAAKnD,EAAGoB,EAASpB,GAAGyX,GAAKA,EAEhD,GADArG,EAAIqpB,EAAmBr5B,EAAU+2B,GAC7B1gB,EAAG,IAAKzX,EAAI,EAAGA,EAAImD,IAAKnD,EAAGoB,EAASpB,GAAGyX,GAAKA,EAChD4iB,EAAK5iB,EAAIrG,EAAIqG,CACf,CACF,CACF,CAEA,SAAS6jB,EAAelwB,GACtB,OAAO,SAASivB,GACd,IAAI/J,EAAS+J,EAAK/J,OAClB+J,EAAK5iB,GAAKrM,EACNklB,IACF+J,EAAK33B,EAAI4tB,EAAO5tB,EAAI0I,EAAIivB,EAAK33B,EAC7B23B,EAAKx3B,EAAIytB,EAAOztB,EAAIuI,EAAIivB,EAAKx3B,EAEjC,CACF,C","sources":["../node_modules/src/.internal/charts/map/MapSeries.ts","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/d3-geo/src/interpolate.js","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../node_modules/src/.internal/charts/map/GraticuleSeries.ts","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/src/.internal/charts/map/MapChartDefaultTheme.ts","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../node_modules/src/.internal/charts/map/MapUtils.ts","../node_modules/src/.internal/charts/map/MapChart.ts","../node_modules/d3-geo/src/path/index.js","../node_modules/src/.internal/charts/map/MapPointSeries.ts","../node_modules/src/.internal/charts/map/MapPolygon.ts","../node_modules/src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/src/.internal/charts/map/ClusteredPointSeries.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/lcg.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/pack/siblings.js","../node_modules/d3-hierarchy/src/pack/index.js"],"sourcesContent":["import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * All map series will determine the actual bounds shown in the [[MapChart]].\n\t *\n\t * If we need a series to be ignored while calculating the bounds, we can set\n\t * this to `false`.\n\t *\n\t * Especially useful for background series.\n\t *\n\t * @default true\n\t * @since 5.2.36\n\t */\n\taffectsBounds?: boolean;\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n\n\t/**\n\t * Names of geodata items, such as countries, to replace by from loaded\n\t * geodata.\n\t *\n\t * Can be used to override built-in English names for countries.\n\t *\n\t * ```TypeScript\n\t * import am5geodata_lang_ES from '@amcharts5-geodata/lang/es';\n\t * // ...\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t * ```JavaScript\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t *\n\t * @since 5.1.13\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-translations/} for more info\n\t */\n\tgeodataNames?: { [index: string]: string };\n\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _excluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\tprotected _notIncluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tthis.on(\"geoJSON\", (geoJSON) => {\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\t\t})\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _handleDirties() {\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\tif (previous && previous != geoJSON) {\n\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\tthis._geoJSONparsed = false;\n\t\t}\n\n\t\tif (!this._geoJSONparsed) {\n\t\t\tthis._parseGeoJSON();\n\t\t\tthis._geoJSONparsed = true;\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._handleDirties();\n\t\t}\n\n\t\tif (this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\")) {\n\n\t\t\tthis._handleDirties();\n\n\t\t\tconst chart = this.chart;\n\n\t\t\tconst exclude = this.get(\"exclude\");\n\n\t\t\tif (exclude) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(exclude, (id) => {\n\t\t\t\t\tconst dataItem = this.getDataItemById(id);\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tthis._excludeDataItem(dataItem)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!exclude || exclude.length == 0) {\n\t\t\t\t$array.each(this._excluded, (dataItem) => {\n\t\t\t\t\tthis._unexcludeDataItem(dataItem)\n\t\t\t\t})\n\t\t\t\tthis._excluded = [];\n\t\t\t}\n\n\t\t\tconst include = this.get(\"include\");\n\t\t\tif (include) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst id = dataItem.get(\"id\");\n\t\t\t\t\tif (id && include.indexOf(id) == -1) {\n\t\t\t\t\t\tthis._notIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!include) {\n\t\t\t\t$array.each(this._notIncluded, (dataItem) => {\n\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t\tthis._notIncluded = [];\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._excluded, dataItem);\n\t}\n\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._notIncluded, dataItem);\n\t}\n\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tconst geodataNames = this.get(\"geodataNames\");\n\t\t\tif (features) {\n\n\t\t\t\tconst idField = this.get(\"idField\", \"id\");\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature[idField];\n\n\t\t\t\t\t\tif (geodataNames && geodataNames[id]) {\n\t\t\t\t\t\t\tfeature.properties.name = geodataNames[id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\t//if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t//\tcontinue;\n\t\t\t\t\t\t\t//}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tdataObject[idField] = id;\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any, series: MapSeries) {\n\t\tif (geometry && series.get(\"affectsBounds\", true)) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tthis._geoJSONparsed = false;\n\t\tthis._markDirtyKey(\"exclude\");\n\t}\t\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $type from \"../../core/util/Type\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate, IGraphicsEvents } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n}\n\nexport interface IMapLineEvents extends IGraphicsEvents {\n\n\t/**\n\t * Invoked when line is redrawn\n\t */\n\tlinechanged: {};\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\tdeclare public _events: IMapLineEvents;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath && dataItem) {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tif (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\n\n\t\t\t\t\t\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tlet coordinates = geometry.coordinates;\n\t\t\t\t\t\t\t\t\tif (coordinates) {\n\n\t\t\t\t\t\t\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\t\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\t\t\t\t\t\t\t\tif (segment.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp0 = segment[0];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(p0.x, p0.y);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let p = 0; p < segment.length; p++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp = segment[p];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pn = chart.convert({ longitude: gp[0], latitude: gp[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(pn.x, pn.y);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = \"linechanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tconst geoPoint = this.positionToGeoPoint(tooltipX.value)\n\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\tif (series) {\n\t\t\t\tconst chart = series.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst point = chart.convert(geoPoint);\n\t\t\t\t\tx = point.x;\n\t\t\t\t\ty = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn { x, y };\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tconst series = this.getPrivate(\"series\");\n\t\tconst chart = series.chart;\n\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\n\t\tif (geometry && series && chart && dataItem) {\n\t\t\tconst lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];\n\t\t\t\t\t\tpointB = segment[0] as [number, number];\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location: number[];\n\n\t\t\t\t\tif (lineType == \"straight\") {\n\t\t\t\t\t\tlet p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\n\t\t\t\t\t\tlet p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\n\n\t\t\t\t\t\tlet x = p0.x + (p1.x - p0.x) * positionAB;\n\t\t\t\t\t\tlet y = p0.y + (p1.y - p0.y) * positionAB;\n\n\t\t\t\t\t\treturn chart.invert({ x: x, y: y });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlocation = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points. Note, fixed points can not be used here.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.32\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.24\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n\n\t/**\n\t * @ignore\n\t */\n\tlineTypeField?: string;\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"lineType\");\n\t\tthis._setRawDefault(\"lineTypeField\", \"lineType\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tthis._handlePointsToConnect(dataItem);\n\t\tdataItem.on(\"pointsToConnect\", () => {\n\t\t\tthis._handlePointsToConnect(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tprotected _handlePointsToConnect(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\tclipExtent?: boolean;\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\n\t\tif (this.isDirty(\"clipExtent\")) {\n\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart.events.on(\"geoboundschanged\", () => {\n\t\t\t\t\t\tthis._generate();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis._generate();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst geoBounds = chart.geoBounds();\n\t\t\t\t\tif (geoBounds) {\n\t\t\t\t\t\tgraticule.extent([[geoBounds.left, geoBounds.bottom], [geoBounds.right, geoBounds.top]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst step = this.get(\"step\", 10);\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50, p100 } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4,\r\n\t\t\tcenterMapOnZoomOut: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPolygonSeries\").setAll({\r\n\t\t\taffectsBounds: true\r\n\t\t})\r\n\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\taffectsBounds: false,\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true,\r\n\t\t\tautoScale: false\r\n\t\t})\r\n\r\n\t\tr(\"ClusteredPointSeries\").setAll({\r\n\t\t\tminDistance: 20,\r\n\t\t\tscatterDistance: 3,\r\n\t\t\tscatterRadius: 8,\r\n\t\t\tstopClusterZoom: 0.95\r\n\t\t})\r\n\r\n\t\tr(\"MapLineSeries\").setAll({\r\n\t\t\taffectsBounds: false\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"zoomcontrol\"]).setAll({\r\n\t\t\tmarginTop: 1,\r\n\t\t\tmarginBottom: 1\r\n\t\t})\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"plus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t\tdisplay.moveTo(0, -4);\r\n\t\t\t\tdisplay.lineTo(0, 4);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"minus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ZoomControl\").setAll({\r\n\t\t\tx: p100,\r\n\t\t\tcenterX: p100,\r\n\t\t\ty: p100,\r\n\t\t\tcenterY: p100,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingBottom: 10\r\n\t\t})\r\n\r\n\t}\r\n}\r\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds, geoArea } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * Returns geo centroid of a geometry\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * Returns geo area of a geometry\n */\nexport function getGeoArea(geometry: GeoJSON.GeometryObject): number {\n\treturn geoArea(geometry);\n}\n\n/**\n * Returns bounds of a geometry\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south <= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north >= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import type { MapSeries } from \"./MapSeries\";\nimport type { MapPointSeries } from \"./MapPointSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IMapPolygonSeriesDataItem } from \"./MapPolygonSeries\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * current x position of a map\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * current y position of a map\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when horizontal mouse wheel (only some mouses do have such a wheel)\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial/home rotationX.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationX?: number;\n\n\t/**\n\t * Initial/home rotationY.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationY?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n\t/**\n\t * Setting `true` means that the map will automatically center itself (or go\n\t * to `homeGeoPoint` if set) when fully zoomed out.\n\t *\n\t * `false` would mean that zoom out will be centered around the mouse\n\t * cursor (when zooming using wheel), or current map position.\n\t * \n\t * @default true\n\t * @since 5.2.1\n\t */\n\tcenterMapOnZoomOut?: boolean;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is\n\t * initialized.\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tpublic _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted: boolean = false;\n\n\tprotected _centerX: number = 0;\n\tprotected _centerY: number = 0;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns a geoPoint of the current zoom position.\n\t * \n\t * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\n\t *\n\t * @since 5.2.19\n\t */\n\tpublic geoPoint() {\n\t\treturn this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t// some page element is over the chart.\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tconst previousGeometries = this._geometryColection.geometries;\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\n\t\t\t\t\t\tthis._centerX = translate[0];\n\t\t\t\t\t\tthis._centerY = translate[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\n\t\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (series.isType<MapPointSeries>(\"MapPointSeries\")) {\n\t\t\t\t\tif (series.get(\"autoScale\")) {\n\t\t\t\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\t\t\t\tconst bullets = dataItem.bullets;\n\t\t\t\t\t\t\tif (bullets) {\n\t\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\t\t\tsprite.set(\"scale\", this.get(\"zoomLevel\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tthis._centerX = translate[0];\n\t\t\tthis._centerY = translate[1];\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns geographical coordinates for calculated or manual center of the\n\t * map.\n\t */\n\tpublic homeGeoPoint(): IGeoPoint {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\t\treturn homeGeoPoint;\n\t}\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tthis.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration, this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.chartContainer._display.cancelTouch) {\n\t\t\tthis.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\n\t\tthis._setUpTouch();\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tlet count = $object.keys(this.chartContainer._downPoints).length;\n\t\tif (count == 1) {\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n\t\t\tconst downPoint = this.chartContainer._downPoints[1];\n\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts screen coordinates (X and Y) within chart to latitude and\n\t * longitude.\n\t * \n\t * @param  point  Screen coordinates\n\t * @return        Geographical coordinates\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * Converts latitude/longitude to screen coordinates (X and Y).\n\t * \n\t * @param  point  Geographical coordinates\n\t * @param  rotationX  X rotation of a map if different from current\n\t * @param  rotationY  Y rotation of a map if different from current\n\t * \n\t * @return Screen coordinates\n\t */\n\tpublic convert(point: IGeoPoint, rotationX?: number, rotationY?: number): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\t\tlet xy;\n\n\t\tif (!projection.rotate) {\n\t\t\trotationX = undefined;\n\t\t\trotationY = undefined;\n\t\t}\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tif (rotationX == null) {\n\t\t\t\trotationX = 0;\n\t\t\t}\n\t\t\tif (rotationY == null) {\n\t\t\t\trotationY = 0;\n\t\t\t}\n\t\t\tlet rotation = projection.rotate();\n\t\t\tprojection.rotate([rotationX, rotationY, 0]);\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t\tprojection.rotate(rotation);\n\t\t}\n\t\telse {\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\t\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\t\t\t\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\t\t\t\tconst maxPanOut = this.get(\"maxPanOut\", 0.4);\n\t\t\t\t\t\t\tconst bounds = this._mapBounds;\n\n\t\t\t\t\t\t\tconst w = this.width();\n\t\t\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\t\t\tconst ww = bounds[1][0] - bounds[0][0];\n\t\t\t\t\t\t\tconst hh = bounds[1][1] - bounds[0][1];\n\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\n\t\t\t\t\t\t\t\tconst cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\n\t\t\t\t\t\t\t\tx = Math.min(x, cx + ww * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\tx = Math.max(x, cx - ww * maxPanOut * zoomLevel);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t\tconst cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\n\t\t\t\t\t\t\t\ty = Math.min(y, cy + hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\ty = Math.max(y, cy - hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top }, rotationX, rotationY);\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom }, rotationX, rotationY);\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY);\n\t\t}\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tif (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\n\t\t\tpoint = this.convert(this.homeGeoPoint());\n\t\t\tcenter = true;\n\t\t}\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t * \n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\n\t\tlet xy = this.convert(geoPoint, rotationX, rotationY);\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY, duration);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\tpublic rotate(rotationX?: number, rotationY?: number, duration?: number) {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (!projection.rotate) {\n\t\t}\n\t\telse {\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t\t}\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tif (rotationX != null) {\n\t\t\t\tthis.animate({ key: \"rotationX\", to: rotationX, duration: duration, easing: easing });\n\t\t\t}\n\t\t\tif (rotationY != null) {\n\t\t\t\tthis.animate({ key: \"rotationY\", to: rotationY, duration: duration, easing: easing });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n\n\t/**\n\t * Returns area of a mapPolygon in square pixels.\n\t */\n\tpublic getArea(dataItem: DataItem<IMapPolygonSeriesDataItem>): number {\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (geometry) {\n\t\t\treturn geoPath.area(geometry);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n\n\t/**\n\t * If set to `true`, the point will be drawn according to its `x` and `y`\n\t * coordinates, not its latitude and longitude.\n\t * \n\t * Fixed points will not move together with map, and can not be used to\n\t * connect points on a `MapLineSeries`.\n\t * \n\t * @default false\n\t * @since 5.2.34\n\t */\n\tfixed?: boolean;\n\n\t/**\n\t * Point (in pixels) of a data item\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * @ignore\n\t */\n\tclipped?: boolean;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n\t/**\n\t * A field in data that holds information if this point is fixed or moves with a map.\n\t */\n\tfixedField?: string;\n\n\t/**\n\t * If set to `true`, bullets will resize when zooming the [[MapChart]].\n\t * \n\t * @since 5.2.8\n\t * @default false\n\t */\n\tautoScale?: boolean\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _lineChangedDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tlet geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tgeometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\n\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._addGeometry(geometry, this);\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction));\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _setBulletParent(bullet?: Bullet) {\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (sprite && chart) {\n\t\t\t\tconst dataItem = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.get(\"fixed\")) {\n\t\t\t\t\t\tif (sprite.parent != chart.bulletsContainer) {\n\t\t\t\t\t\t\tchart.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sprite.parent != this.bulletsContainer) {\n\t\t\t\t\t\t\tthis.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem && dataItem.get(\"fixed\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst fixed = dataItem.get(\"fixed\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lineChangedDp) {\n\t\t\t\tthis._lineChangedDp.dispose();\n\t\t\t}\n\n\t\t\tif (line) {\n\t\t\t\tthis._lineChangedDp = line.events.on(\"linechanged\", () => {\n\t\t\t\t\tthis._positionBullets(dataItem);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fixed && coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tconst point = { x: xy[0], y: xy[1] };\n\t\t\t\tsprite.setAll(point);\n\t\t\t\tdataItem.setRaw(\"point\", point);\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\tdataItem.set(\"clipped\", !visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number, rotate?: boolean): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\t\t\tif (rotate) {\n\t\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\n\t\t\t}\n\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\n\t\t}\n\t}\n\n\n\t/**\n\t * Zooms the map in so that all points in the array are visible.\n\t *\n\t * @param   dataItems  An array of data items of points to zoom to\n\t * @param   rotate     Rotate the map so it is centered on the selected items\n\t * @return             Animation\n\t * @since 5.5.6\n\t */\n\tzoomToDataItems(dataItems: Array<DataItem<IMapPointSeriesDataItem>>, rotate?: boolean): Animation<any> | undefined {\n\n\t\tlet left: number | null = null;\n\t\tlet right: number | null = null;\n\t\tlet top: number | null = null;\n\t\tlet bottom: number | null = null;\n\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\n\t\t\tif (left == null || left > longitude) {\n\t\t\t\tleft = longitude;\n\t\t\t}\n\t\t\tif (right == null || right < longitude) {\n\t\t\t\tright = longitude;\n\t\t\t}\n\t\t\tif (top == null || top < latitude) {\n\t\t\t\ttop = latitude;\n\t\t\t}\n\t\t\tif (bottom == null || bottom > latitude) {\n\t\t\t\tbottom = latitude;\n\t\t\t}\n\t\t})\n\t\tif (left != null && right != null && top != null && bottom != null) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tif (rotate) {\n\t\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -(left + (right - left) / 2), -(top + (top - bottom) / 2));\n\t\t\t\t}\n\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom });\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.each((series) => {\n\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t$array.each(series.dataItems, (di) => {\n\t\t\t\t\t\tconst pointsToConnect = di.get(\"pointsToConnect\");\n\t\t\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\t\t\tif (point == dataItem) {\n\t\t\t\t\t\t\t\t\t$array.remove(pointsToConnect, point);\n\t\t\t\t\t\t\t\t\tseries.markDirtyValues(di);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.disposeDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\treturn { longitude: center[0], latitude: center[1] };\n\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true`, the order of coordinates in GeoJSON will be flipped.\n\t *\n\t * Some GeoJSON software produces those in reverse order, so if your custom\n\t * map appears garbled, try this setting.\n\t * \n\t * @default false\n\t * @since 5.2.42\n\t */\n\treverseGeodata?: boolean;\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t);\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tlet geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (this.get(\"reverseGeodata\")) {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tfor (let x = 0; x < geometry.coordinates.length; x++) {\n\t\t\t\t\t\tif (geometry.type == \"MultiPolygon\") {\n\t\t\t\t\t\t\tfor (let y = 0; y < geometry.coordinates[x].length; y++) {\n\t\t\t\t\t\t\t\tgeometry.coordinates[x][y].reverse()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgeometry.coordinates[x].reverse()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t * @param  rotate If it's true, the map will rotate so that this polygon would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>, rotate?: boolean): Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (geometry && chart) {\n\n\t\t\t\tif (rotate) {\n\t\t\t\t\tconst centroid = $mapUtils.getGeoCentroid(geometry);\n\t\t\t\t\tchart.rotate(-centroid.longitude, -centroid.latitude);\n\t\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry), undefined, -centroid.longitude, -centroid.latitude);\n\t\t\t\t}\n\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry),);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { MapPointSeries, IMapPointSeriesSettings, IMapPointSeriesPrivate, IMapPointSeriesDataItem } from \"./MapPointSeries\";\r\nimport { DataItem, IComponentDataItem } from \"../../core/render/Component\";\r\nimport type { Root } from \"../../core/Root\";\r\nimport type { Bullet } from \"../../core/render/Bullet\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as d3hierarchy from \"d3-hierarchy\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IClusteredDataItem extends IComponentDataItem {\r\n\t/**\r\n\t * All the data items of this cluster\r\n\t */\r\n\tchildren?: Array<DataItem<IMapPointSeriesDataItem>>;\r\n\r\n\t/**\r\n\t * Bullet of clustered data item\r\n\t */\r\n\tbullet?: Bullet;\r\n}\r\n\r\nexport interface IClusteredPointSeriesDataItem extends IMapPointSeriesDataItem {\r\n\t/**\r\n\t * An ID of a bullet's group.\r\n\t */\r\n\tgroupId?: string\r\n\r\n\t/**\r\n\t * Clustered data item (if available)\r\n\t * @readonly\r\n\t */\r\n\tcluster?: DataItem<IClusteredDataItem>;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdy?: number;\r\n}\r\n\r\nexport interface IClusteredPointSeriesPrivate extends IMapPointSeriesPrivate {\r\n\r\n}\r\n\r\nexport interface IClusteredPointSeriesSettings extends IMapPointSeriesSettings {\r\n\t/**\r\n\t * Series data can contain a field with an ID of a virtual group the bullet\r\n\t * belongs to.\r\n\t *\r\n\t * For example, we migth want bullets to group with other bullets from the\r\n\t * same continent.\r\n\t *\r\n\t * `groupIdField` specifies which field in source data holds group IDs.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_segregation} for more info\r\n\t * @default groupID\r\n\t */\r\n\tgroupIdField?: string;\r\n\r\n\t/**\r\n\t * Bullets that are closer than X pixels apart, will be automatically grouped.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Minimal_distance} for more info\r\n\t * @default 20\r\n\t */\r\n\tminDistance?: number;\r\n\r\n\t/**\r\n\t * Set this to a [[Bullet]] instance which will be used to show groups.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_bullet} for more info\r\n\t */\r\n\tclusteredBullet?: (root: Root, series: ClusteredPointSeries, dataItem: DataItem<IClusteredPointSeriesDataItem>) => Bullet | undefined;\r\n\r\n\t/**\r\n\t * If bullets are closer to each other than `scatterDistance`, they will be\r\n\t * scattered so that all are visible.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 5\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterDistance?: number;\r\n\r\n\t/**\r\n\t * Presumed radius of a each bullet when scattering them.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 8\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterRadius?: number;\r\n\r\n\t/**\r\n\t * If a map is zoomed to a maxZoomLevel * stopClusterZoom, clusters will be\r\n\t * disabled.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 0.95\r\n\t * @since 5.5.7\r\n\t */\r\n\tstopClusterZoom?: number\r\n}\r\n\r\n/**\r\n * A version of [[MapPointSeries]] which can automatically group closely located\r\n * bullets into groups.\r\n * \r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/} for more info\r\n * @since 5.5.6\r\n * @important\r\n */\r\nexport class ClusteredPointSeries extends MapPointSeries {\r\n\r\n\tpublic static className: string = \"ClusteredPointSeries\";\r\n\tpublic static classNames: Array<string> = MapPointSeries.classNames.concat([ClusteredPointSeries.className]);\r\n\r\n\tdeclare public _settings: IClusteredPointSeriesSettings;\r\n\tdeclare public _privateSettings: IClusteredPointSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IClusteredPointSeriesDataItem;\r\n\r\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\r\n\tprotected _clusterIndex: number = 0;\r\n\tprotected _clusters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\tpublic clusteredDataItems: Array<DataItem<IClusteredDataItem>> = [];\r\n\r\n\tprotected _scatterIndex: number = 0;\r\n\tprotected _scatters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\r\n\tpublic _packLayout = d3hierarchy.pack();\r\n\r\n\tprotected _spiral: Array<{ x: number, y: number }> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis.fields.push(\"groupId\");\r\n\t\tthis._setRawDefault(\"groupIdField\", \"groupId\");\r\n\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"scatterRadius\")) {\r\n\t\t\tthis._spiral = $math.spiralPoints(0, 0, 300, 300, 0, 3, 3, 0, 0)\r\n\t\t}\r\n\r\n\t\tconst groups: { [index: string]: Array<DataItem<IClusteredPointSeriesDataItem>> } = {};\r\n\t\t// distribute to groups\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst groupId = dataItem.get(\"groupId\", \"_default\");\r\n\r\n\t\t\tif (!groups[groupId]) {\r\n\t\t\t\tgroups[groupId] = [];\r\n\t\t\t}\r\n\t\t\tgroups[groupId].push(dataItem);\r\n\t\t})\r\n\r\n\t\tthis._scatterIndex = -1;\r\n\t\tthis._scatters = [];\r\n\t\tthis._clusterIndex = -1;\r\n\t\tthis._clusters = [];\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"children\", undefined);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"cluster\", undefined);\r\n\t\t})\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._scatterGroup(group);\r\n\t\t})\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._clusterGroup(group);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tif (!dataItem.get(\"cluster\")) {\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to the area so that all clustered data items of a cluster would be\r\n\t * visible.\r\n\t *\r\n\t * Pass in `true` as a second parameter to rotate that map so that the group\r\n\t * is in the center. This is especially useful in the maps that use\r\n\t * Orthographic (globe) projection.\r\n\t *\r\n\t * @param  dataItem  Group data item\r\n\t * @param  rotate    Rotate the map so that group is in the center?\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Drill_down} for more info\r\n\t */\r\n\tpublic zoomToCluster(dataItem: DataItem<IClusteredDataItem>, rotate?: boolean) {\r\n\t\tthis.zoomToDataItems(dataItem.get(\"children\", []), rotate);\r\n\t}\r\n\r\n\tprotected _clusterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\t// void\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._clusterIndex++;\r\n\t\t\t\tthis._clusters[this._clusterIndex] = [];\r\n\t\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tcluster.push(dataItem);\r\n\t\t\t\t$array.remove(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._clusterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\t$array.each(this._clusters, (cluster) => {\r\n\t\t\tlet sumX = 0;\r\n\t\t\tlet sumY = 0;\r\n\r\n\t\t\tlet len = cluster.length;\r\n\r\n\t\t\tif (len > 1) {\r\n\r\n\t\t\t\tlet clusteredDataItem = this.clusteredDataItems[i];\r\n\t\t\t\tif (!clusteredDataItem) {\r\n\t\t\t\t\tclusteredDataItem = new DataItem(this, undefined, {});\r\n\r\n\t\t\t\t\tconst bulletMethod = this.get(\"clusteredBullet\");\r\n\t\t\t\t\tif (bulletMethod) {\r\n\t\t\t\t\t\tconst bullet = clusteredDataItem.set(\"bullet\" as any, bulletMethod(this._root, this, clusteredDataItem));\r\n\r\n\t\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\r\n\t\t\t\t\t\t\t\tsprite._setDataItem(clusteredDataItem);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.clusteredDataItems.push(clusteredDataItem)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.each(cluster, (dataItem) => {\r\n\t\t\t\t\tdataItem.setRaw(\"cluster\", clusteredDataItem);\r\n\r\n\t\t\t\t\tconst point = dataItem.get(\"point\");\r\n\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\tsumX += point.x;\r\n\t\t\t\t\t\tsumY += point.y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlet averageX = sumX / len;\r\n\t\t\t\tlet averageY = sumY / len;\r\n\r\n\t\t\t\tclusteredDataItem.setRaw(\"children\" as any, cluster);\r\n\r\n\t\t\t\tconst prevLen = clusteredDataItem.get(\"value\" as any);\r\n\t\t\t\tclusteredDataItem.setRaw(\"value\" as any, len);\r\n\r\n\t\t\t\tconst bullet = clusteredDataItem.get(\"bullet\" as any);\r\n\t\t\t\tif (bullet) {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\tsprite.setAll({ x: averageX, y: averageY });\r\n\r\n\t\t\t\t\t\tif (prevLen != len) {\r\n\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\tsprite.walkChildren((child) => {\r\n\t\t\t\t\t\t\t\t\tif (child instanceof Label) {\r\n\t\t\t\t\t\t\t\t\t\tchild.text.markDirtyText();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tlet children = dataItem.get(\"children\");\r\n\t\t\tif (!children || children.length == 0) {\r\n\t\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\t\tif (bullet) {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _clusterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\t$array.each(dataItems, (di) => {\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\t\t\t\t\tif (diPoint) {\r\n\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < this.get(\"minDistance\", 20)) {\r\n\t\t\t\t\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\t\t\t\t\t\t\tcluster.push(di);\r\n\t\t\t\t\t\t\t$array.remove(dataItems, di);\r\n\t\t\t\t\t\t\tthis._clusterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._scatterIndex++;\r\n\t\t\t\tthis._scatters[this._scatterIndex] = [];\r\n\t\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tscatter.push(dataItem);\r\n\t\t\t\t$array.remove(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._scatterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this._scatters, (scatter) => {\r\n\t\t\t\tlet len = scatter.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\t\t\t\t\tlet previousCircles: Array<{ x: number, y: number, radius: number }> = [];\r\n\t\t\t\t\tlet s = 0;\r\n\t\t\t\t\tlet radius = this.get(\"scatterRadius\", 8);\r\n\t\t\t\t\t$array.each(scatter, (dataItem) => {\r\n\t\t\t\t\t\tlet spiralPoint = this._spiral[s];\r\n\t\t\t\t\t\tlet intersects = true;\r\n\r\n\t\t\t\t\t\tif (previousCircles.length > 0) {\r\n\t\t\t\t\t\t\twhile (intersects) {\r\n\t\t\t\t\t\t\t\t$array.each(previousCircles, (previousCircle) => {\r\n\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\twhile ($math.circlesOverlap({ x: spiralPoint.x, y: spiralPoint.y, radius: radius }, previousCircle)) {\r\n\t\t\t\t\t\t\t\t\t\ts++;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (this._spiral[s] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = true;\r\n\t\t\t\t\t\t\t\t\t\t\tspiralPoint = this._spiral[s];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst dx = spiralPoint.x;\r\n\t\t\t\t\t\tconst dy = spiralPoint.y;\r\n\r\n\t\t\t\t\t\tpreviousCircles.push({ x: dx, y: dy, radius: radius });\r\n\r\n\t\t\t\t\t\tdataItem.set(\"dx\", dx);\r\n\t\t\t\t\t\tdataItem.set(\"dy\", dy);\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.setAll({ dx: dx, dy: dy });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\t$array.each(dataItems, (di) => {\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\r\n\t\t\t\t\tif (diPoint) {\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < this.get(\"scatterDistance\", 5)) {\r\n\t\t\t\t\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t\t\t\t\tscatter.push(di);\r\n\t\t\t\t\t\t\t$array.remove(dataItems, di);\r\n\t\t\t\t\t\t\tthis._scatterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import type { MapChart } from \"./MapChart\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { MultiDisposer } from \"../../core/util/Disposer\";\n\nexport interface IZoomControlSettings extends IContainerSettings {\n\n}\n\nexport interface IZoomControlPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends Container {\n\n\t/**\n\t * A [[Button]] for zoom in.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"plus\"] }));\n\n\t/**\n\t * A [[Button]] for zoom out.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"minus\"] }));\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomControl.className]);\n\n\tprotected _disposer: MultiDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"position\", \"absolute\");\n\n\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\tthis.set(\"themeTags\", [\"zoomcontrol\"]);\n\n\t\tthis.plusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t\tthis.minusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tconst chart = this.getPrivate(\"chart\");\n\t\t\tconst previous = this._prevPrivateSettings.chart;\n\t\t\tif (chart) {\n\t\t\t\tthis._disposer = new MultiDisposer([\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomIn()\n\t\t\t\t\t}),\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomOut()\n\t\t\t\t\t})])\n\t\t\t}\n\n\t\t\tif (previous && this._disposer) {\n\t\t\t\tthis._disposer.dispose();\n\t\t\t}\n\t\t}\n\t}\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n"],"names":["MapSeries","Series","constructor","Object","defineProperty","_afterNew","this","fields","push","_setRawDefault","on","geoJSON","previous","_prevSettings","data","clear","super","_handleDirties","get","undefined","_geoJSONparsed","_parseGeoJSON","_prepareChildren","_valuesDirty","isDirty","chart","exclude","_centerLocation","$array","id","dataItem","getDataItemById","_excludeDataItem","length","_excluded","_unexcludeDataItem","include","dataItems","indexOf","_notIncludeDataItem","_unNotIncludeDataItem","_notIncluded","_removeGeometry","_addGeometry","checkInclude","includes","excludes","features","type","geometry","console","log","geodataNames","idField","i","len","feature","properties","name","_types","dataObject","value","dataContext","geometryType","set","processDataItem","madeFromGeoData","$object","events","isEnabled","dispatch","target","_placeBulletsContainer","_chart","children","moveValue","bulletsContainer","_removeBulletsContainer","projection","geoPath","getPrivate","series","_geometries","markDirtyGeometries","_dispose","removeValue","_onDataClear","_markDirtyKey","classNames","concat","className","Adder","_partials","Float64Array","_n","add","x","p","j","y","hi","lo","Math","abs","valueOf","n","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","ceil","exp","hypot","floor","sin","pow","sign","sqrt","tan","asin","haversin","noop","streamGeometry","stream","streamGeometryType","hasOwnProperty","lengthSum","lambda0","sinPhi0","cosPhi0","streamObjectType","Feature","object","FeatureCollection","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lengthStream","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","delta","cosDelta","z","a","b","MapLine","Graphics","_beforeChanged","_projectionDirty","clipAngle","precision","_clear","segments","display","s","segment","gp0","p0","convert","longitude","latitude","lineTo","gp","pn","_display","context","markDirtyProjection","markDirty","_clearDirty","_getTooltipPoint","tooltipX","tooltipY","$type","Percent","geoPoint","positionToGeoPoint","position","lineType","distanceAB","pointA","pointB","totalDistance","geoLength","currentDistance","positionA","positionB","geoDistance","location","positionAB","p1","invert","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","k","interpolate","t","B","A","distance","geoInterpolate","MapLineSeries","ListTemplate","Template","new","_new","_root","mapLines","template","makeMapLine","mapLine","make","_setDataItem","_handlePointsToConnect","setPrivate","pointsToConnect","markDirtyValues","coords","setRaw","disposeDataItem","dispose","range","start","stop","step","arguments","max","Array","graticuleX","dy","map","graticuleY","dx","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","GraticuleSeries","makeDataItem","_dataItem","_generate","_updateChildren","geoGraticule","geoBounds","left","bottom","right","top","compose","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","line","m","rejoin","pop","shift","result","Intersection","points","other","entry","o","e","v","compareIntersection","startInside","subject","clip","forEach","pointEqual","sort","link","current","isSubject","array","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","merge","arrays","from","flatten","pointVisible","clipLine","sink","polygon","ring","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","normal","angle","winding","sum","point0","phi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","circleRadius","acos","clipMax","clipMin","clipRectangle","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","min","r","ax","ay","transformer","methods","TransformStream","key","prototype","Infinity","boundsStream","bounds","fit","fitBounds","clipExtent","scale","translate","geoStream","fitExtent","w","h","maxDepth","cosMinDistance","project","delta2","resampleLineTo","c0","c1","depth","d2","c","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","center","apply","reset","transformRotate","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","u","uu","t2","q","polar","q1","code","v0","v00","point2","clipCircle","reflectX","reflectY","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","MapChartDefaultTheme","Theme","setupDefaultRules","ic","interfaceColors","rule","bind","setAll","geoMercator","panX","panY","pinchZoom","zoomStep","zoomLevel","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","$ease","wheelEasing","wheelDuration","wheelSensitivity","maxPanOut","centerMapOnZoomOut","role","setColor","affectsBounds","clipFront","clipBack","autoScale","minDistance","scatterDistance","scatterRadius","stopClusterZoom","isMeasured","fillOpacity","strokeWidth","strokeOpacity","marginTop","marginBottom","p50","draw","moveTo","p100","centerX","centerY","paddingRight","paddingBottom","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","lengthRing","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","W0","W1","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","deltaSum","ranges","areaRing","dLambda","sdLambda","adLambda","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","getGeoCentroid","geoCentroid","getGeoBounds","merged","deltaMax","MapChart","SerialChart","_makeGeoPath","path","projectionStream","contextStream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","setPrivateRaw","seriesContainer","toGlobal","_geoCentroid","_geoBounds","_handleSetWheel","chartContainer","_wheelDp","event","wheelEvent","originalEvent","$utils","preventDefault","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_disposers","innerWidth","innerHeight","previousGeometries","_geometryColection","_fitMap","prev","hw","hh","centerLocation","xy","xx","yy","_dirtyGeometries","each","_pw","_ph","newScale","_centerX","_centerY","_mapBounds","zoomControl","_disposeProperty","isType","bullets","bullet","sprite","_setUpTouch","$mapUtils","$math","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","homeGeoPoint","goHome","duration","zoomToGeoPoint","_afterChanged","cancelTouch","_defaultThemes","_settings","themeTags","Rectangle","fill","Color","fromHex","_handleChartDown","_handleChartUp","_handleChartMove","license","registry","licenses","match","_showBranding","_downZoomLevel","count","_downPoints","downPoint","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","_txa","_tya","_rxa","_rya","l0","l1","_pLon","_pLat","ll","_event","_handlePinch","downPoints","movePoints","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","level","moveCenter","downCenter","tx","ty","_getDownPoint","downPointId","pointerId","local","disableType","ww","downLocation","easing","animate","newZoomLevel","zoomToPoint","zoomToGeoBounds","mapBounds","zl","readerAlert","_t","locale","zoomIn","zoomOut","getArea","MapPointSeries","_positionBullets","_makeBullets","bulletFunction","_setBulletParent","_makeBullet","parent","_positionBullet","lineDataItem","fixed","lineId","lineDI","_lineChangedDp","polygonDataItem","polygonId","polygonDI","positionOnLine","visualCentroid","geoPoint0","geoPoint1","_positionBulletReal","index","_index","zoomToDataItem","zoomToDataItems","di","MapPolygon","isHover","showTooltip","biggestArea","geoArea","$polylabel","MapPolygonSeries","mapPolygons","makeMapPolygon","mapPolygon","ClusteredPointSeries","d3hierarchy","_spiral","groups","groupId","_scatterIndex","_scatters","_clusterIndex","_clusters","clusteredDataItems","_key","group","_scatterGroup","_clusterGroup","zoomToCluster","cluster","_clusterDataItem","sumX","sumY","clusteredDataItem","DataItem","bulletMethod","averageX","averageY","prevLen","Container","walkChildren","child","Label","text","markDirtyText","diPoint","scatter","_scatterDataItem","previousCircles","spiralPoint","intersects","previousCircle","ZoomControl","Button","verticalLayout","plusButton","icon","layout","minusButton","isPrivateDirty","_prevPrivateSettings","_disposer","MultiDisposer","Queue","require","polylabel","debug","minX","minY","maxX","maxY","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","f","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","inside","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","exports","TinyQueue","compare","defaultCompare","_down","item","_up","peek","pos","halfLength","best","optional","required","Error","constantZero","packEncloseRandom","circles","random","shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","b2","b3","c3","d1","d3","ab","xa","xb","ya","yb","C","place","score","node","next","Node","circle","packSiblingsRandom","aa","sj","sk","pack","defaultRadius","padding","root","lcg","eachBefore","radiusLeaf","eachAfter","packChildrenRandom","translateChild","constant"],"sourceRoot":""}