{"version":3,"file":"static/js/json_flow.d57ebf5f.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/MonotoneXTension.ts","../node_modules/src/.internal/core/render/MonotoneYTension.ts","../node_modules/src/.internal/core/render/RadialLabel.ts","../node_modules/src/.internal/core/render/RadialText.ts","../node_modules/src/.internal/core/render/Slice.ts","../node_modules/src/.internal/core/render/gradients/Gradient.ts","../node_modules/src/.internal/core/render/gradients/LinearGradient.ts","../node_modules/src/.internal/charts/flow/FlowDefaultTheme.ts","../node_modules/src/.internal/charts/flow/Flow.ts","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/constant.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-zoom/src/transform.js","../node_modules/src/.internal/charts/flow/FlowNode.ts","../node_modules/src/.internal/charts/flow/FlowNodes.ts","../node_modules/src/.internal/charts/flow/ChordNodes.ts","../node_modules/src/.internal/charts/flow/FlowLink.ts","../node_modules/src/.internal/charts/flow/ChordLink.ts","../node_modules/src/.internal/charts/flow/Chord.ts","../node_modules/src/.internal/charts/flow/ChordLinkDirected.ts","../node_modules/src/.internal/charts/flow/ChordDirected.ts","../node_modules/src/.internal/charts/flow/ChordNonRibbon.ts","../node_modules/src/.internal/charts/flow/SankeyNodes.ts","../node_modules/src/.internal/charts/flow/SankeyLink.ts","../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","../node_modules/d3-sankey/node_modules/d3-array/src/max.js","../node_modules/d3-sankey/node_modules/d3-array/src/min.js","../node_modules/d3-sankey/src/align.js","../node_modules/d3-sankey/src/constant.js","../node_modules/d3-sankey/src/sankey.js","../node_modules/src/.internal/charts/flow/Sankey.ts","../node_modules/src/.internal/charts/flow/ArcDiagramNodes.ts","../node_modules/src/.internal/charts/flow/ArcDiagramLink.ts","../node_modules/src/.internal/charts/flow/ArcDiagram.ts","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js"],"sourcesContent":["/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","/**\n * @ignore\n */\nexport class MonotoneYTension {\n\n  constructor(context: any, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n\n    [x, y] = [y, x]\n\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneYTension(tension: number) {\n\n  function monotoneYTension(context: any) {\n    return new MonotoneYTension(context, tension);\n  }\n\n  monotoneYTension.tension = function(tension: number) {\n    return curveMonotoneYTension(+tension);\n  };\n\n  return monotoneYTension;\n}\n\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneYTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneYTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneYTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}","// import * as $object from \"../util/Object\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { Label, ILabelPrivate, ILabelSettings } from \"./Label\";\nimport { RadialText } from \"./RadialText\";\n\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface IRadialLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Pixel value to adjust radius with.\n\t *\n\t * Will add to (or subtract from if negative) whatever value `baseRadius` evaluates\n\t * to.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Radius of the label's position.\n\t *\n\t * Can be either set in absolute pixel value, or percent.\n\t *\n\t * Relative value, depending on the situation, will most often mean its\n\t * position within certain circular object, like a slice: 0% meaning inner\n\t * edge, and 100% - the outer edge.\n\t *\n\t * @default 100%\n\t */\n\tbaseRadius?: number | Percent;\n\n\t/**\n\t * Label anngle in degrees.\n\t *\n\t * In most cases it will be set by the chart/series and does not need to\n\t * be set manually.\n\t */\n\tlabelAngle?: number;\n\n\t/**\n\t * Should the text \"face\" inward or outward from the arc the text is\n\t * following.\n\t *\n\t * `\"auto\"` means that facing will be chosen automatically based on the angle\n\t * to enhance readbility.\n\t *\n\t * Only applies if `type = \"circluar\"`.\n\t * \n\t * @default \"auto\"\n\t */\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\n\t/**\n\t * Should label be drawn inside (`true`) or outside (`false`) the arc.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n\t/**\n\t * Label type.\n\t *\n\t * * `\"regular\"` (default) - normal horizontal label.\n\t * * `\"circular\"` - arched label.\n\t * * `\"radial\"` - label radiating from the center of the arc.\n\t * * `\"aligned\"` - horizontal label aligned with other labels horizontally.\n\t * * `\"adjusted\"` - horizontal label adjusted in postion.\n\t *\n\t * **IMPORTANT!** If the label is used in a [[PieSeries]], its `alignLabels` setting\n\t * (default: `true`) takes precedence over `textType`. If you need to set this\n\t * to anything else than `regular`, make sure you also set `alignLabels: falese` on\n\t * `PieSeries`.\n\t *\n\t * @default \"regular\"\n\t */\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\n\t/**\n\t * Extra spacing between characters, in pixels.\n\t *\n\t * @default 0\n\t */\n\tkerning?: number;\n\n}\n\nexport interface IRadialLabelPrivate extends ILabelPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tleft?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tradius?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius?: number;\n\n}\n\nexport class RadialLabel extends Label {\n\n\tdeclare public _settings: IRadialLabelSettings;\n\tdeclare public _privateSettings: IRadialLabelPrivate;\n\n\tdeclare protected _text: RadialText;\n\n\tpublic static className: string = \"RadialLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([RadialLabel.className]);\n\n\tprotected _flipped: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis._textKeys.push(\"textType\", \"kerning\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(RadialText.new(this._root, {}));\n\t}\n\n\t/**\n\t * Returns base radius in pixels.\n\t * \n\t * @return Base radius\n\t */\n\tpublic baseRadius(): number {\n\t\tconst radiusPrivate = this.getPrivate(\"radius\", 0);\n\t\tconst innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\n\t\tconst baseRadius = this.get(\"baseRadius\", 0);\n\t\treturn innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\n\t}\n\n\t/**\n\t * Returns radius adjustment in pixels.\n\t * \n\t * @return Radius\n\t */\n\tpublic radius(): number {\n\t\tconst inside = this.get(\"inside\", false);\n\t\treturn this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\n\n\t\t\tconst textType = this.get(\"textType\", \"adjusted\");\n\n\t\t\tconst inside = this.get(\"inside\", false);\n\n\t\t\tconst orientation = this.get(\"orientation\");\n\t\t\tlet labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\n\n\t\t\tthis._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\n\t\t\tthis._text.set(\"inside\", inside);\n\n\t\t\tconst sin = $math.sin(labelAngle);\n\t\t\tconst cos = $math.cos(labelAngle);\n\n\t\t\tlet baseRadius = this.baseRadius();\n\t\t\tlet radius = this.radius();\n\n\t\t\tthis._display.angle = 0;\n\n\t\t\tif (textType == \"circular\") {\n\n\t\t\t\tthis.setAll({\n\t\t\t\t\tpaddingTop: 0,\n\t\t\t\t\tpaddingBottom: 0,\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingRight: 0\n\t\t\t\t});\n\n\t\t\t\t// Circular labels are handled and positioned differently\n\n\t\t\t\tthis._text.set(\"orientation\", orientation);\n\t\t\t\tthis._text.set(\"radius\", radius);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (baseRadius == 0) {\n\t\t\t\t\tlabelAngle = 0;\n\t\t\t\t\tradius = 0;\n\t\t\t\t}\n\n\t\t\t\t// Positioning of radial/regular labels are teh same\n\t\t\t\tlet x = radius * cos;\n\t\t\t\tlet y = radius * sin;\n\n\t\t\t\tif (textType == \"radial\") {\n\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\n\t\t\t\t\tif ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\n\t\t\t\t\t\tthis._display.angle = labelAngle;// + 90;\n\t\t\t\t\t\tthis._flipped = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._display.angle = labelAngle + 180;\n\t\t\t\t\t\tthis._flipped = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._dirty.rotation = false;\n\t\t\t\t}\n\t\t\t\telse if (textType == \"adjusted\") {\n\t\t\t\t\tthis.setRaw(\"centerX\", p50);\n\t\t\t\t\tthis.setRaw(\"centerY\", p50);\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t\telse if (textType == \"regular\") {\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n\n\tpublic _updatePosition() {\n\n\t\tconst textType = this.get(\"textType\", \"regular\");\n\t\tconst inside = this.get(\"inside\", false);\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\t\tlet labelAngle = this.get(\"labelAngle\", 0);\n\t\tlet bounds = this.localBounds();\n\t\tlet w = bounds.right - bounds.left;\n\t\tlet h = bounds.bottom - bounds.top;\n\n\t\tif (textType == \"radial\") {\n\t\t\tif (this._flipped) {\n\t\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\t\tif (centerX instanceof Percent) {\n\t\t\t\t\tw = w * (1 - centerX.value * 2);\n\t\t\t\t}\n\n\t\t\t\tdx = w * $math.cos(labelAngle);\n\t\t\t\tdy = w * $math.sin(labelAngle);\n\t\t\t}\n\t\t}\n\t\telse if (!inside && textType == \"adjusted\") {\n\t\t\tdx = w / 2 * $math.cos(labelAngle);\n\t\t\tdy = h / 2 * $math.sin(labelAngle);\n\t\t}\n\n\n\t\tthis.setRaw(\"dx\", dx);\n\t\tthis.setRaw(\"dy\", dy);\n\n\t\tsuper._updatePosition();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get text(): RadialText {\n\t\treturn this._text;\n\t}\n\n}\n","import { Text, ITextSettings, ITextPrivate } from \"./Text\";\nimport * as $math from \"../util/Math\";\nimport type { IRadialText } from \"./backend/Renderer\";\n\n/**\n * @ignore\n */\nexport interface IRadialTextSettings extends ITextSettings {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialTextPrivate extends ITextPrivate {\n}\n\n/**\n * @ignore\n */\nexport class RadialText extends Text {\n\n\tdeclare public _settings: IRadialTextSettings;\n\tdeclare public _privateSettings: IRadialTextPrivate;\n\n\tpublic _display: IRadialText = this._root._renderer.makeRadialText(\"\", this.textStyle);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"RadialText\";\n\tpublic static classNames: Array<string> = Text.classNames.concat([RadialText.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._display.clear();\n\n\t\tif (this.isDirty(\"textType\")) {\n\t\t\tthis._display.textType = this.get(\"textType\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._display.radius = this.get(\"radius\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"startAngle\")) {\n\t\t\tthis._display.startAngle = (this.get(\"startAngle\", 0)! + 90) * $math.RADIANS;\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\tthis._display.inside = this.get(\"inside\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._display.orientation = this.get(\"orientation\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"kerning\")) {\n\t\t\tthis._display.kerning = this.get(\"kerning\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { IPoint } from \"../util/IPoint\";\nimport { arc } from \"d3-shape\";\nimport * as $math from \"../util/Math\";\n\nexport interface ISliceSettings extends IGraphicsSettings {\n\n\t/**\n\t * Radius in pixels.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Slice \"width\" in degrees.\n\t */\n\tarc?: number;\n\n\t/**\n\t * Inner radius of the slice in pixels.\n\t */\n\tinnerRadius?: number;\n\n\t/**\n\t * Start angle in degrees.\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * Slice corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n\n\t/**\n\t * Slice \"pull out\" radius in pixels.\n\t */\n\tshiftRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `radius` value is. Negative\n\t * numbers can also be used.\n\t */\n\tdRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `innerRadius` value is.\n\t * Negative numbers can also be used.\n\t */\n\tdInnerRadius?: number;\n\n}\n\nexport interface ISlicePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a slice shape.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Slice extends Graphics {\n\n\tdeclare public _settings: ISliceSettings;\n\tdeclare public _privateSettings: ISlicePrivate;\n\n\tpublic static className: string = \"Slice\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Slice.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic ix: number = 0;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic iy: number = 0;\n\n\tprotected _generator = arc();\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tlet radius = this.get(\"radius\", 0);\n\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\tradius += dRadius;\n\t\tinnerRadius += dInnerRadius;\n\n\t\tif (innerRadius < 0) {\n\t\t\tinnerRadius = radius + innerRadius;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tx = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value)\n\t\t}\n\n\t\tif (tooltipY instanceof Percent) {\n\t\t\ty = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value)\n\t\t}\n\n\t\tif (this.get(\"arc\") >= 360 && innerRadius == 0) {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t}\n\n\n\t\treturn { x, y };\n\t}\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tlet startAngle = this.get(\"startAngle\", 0);\n\t\t\tlet arc = this.get(\"arc\", 0);\n\t\t\tconst generator = this._generator;\n\n\t\t\tif(arc < 0){\n\t\t\t\tstartAngle = startAngle + arc;\n\t\t\t\tarc = arc * -1;\n\t\t\t}\n\n\t\t\tif(arc > 0.1){ // this fixes bug with full circle when arc is very small\n\t\t\t\tgenerator.cornerRadius(this.get(\"cornerRadius\", 0));\n\t\t\t}\n\t\t\tgenerator.context(this._display as any);\n\n\t\t\tlet radius = this.get(\"radius\", 0);\n\t\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\t\tradius += dRadius;\n\t\t\tinnerRadius += dInnerRadius;\t\t\t\n\n\t\t\tif (innerRadius < 0) {\n\t\t\t\tinnerRadius = radius + innerRadius;\n\t\t\t}\n\n\t\t\tgenerator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\n\n\t\t\tlet middleAngle = startAngle + arc / 2;\n\n\t\t\tthis.ix = $math.cos(middleAngle);\n\t\t\tthis.iy = $math.sin(middleAngle);\n\n\t\t\tconst shiftRadius = this.get(\"shiftRadius\", 0);\n\t\t\tthis.setRaw(\"dx\", this.ix * shiftRadius);\n\t\t\tthis.setRaw(\"dy\", this.iy * shiftRadius);\t\t\t\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n}\n","import type { IBounds } from \"../../util/IBounds\"\nimport type { IGradient, IGradientStop } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../../util/Entity\"\n\n\nexport interface IGradientSettings extends IEntitySettings {\n\n\t/**\n\t * A list of color steps for the gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n\t */\n\tstops?: Array<IGradientStop>;\n\n\t/**\n\t * Gradient target.\n\t */\n\ttarget?: Sprite;\n\n}\n\nexport interface IGradientPrivate extends IEntityPrivate {\n}\n\n/**\n * Base class for gradients.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport abstract class Gradient extends Entity {\n\n\tdeclare public _settings: IGradientSettings;\n\tdeclare public _privateSettings: IGradientPrivate;\n\n\tpublic static className: string = \"Gradient\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Gradient.className]);\n\n\tprotected _afterNew() {\n\t\t// Applying themes because gradient will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(_target: Sprite): IGradient {\n\t\treturn {\n\t\t\taddColorStop: (_offset: number, _color: string) => { }\n\t\t};\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\t//if (this.isDirty(\"target\") && this.get(\"target\")) {\n\t\t//\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n\n\t\t//\t});\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getBounds(target: Sprite): IBounds {\n\t\tconst gradientTarget = this.get(\"target\");\n\t\tif (gradientTarget) {\n\t\t\tlet bounds = gradientTarget.globalBounds();\n\n\t\t\tconst p0 = target.toLocal({ x: bounds.left, y: bounds.top });\n\t\t\tconst p1 = target.toLocal({ x: bounds.right, y: bounds.top });\n\t\t\tconst p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\n\t\t\tconst p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\n\n\t\t\treturn {\n\t\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t\t}\n\t\t}\n\t\treturn target._display.getLocalBounds();\n\t}\n\n}\n","import type { IGradient } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Gradient, IGradientSettings, IGradientPrivate } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\n\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\n\n\nexport interface ILinearGradientSettings extends IGradientSettings {\n\n\t/**\n\t * Gradient rotation, in degrees.\n\t *\n\t * @default 90\n\t */\n\trotation?: number;\n\n}\n\nexport interface ILinearGradientPrivate extends IGradientPrivate {\n}\n\n/**\n * Linear gradient.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport class LinearGradient extends Gradient {\n\n\tdeclare public _settings: ILinearGradientSettings;\n\tdeclare public _privateSettings: ILinearGradientPrivate;\n\n\tpublic static className: string = \"LinearGradient\";\n\tpublic static classNames: Array<string> = Gradient.classNames.concat([LinearGradient.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(target: Sprite): IGradient {\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\tlet bounds = this.getBounds(target);\n\n\t\tlet l = bounds.left || 0;\n\t\tlet r = bounds.right || 0;\n\t\tlet t = bounds.top || 0;\n\t\tlet b = bounds.bottom || 0;\n\n\t\tlet cos = $math.cos(rotation);\n\t\tlet sin = $math.sin(rotation);\n\n\t\tlet w = cos * (r - l);\n\t\tlet h = sin * (b - t);\n\n\t\tlet longer = Math.max(w, h);\n\n\t\tconst gradient = this._root._renderer.createLinearGradient(\n\t\t\tl,\n\t\t\tt,\n\t\t\tl + longer * cos,\n\t\t\tt + longer * sin\n\t\t);\n\n\t\tconst stops = this.get(\"stops\")!;\n\t\tif (stops) {\n\t\t\tlet i = 0;\n\t\t\t$array.each(stops, (stop) => {\n\n\t\t\t\tlet offset = stop.offset;\n\n\t\t\t\tif (!$type.isNumber(offset)) {\n\t\t\t\t\toffset = i / (stops.length - 1);\n\t\t\t\t}\n\n\t\t\t\tlet opacity = stop.opacity;\n\n\t\t\t\tif (!$type.isNumber(opacity)) {\n\t\t\t\t\topacity = 1;\n\t\t\t\t}\n\n\t\t\t\tlet color = stop.color;\n\n\t\t\t\tif (color) {\n\n\t\t\t\t\tconst lighten = stop.lighten;\n\t\t\t\t\tif (lighten) {\n\t\t\t\t\t\tcolor = Color.lighten(color, lighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst brighten = stop.brighten;\n\t\t\t\t\tif (brighten) {\n\t\t\t\t\t\tcolor = Color.brighten(color, brighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t})\n\t\t}\n\t\treturn gradient;\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\r\nimport type { IFlowNodesDataItem } from \"../../charts/flow/FlowNodes\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class FlowDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/flow\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Flow\").setAll({\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tpaddingLeft: 10,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingTop: 10,\r\n\t\t\tpaddingBottom: 10,\r\n\t\t\thiddenSize: 0.05,\r\n\t\t\tminSize: 0,\r\n\t\t\tminHiddenValue: 0\r\n\t\t});\r\n\r\n\t\tr(\"FlowNodes\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tlegendLabelText: \"{name}\",\r\n\t\t\tlegendValueText: \"{sumOutgoing.formatNumber('#.#')}\"\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").setAll({\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttoggleKey: \"disabled\"\r\n\t\t})\r\n\r\n\r\n\t\tr(\"FlowNode\").states.create(\"disabled\", {}); // do not remove\r\n\r\n\t\tr(\"FlowNode\", [\"unknown\"]).setAll({\r\n\t\t\tdraggable: false,\r\n\t\t\topacity: 0\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"flow\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"flow\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\").setAll({\r\n\t\t\tfillStyle: \"gradient\",\r\n\t\t\tstrokeStyle: \"gradient\"\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"source\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"target\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerover\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet rectangle = (<any>dataItem).get(\"slice\") || (<any>dataItem).get(\"rectangle\");\r\n\t\t\tif (rectangle && rectangle.get(\"tooltipText\")) {\r\n\t\t\t\trectangle.showTooltip();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerout\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Sankey\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sankey\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodeAlign: \"justify\",\r\n\t\t\tlinkTension: 0.5,\r\n\t\t\tnodePadding: 10,\r\n\t\t\tnodeWidth: 10\r\n\t\t});\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"sankey\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"SankeyLink\").setAll({\r\n\t\t\tcontrolPointDistance: 0.2\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"sankey\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"sankey\", \"link\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true,\r\n\t\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"sankey\", \"link\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"horizontal\"]).setAll({\r\n\t\t\ty: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingLeft: 15\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"vertical\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\tcenterX: p50,\r\n\t\t\tpaddingTop: 15\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Chord\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Chord\").setAll({\r\n\t\t\tradius: percent(90),\r\n\t\t\tnodeWidth: 10,\r\n\t\t\tpadAngle: 1,\r\n\t\t\tstartAngle: 0,\r\n\t\t\tsort:\"none\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordDirected\").setAll({\r\n\t\t\tlinkHeadRadius: 10\r\n\t\t});\r\n\r\n\t\tr(\"ChordNodes\").setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"chord\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"ChordLink\").setAll({\r\n\t\t\tsourceRadius: p100,\r\n\t\t\ttargetRadius: p100,\r\n\t\t\tfillStyle: \"solid\",\r\n\t\t\tstrokeStyle: \"solid\",\r\n\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t});\r\n\r\n\t\tr(\"Slice\", [\"chord\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadius: 0\r\n\t\t})\r\n\r\n\t\tr(\"Slice\", [\"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"chord\", \"node\"]).setAll({\r\n\t\t\tradius: 5,\r\n\t\t\ttextType: \"circular\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordLinkDirected\").setAll({\r\n\t\t\theadRadius: 10\r\n\t\t});\r\n\r\n\t\t// Class: Graphics\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"chord\", \"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"ChordNonRibbon\").setAll({\r\n\t\t\tlinkType: \"curve\" // \"line\" | \"curve\"\r\n\t\t})\r\n\r\n\t\tr(\"ChordLink\", [\"basic\"]).setAll({\r\n\t\t\tfillStyle: \"none\",\r\n\t\t\tstrokeStyle: \"source\"\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.4\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).states.create(\"hover\", { strokeWidth: 2, strokeOpacity: 1 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: ArcDiagram\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ArcDiagram\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodePadding: 5,\r\n\t\t\tminRadius: 5,\r\n\t\t\tradiusKey: \"sum\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"ArcDiagramNodes\", [\"horizontal\"]).setAll({\r\n\t\t\ty: p100,\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"ArcDiagramNodes\", [\"vertical\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).setAll({\r\n\t\t\ttooltipText: \"{name}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"ArcDiagramLink\", [\"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tstrokeStyle: \"solid\",\r\n\t\t\t\tfillStyle: \"none\",\r\n\t\t\t\tisMeasured: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"ArcDiagramLink\", [\"link\", \"shape\"]).states.create(\"hover\", {\r\n\t\t\tstrokeOpacity: 1\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"horizontal\"]).setAll({\r\n\t\t\ty: 0,\r\n\t\t\tcenterY: p50,\r\n\t\t\tcenterX: p100,\r\n\t\t\trotation: -90\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"vertical\"]).setAll({\r\n\t\t\tcenterY: p50,\r\n\t\t\tcenterX: p100,\r\n\t\t\tpaddingRight: 15\r\n\t\t});\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { FlowLink } from \"./FlowLink\";\nimport type { FlowNodes, IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { ListTemplate } from \"../../core/util/List\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IFlowDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Link value.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Associated link element.\n\t */\n\tlink: FlowLink;\n\n\t/**\n\t * Link's color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyLink: d3sankey.SankeyLink<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * An ID of the target node.\n\t */\n\ttargetId: string;\n\n\t/**\n\t * An ID of the source node.\n\t */\n\tsourceId: string;\n\n\t/**\n\t * A data item of the source node.\n\t */\n\tsource: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * A data item of the target node.\n\t */\n\ttarget: DataItem<IFlowNodesDataItem>;\n\n}\n\nexport interface IFlowSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data which holds source node ID.\n\t */\n\tsourceIdField?: string;\n\n\t/**\n\t * A field in data which holds target node ID.\n\t */\n\ttargetIdField?: string;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Minimum gap between adjacent nodes.\n\t *\n\t * @default 10\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Minimum size of the link.\n\t * \n\t * It's a relative value to the sum of all values in the series. If set,\n\t * this relative value will be used for small value nodes when calculating\n\t * their size. For example, if it's set to `0.01`, small nodes will be\n\t * sized like their value is 1% of the total sum of all values in series.\n\t * \n\t * @default 0\n\t * @since 5.1.5\n\t */\n\tminSize?: number;\n\n\t/**\n\t * Relative size of hidden links.\n\t * \n\t * Links are hidden when user clicks on nodes (if `toggleKey` on nodes is set\n\t * to `\"disabled\"`).\n\t * \n\t * This allows hidden node to remain visible so that user could click on it\n\t * again to show it and its links.\n\t * \n\t * @default 0.05\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/#Node_toggling} for more info\n\t * @since 5.4.1\n\t */\n\thiddenSize?: number;\n\n\t/**\n\t * Minimum value of hidden links.\n\t * \n\t * Links are hidden when user clicks on nodes (if `toggleKey` on nodes is set\n\t * to `\"disabled\"`).\n\t * \n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/#Node_toggling} for more info\n\t * @since 5.4.1\n\t */\n\tminHiddenValue?: number;\n}\n\nexport interface IFlowPrivate extends ISeriesPrivate {\n\tvalueSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n}\n\nexport interface IFlowEvents extends ISeriesEvents {\n}\n\n/**\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\n */\nexport abstract class Flow extends Series {\n\tpublic static className: string = \"Flow\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Flow.className]);\n\n\tdeclare public _settings: IFlowSettings;\n\tdeclare public _privateSettings: IFlowPrivate;\n\tdeclare public _dataItemSettings: IFlowDataItem;\n\tdeclare public _events: IFlowEvents;\n\n\t/**\n\t * @ignore\n\t */\n\tdeclare public readonly nodes: FlowNodes;\n\n\t/**\n\t * Container series will place their links in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract readonly links: ListTemplate<FlowLink>;\n\n\tprotected _nodesData: d3sankey.SankeyNodeMinimal<{}, {}>[] = [];\n\tprotected _linksData: { source: d3sankey.SankeyNodeMinimal<{}, {}>, target: d3sankey.SankeyNodeMinimal<{}, {}>, value: number }[] = [];\n\tprotected _index = 0;\n\tprotected _nodesDataSet: boolean = false;\n\n\tprotected _linksByIndex: { [index: string]: any } = {};\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(FlowDefaultTheme.new(this._root));\n\n\t\tthis.fields.push(\"disabled\", \"sourceId\", \"targetId\");\n\n\t\tif (this.nodes) {\n\t\t\tthis.nodes.flow = this;\n\t\t}\n\n\t\tsuper._afterNew();\n\n\t\tthis.children.push(this.bulletsContainer);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowLink;\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst nodes = this.nodes;\n\t\tif (nodes) {\n\t\t\tlet unknown = false;\n\t\t\tlet sourceId = dataItem.get(\"sourceId\");\n\t\t\tlet sourceDataItem = nodes.getDataItemById(sourceId);\n\n\t\t\tif (!sourceDataItem) {\n\t\t\t\tif (sourceId == null) {\n\t\t\t\t\tsourceId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\t\t\t\tnodes.data.push({ id: sourceId, unknown: unknown });\n\t\t\t\tsourceDataItem = nodes.getDataItemById(sourceId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\tsourceDataItem.set(\"name\", sourceId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunknown = false;\n\t\t\tlet targetId = dataItem.get(\"targetId\");\n\n\t\t\tlet targetDataItem = nodes.getDataItemById(targetId);\n\t\t\tif (!targetDataItem) {\n\t\t\t\tif (targetId == null) {\n\t\t\t\t\ttargetId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\n\t\t\t\tnodes.data.push({ id: targetId, unknown: unknown });\n\t\t\t\ttargetDataItem = nodes.getDataItemById(targetId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\ttargetDataItem.set(\"name\", targetId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sourceDataItem) {\n\t\t\t\tdataItem.set(\"source\", sourceDataItem);\n\t\t\t\tnodes.addOutgoingLink(sourceDataItem, dataItem);\n\t\t\t}\n\n\t\t\tif (targetDataItem) {\n\t\t\t\tdataItem.set(\"target\", targetDataItem);\n\t\t\t\tnodes.addincomingLink(targetDataItem, dataItem);\n\t\t\t}\n\n\t\t\tdataItem.set(\"link\", this.makeLink(dataItem));\n\n\t\t\tconst sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\n\t\t\tconst targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\n\n\t\t\tthis._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\n\n\t\t\tif (sourceDataItem.get(\"unknown\")) {\n\t\t\t\tif (targetDataItem) {\n\t\t\t\t\tsourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\n\t\t\tif (targetDataItem.get(\"unknown\")) {\n\t\t\t\tif (sourceDataItem) {\n\t\t\t\t\ttargetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\t\t\tthis._updateLinkColor(dataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tif (!this.nodes._userDataSet) {\n\t\t\tthis.nodes.data.setAll([]);\n\t\t\tthis.nodes._userDataSet = false;\n\t\t}\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tlet valueLow = Infinity;\n\t\tlet valueHigh = -Infinity;\n\t\tlet valueSum = 0;\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._nodesData = [];\n\t\t\tconst nodes = this.nodes;\n\t\t\tif (nodes) {\n\t\t\t\t$array.each(nodes.dataItems, (dataItem) => {\n\t\t\t\t\tconst d3SankeyNode = dataItem.get(\"d3SankeyNode\");\n\t\t\t\t\tthis._nodesData.push(d3SankeyNode);\n\n\t\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\n\n\t\t\t\t\tlet sumIncoming = 0;\n\t\t\t\t\tlet sumIncomingWorking = 0;\n\t\t\t\t\tif (incoming) {\n\t\t\t\t\t\t$array.each(incoming, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumIncoming += value;\n\t\t\t\t\t\t\tsumIncomingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumIncoming\", sumIncoming);\n\t\t\t\t\tdataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\n\n\t\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\n\t\t\t\t\tlet sumOutgoing = 0;\n\t\t\t\t\tlet sumOutgoingWorking = 0;\n\t\t\t\t\tif (outgoing) {\n\t\t\t\t\t\t$array.each(outgoing, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumOutgoing += value;\n\t\t\t\t\t\t\tsumOutgoingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumOutgoing\", sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\n\n\t\t\t\t\tdataItem.set(\"sum\", sumIncoming + sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\n\n\t\t\t\t\tnodes.updateLegendValue(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._linksData = [];\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tif (value < valueLow) {\n\t\t\t\t\t\tvalueLow = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value > valueHigh) {\n\t\t\t\t\t\tvalueHigh = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalueSum += value;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tlet valueWorking = dataItem.get(\"valueWorking\");\n\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\tif (minSize > 0) {\n\t\t\t\t\t\tif (valueWorking < minSize * valueSum) {\n\t\t\t\t\t\t\tvalueWorking = minSize * valueSum;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet d3SankeyLink = { source: dataItem.get(\"source\").get(\"d3SankeyNode\"), target: dataItem.get(\"target\").get(\"d3SankeyNode\"), value: valueWorking };\n\t\t\t\t\tdataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\n\t\t\t\t\tthis._linksData.push(d3SankeyLink);\n\t\t\t\t\tthis.updateLegendValue(dataItem);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"valueHigh\", valueHigh);\n\t\t\tthis.setPrivateRaw(\"valueLow\", valueLow);\n\t\t\tthis.setPrivateRaw(\"valueSum\", valueSum);\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst link = dataItem.get(\"link\");\n\n\t\tconst fillStyle = link.get(\"fillStyle\");\n\t\tconst strokeStyle = link.get(\"strokeStyle\");\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\t\tconst sourceFill = source.get(\"fill\");\n\t\tconst targetFill = target.get(\"fill\");\n\t\tlink.remove(\"fillGradient\");\n\t\tlink.remove(\"strokeGradient\");\n\n\t\tswitch (fillStyle) {\n\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"fill\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"fill\", targetFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._fillGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t}\n\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t}\n\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t}\n\n\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\tlink._fillGradient = gradient;\n\n\t\t\t\tlink.set(\"fillGradient\", gradient);\n\t\t\t\tbreak;\n\t\t\tcase \"none\":\n\t\t\t\tlink.set(\"fill\", undefined); // do not use remove!\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (strokeStyle) {\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"stroke\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"stroke\", targetFill);\n\t\t\t\tbreak;\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._strokeGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._strokeGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"strokeGradient\", gradient);\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tlink.remove(\"stroke\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet link = dataItem.get(\"link\");\n\t\tif (link) {\n\t\t\tthis.links.removeValue(link);\n\t\t\tlink.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tconst stateAnimationDuration = \"stateAnimationDuration\";\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tpromises.push(dataItem.animate({\n\t\t\tkey: \"valueWorking\" as any,\n\t\t\tto: Math.max(this.get(\"minHiddenValue\", 0), this.get(\"hiddenSize\", 0) * dataItem.get(\"value\")),\n\t\t\tduration: duration,\n\t\t\teasing: easing\n\t\t}).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.hide();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.show();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst point = link.getPoint(this._getBulletLocation(bullet));\n\t\t\t\t\tsprite.setAll({ x: point.x, y: point.y });\n\n\t\t\t\t\tif (bullet.get(\"autoRotate\")) {\n\t\t\t\t\t\tsprite.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\treturn bullet.get(\"locationY\", 0);\n\t}\n}\n","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IFlowNodesDataItem, FlowNodes } from \"./FlowNodes\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IFlowNodeSettings extends IContainerSettings {\n}\n\nexport interface IFlowNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for flow chart nodes.\n */\nexport class FlowNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: FlowNodes | undefined;\n\n\tdeclare public _settings: IFlowNodeSettings;\n\tdeclare public _privateSettings: IFlowNodePrivate;\n\n\tpublic static className: string = \"FlowNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([FlowNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowNodesDataItem> | undefined;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { Flow, IFlowDataItem } from \"./Flow\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { Label } from \"../../core/render/Label\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNode } from \"./FlowNode\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface IFlowNodesDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Node name.\n\t */\n\tname: string;\n\n\t/**\n\t * An associated node instance.\n\t */\n\tnode: FlowNode;\n\n\t/**\n\t * Node label.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates \"unknown\" node.\n\t */\n\tunknown: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyNode: d3sankey.SankeyNode<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * Sum of values of all incoming links.\n\t */\n\tsumIncoming: number;\n\n\t/**\n\t * Sum of values of all outgoing links.\n\t */\n\tsumOutgoing: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumIncomingWorking: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumOutgoingWorking: number;\n\n\t/**\n\t * Sum of values of all links: incoming and outgoing.\n\t */\n\tsum: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumWorking: number;\n\n\t/**\n\t * A list of incoming link data items.\n\t */\n\tincomingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * A list of outgoing link data items.\n\t */\n\toutgoingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * Depth of the node.\n\t */\n\tdepth: number;\n\n}\n\nexport interface IFlowNodesSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data boolean setting if the node is \"unknown\".\n\t *\n\t * @default \"unknown\"\n\t */\n\tunknownField?: string;\n\n\t/**\n\t * A field in data that holds name for the node.\n\t *\n\t * @default \"id\"\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t *\n\t * @since 5.4.2\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills nodes.\n\t *\n\t * @default \"fill\"\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] that series will use to apply to its nodes.\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Animation duration in ms.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for node animations.\n\t */\n\tanimationEasing?: (t: Time) => Time;\n}\n\nexport interface IFlowNodesPrivate extends ISeriesPrivate {\n}\n\nexport interface IFlowNodesEvents extends ISeriesEvents {\n}\n\n\n/**\n * Holds instances of nodes for a [[Flow]] series.\n */\nexport abstract class FlowNodes extends Series {\n\tpublic static className: string = \"FlowNodes\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([FlowNodes.className]);\n\n\tdeclare public _settings: IFlowNodesSettings;\n\tdeclare public _privateSettings: IFlowNodesPrivate;\n\tdeclare public _dataItemSettings: IFlowNodesDataItem;\n\tdeclare public _events: IFlowNodesEvents;\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, { themeTags: [\"flow\"] }, [this.labels.template])\n\t);\n\n\t/**\n\t * List of node elements.\n\t *\n\t * @default new ListTemplate<FlowNode>\n\t */\n\tpublic readonly nodes: ListTemplate<FlowNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => FlowNode._new(this._root, { themeTags: [\"node\"] }, [this.nodes.template])\n\t);\n\n\t/**\n\t * Related [[Flow]] series.\n\t */\n\tpublic abstract flow: Flow | undefined;\n\n\tpublic _userDataSet = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"unknown\", \"name\", \"fill\");\n\n\t\tthis.set(\"idField\", \"id\");\n\t\tthis.set(\"nameField\", \"id\");\n\t\tthis.set(\"fillField\", \"fill\");\n\t\tthis.set(\"unknownField\", \"unknown\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\n\t\tthis._userDataSet = true;\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tdataItem.setRaw(\"d3SankeyNode\", { name: dataItem.get(\"id\"), dataItem: dataItem });\n\n\t\tif (dataItem.get(\"fill\") == null) {\n\t\t\tlet colors = this.get(\"colors\");\n\t\t\tif (colors) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tconst node = this.makeNode(dataItem);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst disabledField = this.get(\"disabledField\");\n\n\t\tif (disabledField) {\n\t\t\tconst dataContext = dataItem.dataContext as any;\n\t\t\tif (dataContext) {\n\t\t\t\tif (dataContext[disabledField]) {\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTag?: string): FlowNode {\n\n\t\tconst node = this.nodes.make();\n\n\t\tthis.nodes.push(node);\n\n\t\tif (themeTag) {\n\t\t\tnode.addTag(themeTag);\n\t\t}\n\n\t\tif (dataItem.get(\"unknown\")) {\n\t\t\tnode.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.children.push(node);\n\t\tnode._setDataItem(dataItem);\n\t\tnode.series = this;\n\n\t\tnode.events.on(\"click\", (e) => {\n\t\t\tconst node = e.target;\n\t\t\tif (node.get(\"toggleKey\") == \"disabled\") {\n\t\t\t\tconst dataItem = node.dataItem as DataItem<IFlowNodesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\t\tthis.enableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tdataItem.on(\"fill\", () => {\n\t\t\tthis._updateNodeColor(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"node\", node);\n\t\treturn node;\n\t}\n\n\tpublic _updateNodeColor(_dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addincomingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet incoming = dataItem.get(\"incomingLinks\");\n\t\tif (!incoming) {\n\t\t\tincoming = [];\n\t\t\tdataItem.set(\"incomingLinks\", incoming)\n\t\t}\n\t\tincoming.push(link);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addOutgoingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet outgoing = dataItem.get(\"outgoingLinks\");\n\t\tif (!outgoing) {\n\t\t\toutgoing = [];\n\t\t\tdataItem.set(\"outgoingLinks\", outgoing)\n\t\t}\n\t\toutgoing.push(link);\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tnode.show();\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.show(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tnode.hide();\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.hide(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\tnode.set(\"disabled\", false);\n\t\t\t\t})\n\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"disabled\", false);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\tnode.set(\"disabled\", true);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"disabled\", true);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Chord } from \"./Chord\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\n\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordNodesDataItem extends IFlowNodesDataItem {\n\n\t/**\n\t * Node [[Slice]] element.\n\t */\n\tslice: Slice;\n\n\t/**\n\t * Node label element.\n\t */\n\tlabel: RadialLabel;\n\n}\n\nexport interface IChordNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface IChordNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface IChordNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Chord]] series.\n */\nexport class ChordNodes extends FlowNodes {\n\tpublic static className: string = \"ChordNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ChordNodes.className]);\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {}, [this.labels.template])\n\t);\n\n\tdeclare public _settings: IChordNodesSettings;\n\tdeclare public _privateSettings: IChordNodesPrivate;\n\tdeclare public _dataItemSettings: IChordNodesDataItem;\n\tdeclare public _events: IChordNodesEvents;\n\n\t/**\n\t * Related [[Chord]] series.\n\t */\n\tpublic flow: Chord | undefined;\n\n\tprotected _dAngle: number = 0;\n\n\t/**\n\t * List of slice elements.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, { themeTags: [\"shape\"] }, [this.slices.template])\n\t);\n\n\t/**\n\t * @ignore\n\t * added to solve old naming bug\n\t */\n\tpublic readonly rectangles = this.slices;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst node = super.makeNode(dataItem, \"chord\");\n\n\t\tconst slice = node.children.insertIndex(0, this.slices.make());\n\t\tdataItem.set(\"slice\", slice);\n\t\tslice._setSoft(\"fill\", dataItem.get(\"fill\"));\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\t\tlabel.addTag(\"flow\");\n\t\tlabel.addTag(\"chord\");\n\t\tlabel.addTag(\"node\");\n\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tnode.events.on(\"dragstart\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\t\t\tif (this.flow) {\n\t\t\t\tthis._dAngle = this.flow.get(\"startAngle\", 0) - angle;\n\t\t\t}\n\t\t})\n\n\t\tnode.events.on(\"dragged\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\n\t\t\tnode.setAll({ x: 0, y: 0 });\n\t\t\tif (this.flow) {\n\t\t\t\tthis.flow.set(\"startAngle\", angle + this._dAngle);\n\t\t\t}\n\t\t})\n\n\t\tlabel._setDataItem(dataItem);\n\t\tslice._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (slice) {\n\t\t\t\t\t\tconst radius = slice.get(\"radius\", 0);\n\t\t\t\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\t\t\t\tconst bulletRadius = innerRadius + (radius - innerRadius) * locationY;\n\t\t\t\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\t\t\t\tsprite.setAll({ x: bulletRadius * $math.cos(angle), y: bulletRadius * $math.sin(angle) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif(slice){\n\t\t\tslice.set(\"fill\", dataItem.get(\"fill\"));\n\t\t}\n\t}\t\t\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tthis.slices.removeValue(slice);\n\t\t\tslice.dispose();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { IFlowDataItem, Flow } from \"./Flow\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport type { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport { Percent } from \"../../core/util/Percent\";\n\nexport interface IFlowLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t */\n\tfillStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n\t/**\n\t * Type of outline to use for links.\n\t */\n\tstrokeStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n}\n\nexport interface IFlowLinkPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A base class for a flow link.\n */\nexport abstract class FlowLink extends Graphics {\n\n\tpublic series: Flow | undefined;\n\n\tdeclare public _settings: IFlowLinkSettings;\n\tdeclare public _privateSettings: IFlowLinkPrivate;\n\n\tpublic static className: string = \"FlowLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([FlowLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowDataItem> | undefined;\n\n\tpublic _fillGradient: LinearGradient | undefined;\n\tpublic _strokeGradient: LinearGradient | undefined;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"fillStyle\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<IFlowDataItem>;\n\t\t\tif (series && dataItem) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic abstract getPoint(location: number): IOrientationPoint;\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\t\tlet position = 0.5;\n\t\tif (tooltipY instanceof Percent) {\n\t\t\tposition = tooltipY.value;\n\t\t}\n\n\t\treturn this.getPoint(position);\n\t}\n}\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IChordNodesDataItem } from \"./ChordNodes\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { Chord, IChordDataItem } from \"./Chord\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source data item.\n\t */\n\tsource?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * target data item.\n\t */\n\ttarget?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Radius of the link at the source.\n\t */\n\tsourceRadius?: number | Percent;\n\n\t/**\n\t * Radius of the link at the end (target).\n\t */\n\ttargetRadius?: number | Percent;\n\n}\n\nexport interface IChordLinkPrivate extends IFlowLinkPrivate {\n}\n\n/**\n * A link element used in [[Chord]] chart.\n */\nexport class ChordLink extends FlowLink {\n\n\tpublic _p0: IPoint | undefined;\n\tpublic _p1: IPoint | undefined;\n\n\tpublic _type: \"line\" | \"curve\" | undefined;\n\n\tdeclare public _settings: IChordLinkSettings;\n\tdeclare public _privateSettings: IChordLinkPrivate;\n\n\tpublic static className: string = \"ChordLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ChordLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDataItem> | undefined;\n\n\tdeclare public series: Chord | undefined;\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._p0 && this._p1) {\n\t\t\tif (this._type === \"line\") {\n\t\t\t\tlet p = $math.getPointOnLine(this._p0, this._p1, location);\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(this._p0, this._p1) };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet p0 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.max(0, location - 0.01));\n\t\t\t\tlet p1 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.min(1, location + 0.01));\n\t\t\t\tlet p = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, location);\n\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { chord, ribbon, RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\nimport { ascending, descending } from \"d3\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { ChordNodes, IChordNodesDataItem } from \"./ChordNodes\";\nimport { ChordLink } from \"./ChordLink\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface IChordDataItem extends IFlowDataItem {\n\n\t/**\n\t * A link element.\n\t */\n\tlink: ChordLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<IChordNodesDataItem>;\n\n}\n\nexport interface IChordSettings extends IFlowSettings {\n\n\t/**\n\t * Angle of a gap between each node, in degrees.\n\t *\n\t * @default 1\n\t */\n\tpadAngle?: number;\n\n\t/**\n\t * Radius of the diagram in percent or pixels.\n\t *\n\t * If set in percent, it will be relative to the whole area available for\n\t * the series.\n\t *\n\t * @default 90%\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Starting angle in degrees.\n\t *\n\t * @default 0\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"descending\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n}\n\nexport interface IChordPrivate extends IFlowPrivate {\n}\n\nexport interface IChordEvents extends IFlowEvents {\n}\n\n/**\n * Regular chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Chord extends Flow {\n\n\tpublic static className: string = \"Chord\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Chord.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLink>\n\t */\n\tpublic readonly links: ListTemplate<ChordLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\t/**\n\t * A series for all chord nodes.\n\t *\n\t * @default ChordNodes.new()\n\t */\n\tpublic readonly nodes: ChordNodes = this.children.push(ChordNodes.new(this._root, {}));\n\n\tdeclare public _settings: IChordSettings;\n\tdeclare public _privateSettings: IChordPrivate;\n\tdeclare public _dataItemSettings: IChordDataItem;\n\tdeclare public _events: IChordEvents;\n\n\tpublic _d3chord = chord();\n\tpublic _chordLayout: { source: { index: number, startAngle: number, endAngle: number, value: number }, target: { index: number, startAngle: number, endAngle: number, value: number } }[] = [];\n\tpublic _ribbon = ribbon();\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\"]);\n\t\tthis.linksContainer.setAll({ x: p50, y: p50 })\n\t\tthis.bulletsContainer.setAll({ x: p50, y: p50 });\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _fixRibbon(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>) {\n\t\tribbon.startAngle((d) => {\n\t\t\treturn d.startAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\n\t\tribbon.endAngle((d) => {\n\t\t\treturn d.endAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLink {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tthis.links.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\t\tlink.series = this;\n\t\treturn link;\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\t\t\tlet outgoing = sourceDataItem.get(\"outgoingLinks\");\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 0;\n\t\t\t\tif (outgoing) {\n\t\t\t\t\t$array.each(outgoing, (outgoingLink) => {\n\t\t\t\t\t\tif (outgoingLink.get(\"target\") === targetDataItem) {\n\t\t\t\t\t\t\tvalue = outgoingLink.get(\"valueWorking\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet valueSum = this.getPrivate(\"valueSum\", 0);\n\t\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\t\tif(value > 0 && minSize > 0){\n\t\t\t\t\t\t\tif(value < valueSum * minSize){\n\t\t\t\t\t\t\t\tvalue = valueSum * minSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._fixRibbon(this._ribbon);\n\n\t\tlet chordChanged = false;\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"padAngle\") || this.isDirty(\"startAngle\")) {\n\n\t\t\tconst matrix = this._makeMatrix();\n\n\t\t\tthis._d3chord.padAngle(this.get(\"padAngle\", 0) * $math.RADIANS);\n\t\t\tconst sort = this.get(\"sort\");\n\n\t\t\tif (sort === \"ascending\") {\n\t\t\t\tthis._d3chord.sortGroups(ascending);\n\t\t\t}\n\t\t\telse if (sort === \"descending\") {\n\t\t\t\tthis._d3chord.sortGroups(descending);\n\t\t\t}\n/*\n\t\t\tthis._d3chord.sortSubgroups((a, b)=>{\n\t\t\t\tif (a != Math.round(a)) return false\n\t\t\t\tif (b != Math.round(b)) return true\n\t\t\t\treturn b < a ? -1 : b > a ? 1 : 0;\n\t\t\t})\n*/\n\t\t\tthis._chordLayout = this._d3chord(matrix);\n\n\t\t\tchordChanged = true;\n\t\t}\n\n\t\tif (chordChanged || this.isDirty(\"radius\") || this.isDirty(\"nodeWidth\")) {\n\t\t\tlet radius = $utils.relativeToValue(this.get(\"radius\", 0), Math.min(this.innerWidth(), this.innerHeight())) / 2;\n\n\t\t\tlet i = 0;\n\n\t\t\tconst chordStartAngle = this.get(\"startAngle\", 0);\n\t\t\tconst nodeWidth = this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\n\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\tconst chordGroup = (this._chordLayout as any).groups[i];\n\t\t\t\tconst startAngle = chordGroup.startAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tconst endAngle = chordGroup.endAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tslice.setAll({ radius: radius, innerRadius: radius - nodeWidth, startAngle: startAngle as number, arc: endAngle - startAngle })\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tlabel.setAll({ labelAngle: startAngle + (endAngle - startAngle) / 2 });\n\t\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\t\tlabel.setPrivate(\"innerRadius\", 0.1);\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tconst linkRadius = radius - this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this._chordLayout, (chord) => {\n\n\t\t\t\tlet dataItem = this._linksByIndex[chord.source.index + \"_\" + chord.target.index];\n\n\t\t\t\tif (!dataItem) {\n\t\t\t\t\tdataItem = this._linksByIndex[chord.target.index + \"_\" + chord.source.index];\n\t\t\t\t}\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tthis._getLinkPoints(link, linkRadius, chord);\n\t\t\t\t\tthis._updateLink(this._ribbon, link, linkRadius, chord);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tconst source = chordLayoutItem.source;\n\t\tconst target = chordLayoutItem.target;\n\n\t\tconst chordStartAngle = this.get(\"startAngle\", 0) * $math.RADIANS;\n\n\t\tif (source && target) {\n\t\t\tconst startAngle0 = source.startAngle;\n\t\t\tconst endAngle0 = source.endAngle\n\t\t\tconst angle0 = startAngle0 + (endAngle0 - startAngle0) / 2 + chordStartAngle;\n\n\t\t\tconst startAngle1 = target.startAngle;\n\t\t\tconst endAngle1 = target.endAngle\n\t\t\tconst angle1 = startAngle1 + (endAngle1 - startAngle1) / 2 + chordStartAngle;\n\n\t\t\tlink._p0 = { x: linkRadius * Math.cos(angle0), y: linkRadius * Math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * Math.cos(angle1), y: linkRadius * Math.sin(angle1) };\n\t\t}\n\t}\n\n\tprotected _updateLink(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tif (chordLayoutItem) {\n\t\t\tribbon.sourceRadius($utils.relativeToValue(link.get(\"sourceRadius\", p100), linkRadius));\n\t\t\tribbon.targetRadius($utils.relativeToValue(link.get(\"targetRadius\", p100), linkRadius));\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tribbon.context(display as any);\n\t\t\t\tribbon(chordLayoutItem);\n\t\t\t})\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { ChordDirected, IChordDirectedDataItem } from \"./ChordDirected\";\n\nimport { ChordLink, IChordLinkPrivate, IChordLinkSettings } from \"./ChordLink\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface IChordLinkDirectedSettings extends IChordLinkSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * @default 10\n\t */\n\theadRadius?: number;\n\n}\n\nexport interface IChordLinkDirectedPrivate extends IChordLinkPrivate {\n}\n\n/**\n * A link element used in [[ChordDirected]] chart.\n */\nexport class ChordLinkDirected extends ChordLink {\n\tdeclare public _settings: IChordLinkDirectedSettings;\n\tdeclare public _privateSettings: IChordLinkDirectedPrivate;\n\n\tpublic static className: string = \"ChordLinkDirected\";\n\tpublic static classNames: Array<string> = ChordLink.classNames.concat([ChordLinkDirected.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDirectedDataItem> | undefined;\n\n\tdeclare public series: ChordDirected | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"link\", \"directed\"]);\n\n\t\tsuper._afterNew();\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\nimport { chordDirected, ribbonArrow, ribbon, RibbonArrowGenerator, Ribbon, RibbonSubgroup } from \"d3-chord\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordDirectedDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordDirectedSettings extends IChordSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * Set to `null` to disable arrowheads.\n\t *\n\t * @default 10\n\t */\n\tlinkHeadRadius?: number | undefined;\n\n}\n\nexport interface IChordDirectedPrivate extends IChordPrivate {\n}\n\nexport interface IChordDirectedEvents extends IChordEvents {\n}\n\n/**\n * Directed chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordDirected extends Chord {\n\n\tpublic static className: string = \"ChordDirected\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordDirected.className]);\n\n\tdeclare public _settings: IChordDirectedSettings;\n\tdeclare public _privateSettings: IChordDirectedPrivate;\n\tdeclare public _dataItemSettings: IChordDirectedDataItem;\n\tdeclare public _events: IChordDirectedEvents;\n\n\tpublic _d3chord = chordDirected();\n\tpublic _ribbonArrow: RibbonArrowGenerator<any, Ribbon, RibbonSubgroup> = ribbonArrow();\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLinkDirected>\n\t */\n\tpublic readonly links: ListTemplate<ChordLinkDirected> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLinkDirected {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\n\t\tlink.series = this;\n\n\t\treturn link;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\n\t\tsuper._afterNew();\n\t\tthis._markDirtyKey(\"linkHeadRadius\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst linkHeadRadius = \"linkHeadRadius\";\n\t\tif (this.isDirty(linkHeadRadius)) {\n\t\t\tconst headRadius = this.get(linkHeadRadius);\n\t\t\tif (headRadius == null) {\n\t\t\t\tthis._ribbon = ribbon();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ribbon = ribbonArrow();\n\t\t\t\tribbon.headRadius(headRadius);\n\t\t\t\tthis._ribbon = ribbon;\n\t\t\t}\n\t\t}\n\n\t\tsuper._prepareChildren();\n\t}\n}\n","import type { ChordLink } from \"./ChordLink\";\nimport type { RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordNonRibbonDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordNonRibbonSettings extends IChordSettings {\n\n\t/**\n\t * Type of the link:\n\t *\n\t * `\"curve\"` (default) will display link as a curved line.\n\t * `\"line\"` will display link as a straight line.\n\t *\n\t * @default \"curve\"\n\t */\n\tlinkType?: \"curve\" | \"line\"\n\n}\n\nexport interface IChordNonRibbonPrivate extends IChordPrivate {\n}\n\nexport interface IChordNonRibbonEvents extends IChordEvents {\n}\n\n/**\n * Chord series with think line links.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordNonRibbon extends Chord {\n\n\tpublic static className: string = \"ChordNonRibbon\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordNonRibbon.className]);\n\n\tdeclare public _settings: IChordNonRibbonSettings;\n\tdeclare public _privateSettings: IChordNonRibbonPrivate;\n\tdeclare public _dataItemSettings: IChordNonRibbonDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"basic\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 1;\n\n\t\t\t\tif (sourceDataItem === targetDataItem) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tprotected _updateLink(_ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, _linkRadius: number, chordLayoutItem: any) {\n\t\tlink._type = this.get(\"linkType\");\n\t\tif (chordLayoutItem) {\n\t\t\tconst linkType = this.get(\"linkType\");\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tlet p0 = link._p0;\n\t\t\t\tlet p1 = link._p1;\n\t\t\t\tif (p0 && p1) {\n\t\t\t\t\tdisplay.moveTo(p0.x, p0.y);\n\t\t\t\t\tif (linkType == \"line\") {\n\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdisplay.quadraticCurveTo(0, 0, p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, _chordLayoutItem: any) {\n\t\tconst source = link.get(\"source\");\n\t\tconst target = link.get(\"target\");\n\n\t\tif (source && target) {\n\n\t\t\tconst sourceSlice = source.get(\"slice\");\n\t\t\tconst targetSlice = target.get(\"slice\");\n\n\t\t\tconst startAngle0 = sourceSlice.get(\"startAngle\", 0);\n\t\t\tconst arc0 = sourceSlice.get(\"arc\", 0)\n\t\t\tconst angle0 = startAngle0 + arc0 / 2;\n\n\t\t\tconst startAngle1 = targetSlice.get(\"startAngle\", 0);\n\t\t\tconst arc1 = targetSlice.get(\"arc\", 0)\n\t\t\tconst angle1 = startAngle1 + arc1 / 2;\n\n\t\t\tlink._p0 = { x: linkRadius * $math.cos(angle0), y: linkRadius * $math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * $math.cos(angle1), y: linkRadius * $math.sin(angle1) };\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey } from \"./Sankey\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nexport interface ISankeyNodesDataItem extends IFlowNodesDataItem {\n\trectangle: RoundedRectangle;\n}\n\nexport interface ISankeyNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface ISankeyNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface ISankeyNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Sankey]] series.\n */\nexport class SankeyNodes extends FlowNodes {\n\tpublic static className: string = \"SankeyNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([SankeyNodes.className]);\n\n\tdeclare public _settings: ISankeyNodesSettings;\n\tdeclare public _privateSettings: ISankeyNodesPrivate;\n\tdeclare public _dataItemSettings: ISankeyNodesDataItem;\n\tdeclare public _events: ISankeyNodesEvents;\n\n\t/**\n\t * List of rectangle elements.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, { themeTags: [\"shape\"] }, [this.rectangles.template])\n\t);\n\n\t/**\n\t * Related [[Sankey]] series.\n\t */\n\tpublic flow: Sankey | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst flow = this.flow;\n\n\t\tconst node = super.makeNode(dataItem, \"sankey\");\n\n\t\tconst rectangle = node.children.insertIndex(0, this.rectangles.make());\n\t\tthis.rectangles.push(rectangle);\n\t\trectangle._setSoft(\"fill\", dataItem.get(\"fill\"));\n\t\tdataItem.set(\"rectangle\", rectangle);\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\tconst d3SankeyNode = (node.dataItem as DataItem<ISankeyNodesDataItem>).get(\"d3SankeyNode\");\n\t\t\tif (d3SankeyNode) {\n\t\t\t\tif (flow) {\n\t\t\t\t\tif (flow.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t\t\td3SankeyNode.x0 = node.x();\n\t\t\t\t\t\td3SankeyNode.y0 = node.y();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td3SankeyNode.x0 = node.y();\n\t\t\t\t\t\td3SankeyNode.y0 = node.x();\n\t\t\t\t\t}\n\n\t\t\t\t\tflow.updateSankey();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\n\t\tif (flow) {\n\t\t\tlabel.addTag(flow.get(\"orientation\", \"\"));\n\t\t}\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tlabel._setDataItem(dataItem);\n\t\trectangle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\tconst node = dataItem.get(\"node\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (rectangle) {\n\t\t\t\t\t\tsprite.setAll({ x: node.x() + rectangle.width() * locationX, y: node.y() + rectangle.height() * locationY });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet rectangle = dataItem.get(\"rectangle\");\n\t\tif (rectangle) {\n\t\t\tthis.rectangles.removeValue(rectangle);\n\t\t\trectangle.dispose();\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tif(rectangle){\n\t\t\trectangle.set(\"fill\", dataItem.get(\"fill\"));\n\t\t}\n\t}\t\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey, ISankeyDataItem } from \"./Sankey\";\nimport type { ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport type { IOrientationPoint } from \"../../core/util/IPoint\";\n\nimport { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface ISankeyLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Color_mode} for more info\n\t * @default \"gradient\"\n\t */\n\tfillStyle?: \"solid\" | \"gradient\" | \"source\" | \"target\";\n\n\t/**\n\t * A relative distance from node for link \"elbow\" (bend point).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Bend_point} for more info\n\t * @default 0.2\n\t */\n\tcontrolPointDistance?: number;\n\n}\n\nexport interface ISankeyLinkPrivate extends IFlowLinkPrivate {\n\n\t/**\n\t * Link orientation.\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport class SankeyLink extends FlowLink {\n\tdeclare public _settings: ISankeyLinkSettings;\n\tdeclare public _privateSettings: ISankeyLinkPrivate;\n\n\tpublic static className: string = \"SankeyLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([SankeyLink.className]);\n\n\tdeclare protected _dataItem: DataItem<ISankeyDataItem> | undefined;\n\n\tdeclare public series: Sankey | undefined;\n\n\tprotected _svgPath: SVGPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\tprotected _totalLength: number = 0;\n\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"orientation\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem && series) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\n\t\tconst target = this.get(\"target\");\n\t\tconst source = this.get(\"source\");\n\n\t\tlet sourceNode: FlowNode | undefined;\n\t\tlet targetNode: FlowNode | undefined;\n\n\t\tif (source && target) {\n\t\t\tthis._clear = true;\n\t\t\tsourceNode = source.get(\"node\");\n\t\t\ttargetNode = target.get(\"node\");\n\n\t\t\tlet x0 = 0;\n\t\t\tlet x1 = 0;\n\t\t\tlet y0 = 0;\n\t\t\tlet y1 = 0;\n\n\t\t\tlet xt0 = 0;\n\t\t\tlet yt0 = 0;\n\n\t\t\tlet xt1 = 0;\n\t\t\tlet yt1 = 0;\n\n\t\t\tlet xb0 = 0;\n\t\t\tlet xb1 = 0;\n\n\t\t\tlet yb0 = 0;\n\t\t\tlet yb1 = 0;\n\n\t\t\tlet xm0 = 0;\n\t\t\tlet xm1 = 0;\n\n\t\t\tlet ym0 = 0;\n\t\t\tlet ym1 = 0;\n\n\t\t\tlet angle0 = 0;\n\t\t\tlet angle1 = 0;\n\n\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst d3SankeyLink = dataItem.get(\"d3SankeyLink\");\n\t\t\t\tif (d3SankeyLink) {\n\n\t\t\t\t\tlet w = d3SankeyLink.width || 0;\n\n\t\t\t\t\tlet orientation = this.getPrivate(\"orientation\");\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\ty0 = sourceNode.y();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\ty1 = targetNode.y();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tangle0 = 90;\n\t\t\t\t\t\tangle1 = 90;\n\n\t\t\t\t\t\tx0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\tx1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tif (y1 < y0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\tx0 = x1;\n\t\t\t\t\t\t\ty0 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\tx1 = x0;\n\t\t\t\t\t\t\ty1 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\txt0 = x0 - w / 2;\n\t\t\t\t\t\tyt0 = y0;\n\n\t\t\t\t\t\txt1 = x1 - w / 2;\n\t\t\t\t\t\tyt1 = y1;\n\n\t\t\t\t\t\txb0 = x0 + w / 2;\n\t\t\t\t\t\txb1 = x1 + w / 2;\n\n\t\t\t\t\t\tyb0 = y0;\n\t\t\t\t\t\tyb1 = y1;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\tx0 = sourceNode.x();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\tx1 = targetNode.x();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\ty1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tif (x1 < x0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\ty0 = y1;\n\t\t\t\t\t\t\tx0 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\ty1 = y0;\n\t\t\t\t\t\t\tx1 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\txt0 = x0;\n\t\t\t\t\t\tyt0 = y0 - w / 2;\n\n\t\t\t\t\t\txt1 = x1;\n\t\t\t\t\t\tyt1 = y1 - w / 2;\n\n\t\t\t\t\t\txb0 = x0;\n\t\t\t\t\t\txb1 = x1;\n\n\t\t\t\t\t\tyb0 = y0 + w / 2;\n\t\t\t\t\t\tyb1 = y1 + w / 2;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\n\t\t\t\t\t\txt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\n\t\t\t\t\t\tyt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\n\t\t\t\t\t\txb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\n\t\t\t\t\t\tyb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cpd = this.get(\"controlPointDistance\", 0.2);\n\t\t\t\t\tcpd = Math.min(0.4999, cpd);\n\n\t\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\n\n\t\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(angle0);\n\t\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tkxt0 += dx / 2;\n\t\t\t\t\tkyt0 += dy / 2;\n\n\t\t\t\t\tkxt1 += dx / 2;\n\t\t\t\t\tkyt1 += dy / 2;\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tkyt0 = Math.min(yt1, Math.max(yt0 + 1, kyt0));\n\t\t\t\t\t\tkyb0 = Math.min(yb1, Math.max(yb0 + 1, kyb0));\n\n\t\t\t\t\t\tkyt1 = Math.max(yt0, Math.min(yt1 - 1, kyt1));\n\t\t\t\t\t\tkyb1 = Math.max(yb0, Math.min(yb1 - 1, kyb1));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tkxt0 = Math.min(xt1, Math.max(xt0 + 1, kxt0));\n\t\t\t\t\t\tkxb0 = Math.min(xb1, Math.max(xb0 + 1, kxb0));\n\n\t\t\t\t\t\tkxt1 = Math.max(xt0, Math.min(xt1 - 1, kxt1));\n\t\t\t\t\t\tkxb1 = Math.max(xb0, Math.min(xb1 - 1, kxb1));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet segment = [[xt0, yt0, xb0, yb0], [kxt0, kyt0, kxb0, kyb0], [kxt1, kyt1, kxb1, kyb1], [xt1, yt1, xb1, yb1]];\n\n\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\tconst series = this.series!;\n\t\t\t\t\t\tseries._fillGenerator.context(display as any);\n\t\t\t\t\t\tseries._fillGenerator(segment as [number, number][]);\n\t\t\t\t\t})\n\n\t\t\t\t\tlet middleSegment = [[xm0, ym0], [kxm0, kym0], [kxm1, kym1], [xm1, ym1]];\n\n\t\t\t\t\tconst path = this.series!._strokeGenerator(middleSegment as [number, number][]);\n\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tthis._svgPath.setAttribute(\"d\", path);\n\t\t\t\t\t\tthis._totalLength = this._svgPath.getTotalLength();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.series && this.dataItem) {\n\t\t\tthis.series._positionBullets(this.dataItem as any);\n\t\t}\n\t}\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._svgPath) {\n\t\t\tif (this._svgPath.getAttribute(\"d\")) {\n\t\t\t\tlet p0 = this._svgPath.getPointAtLength(location * this._totalLength - 0.1);\n\t\t\t\tlet p1 = this._svgPath.getPointAtLength(location * this._totalLength + 0.1);\n\t\t\t\tlet p = this.toGlobal(this._svgPath.getPointAtLength(location * this._totalLength));\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 }\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\treturn this.toLocal(super._getTooltipPoint());\n\t}\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { SankeyNodes, ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport { SankeyLink } from \"./SankeyLink\";\nimport { area, line } from \"d3-shape\";\nimport { curveMonotoneXTension } from \"../../core/render/MonotoneXTension\";\nimport { curveMonotoneYTension } from \"../../core/render/MonotoneYTension\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3sankey from \"d3-sankey\";\n\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nexport interface ISankeyDataItem extends IFlowDataItem {\n\n\t/**\n\t * Link element.\n\t */\n\tlink: SankeyLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<ISankeyNodesDataItem>;\n\n}\n\nexport interface ISankeySettings extends IFlowSettings {\n\n\t/**\n\t * Orientation of the series.\n\t *\n\t * @default \"horizontal\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Alignment of nodes.\n\t *\n\t * @default \"left\"\n\t */\n\tnodeAlign?: \"left\" | \"right\" | \"justify\" | \"center\"\n\n\t/**\n\t * Tension setting of the link curve.\n\t *\n\t * Accepts values from `0` to `1`.\n\t *\n\t * `1` will result in perfectly straight lines.\n\t *\n\t * @default 0.5\n\t */\n\tlinkTension?: number;\n\n\t/**\n\t * A custom function to use when sorting nodes.\n\t *\n\t * @todo test\n\t * @ignore\n\t */\n\tnodeSort?: (a: d3sankey.SankeyNodeMinimal<{}, {}>, b: d3sankey.SankeyNodeMinimal<{}, {}>) => number | null;\n\n\t/**\n\t * A custom function to use when sorting links.\n\t * \n\t * Use `null` to sort links exactly the way they are presented in data.\n\t * \n\t * @since 5.4.4\n\t */\n\tlinkSort?: null | ((a: d3sankey.SankeyLinkMinimal<{}, {}>, b: d3sankey.SankeyLinkMinimal<{}, {}>) => number | null);\n\n}\n\nexport interface ISankeyPrivate extends IFlowPrivate {\n}\n\nexport interface ISankeyEvents extends IFlowEvents {\n}\n\n/**\n * Sankey series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Sankey extends Flow {\n\n\tpublic static className: string = \"Sankey\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Sankey.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<SankeyLink>\n\t */\n\tpublic readonly links: ListTemplate<SankeyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => SankeyLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"sankey\", this._settings.orientation || \"horizontal\"]);\n\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A series representing sankey nodes.\n\t *\n\t * @default SankeyNodes.new()\n\t */\n\tpublic readonly nodes: SankeyNodes = this.children.push(SankeyNodes.new(this._root, {}));\n\n\tdeclare public _settings: ISankeySettings;\n\tdeclare public _privateSettings: ISankeyPrivate;\n\tdeclare public _dataItemSettings: ISankeyDataItem;\n\tdeclare public _events: ISankeyEvents;\n\n\tpublic _d3Sankey = d3sankey.sankey();\n\tpublic _d3Graph: d3sankey.SankeyGraph<{}, {}> | undefined;\n\n\tpublic _fillGenerator = area();\n\tpublic _strokeGenerator = line();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): SankeyLink {\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\n\t\tconst link = this.links.make();\n\n\t\tif (source.get(\"unknown\")) {\n\t\t\tlink.addTag(\"source\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tif (target.get(\"unknown\")) {\n\t\t\tlink.addTag(\"target\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.linksContainer.children.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", source);\n\t\tlink.set(\"target\", target);\n\t\tlink.series = this;\n\n\t\tthis.links.push(link);\n\n\t\treturn link;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateSankey() {\n\t\tconst d3Graph = this._d3Graph;\n\t\tif (d3Graph) {\n\t\t\tthis._d3Sankey.update(d3Graph);\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\tlink.markDirty();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateLinkColor(dataItem);\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn bullet.get(\"locationY\", 0);\n\t\t}\n\t\telse {\n\t\t\treturn bullet.get(\"locationX\", 0);\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tlet vertical = false;\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tconst linkTension = this.get(\"linkTension\", 0.5);\n\t\t\tif (vertical) {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"nodePadding\") || this.isDirty(\"nodeWidth\") || this.isDirty(\"nodeAlign\") || this.isDirty(\"nodeSort\") || this.isDirty(\"orientation\") || this.isDirty(\"linkTension\") || this.isDirty(\"linkSort\")) {\n\t\t\tif (this._nodesData.length > 0) {\n\t\t\t\tconst d3Sankey = this._d3Sankey;\n\t\t\t\tlet w = this.innerWidth();\n\t\t\t\tlet h = this.innerHeight();\n\n\t\t\t\tif (vertical) {\n\t\t\t\t\t[w, h] = [h, w];\n\t\t\t\t}\n\n\t\t\t\td3Sankey.size([w, h]);\n\t\t\t\td3Sankey.nodePadding(this.get(\"nodePadding\", 10));\n\t\t\t\td3Sankey.nodeWidth(this.get(\"nodeWidth\", 10));\n\t\t\t\td3Sankey.nodeSort(this.get(\"nodeSort\", null) as any);\n\t\t\t\t(d3Sankey as any).linkSort(this.get(\"linkSort\") as any);\n\n\t\t\t\tswitch (this.get(\"nodeAlign\")) {\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyRight);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"justify\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyJustify);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyCenter);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyLeft);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._d3Graph = d3Sankey({ nodes: this._nodesData, links: this._linksData });\n\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\t\tlink.markDirty();\n\t\t\t\t})\n\n\t\t\t\tconst d3Graph = this._d3Graph;\n\n\t\t\t\tif (d3Graph) {\n\t\t\t\t\tconst nodes = d3Graph.nodes;\n\n\t\t\t\t\t$array.each(nodes, (d3SankeyNode) => {\n\t\t\t\t\t\tconst dataItem = (d3SankeyNode as any).dataItem as DataItem<ISankeyNodesDataItem>;\n\t\t\t\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\t\t\t\tlet x0: number | undefined;\n\t\t\t\t\t\tlet x1: number | undefined;\n\t\t\t\t\t\tlet y0: number | undefined;\n\t\t\t\t\t\tlet y1: number | undefined;\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.y1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.x1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.x1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.y1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\t\t\t\tnode.setAll({ x: x0, y: y0, width: x1 - x0, height: y1 - y0 });\n\n\t\t\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\t\t\trectangle.setAll({ width: x1 - x0, height: y1 - y0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\r\nimport type { FlowNode } from \"./FlowNode\";\r\nimport type { ArcDiagram } from \"./ArcDiagram\";\r\n\r\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\r\nimport { Circle } from \"../../core/render/Circle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Label } from \"../../core/render/Label\";\r\n\r\nexport interface IArcDiagramNodesDataItem extends IFlowNodesDataItem {\r\n\r\n\t/**\r\n\t * Node [[Circle]] element.\r\n\t */\r\n\tcircle: Circle;\r\n\r\n\t/**\r\n\t * Node label element.\r\n\t */\r\n\tlabel: Label;\r\n}\r\n\r\nexport interface IArcDiagramNodesSettings extends IFlowNodesSettings { };\r\n\r\nexport interface IArcDiagramNodesPrivate extends IFlowNodesPrivate { };\r\n\r\nexport interface IArcDiagramNodesEvents extends IFlowNodesEvents { };\r\n\r\n/**\r\n * Holds instances of nodes for a [[ArcDiagram]] series.\r\n */\r\nexport class ArcDiagramNodes extends FlowNodes {\r\n\tpublic static className: string = \"ArcDiagramNodes\";\r\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ArcDiagramNodes.className]);\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t *\r\n\t * @default new ListTemplate<Label>\r\n\t */\r\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Label._new(this._root, {}, [this.labels.template])\r\n\t);\r\n\r\n\tdeclare public _settings: IArcDiagramNodesSettings;\r\n\tdeclare public _privateSettings: IArcDiagramNodesPrivate;\r\n\tdeclare public _dataItemSettings: IArcDiagramNodesDataItem;\r\n\tdeclare public _events: IArcDiagramNodesEvents;\r\n\r\n\t/**\r\n\t * Related [[ArcDiagram]] series.\r\n\t */\r\n\tpublic flow: ArcDiagram | undefined;\r\n\r\n\tprotected _dAngle: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t *\r\n\t * @default new ListTemplate<Slice>\r\n\t */\r\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Circle._new(this._root, { themeTags: [\"shape\"] }, [this.circles.template])\r\n\t);\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\r\n\t\tconst node = super.makeNode(dataItem, \"ArcDiagram\");\r\n\r\n\t\tconst circle = node.children.insertIndex(0, this.circles.make());\r\n\t\tdataItem.set(\"circle\", circle);\r\n\t\tcircle._setSoft(\"fill\", dataItem.get(\"fill\"));\r\n\r\n\t\tconst label = this.labels.make();\r\n\t\tthis.labels.push(label);\r\n\t\tlabel.addTag(\"flow\");\r\n\t\tlabel.addTag(\"arcdiagram\");\r\n\t\tlabel.addTag(\"node\");\r\n\r\n\t\tnode.children.push(label);\r\n\t\tdataItem.set(\"label\", label);\r\n\r\n\t\tlabel._setDataItem(dataItem);\r\n\t\tcircle._setDataItem(dataItem);\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tlet circle = dataItem.get(\"circle\");\r\n\t\tif (circle) {\r\n\t\t\tthis.circles.removeValue(circle);\r\n\t\t\tcircle.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tconst circle = dataItem.get(\"circle\");\r\n\t\tif (circle) {\r\n\t\t\tcircle.set(\"fill\", dataItem.get(\"fill\"));\r\n\t\t}\r\n\t}\r\n}\r\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IArcDiagramNodesDataItem } from \"./ArcDiagramNodes\";\r\nimport type { ArcDiagram, IArcDiagramDataItem } from \"./ArcDiagram\";\r\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IArcDiagramLinkSettings extends IFlowLinkSettings {\r\n\r\n\t/**\r\n\t * Source data item.\r\n\t */\r\n\tsource?: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n\t/**\r\n\t * target data item.\r\n\t */\r\n\ttarget?: DataItem<IArcDiagramNodesDataItem>;\r\n}\r\n\r\nexport interface IArcDiagramLinkPrivate extends IFlowLinkPrivate {\r\n\t/**\r\n\t * Link orientation.\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n}\r\n\r\n/**\r\n * A link element used in [[ArcDiagram]] chart.\r\n */\r\nexport class ArcDiagramLink extends FlowLink {\r\n\r\n\tpublic _p0: IPoint | undefined;\r\n\tpublic _p1: IPoint | undefined;\r\n\tpublic _radius: number = 0;\r\n\r\n\tdeclare public _settings: IArcDiagramLinkSettings;\r\n\tdeclare public _privateSettings: IArcDiagramLinkPrivate;\r\n\r\n\tpublic static className: string = \"ArcDiagramLink\";\r\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ArcDiagramLink.className]);\r\n\r\n\tdeclare protected _dataItem: DataItem<IArcDiagramDataItem> | undefined;\r\n\r\n\tdeclare public series: ArcDiagram | undefined;\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"source\")) {\r\n\t\t\tconst source = this.get(\"source\");\r\n\t\t\tif (source) {\r\n\t\t\t\tconst sourceNode = source.get(\"node\");\r\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\t\t\tif (target) {\r\n\t\t\t\tconst targetNode = target.get(\"node\");\r\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isPrivateDirty(\"orientation\")) {\r\n\t\t\tconst series = this.series;\r\n\t\t\tconst dataItem = this.dataItem as DataItem<IArcDiagramDataItem>;\r\n\t\t\tif (dataItem && series) {\r\n\t\t\t\tseries._updateLinkColor(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.series && this.dataItem) {\r\n\t\t\tthis.series._positionBullets(this.dataItem as any);\r\n\t\t}\r\n\r\n\t\tif (this.get(\"strokeStyle\") == \"gradient\") {\r\n\t\t\tthis.set(\"isMeasured\", true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.set(\"isMeasured\", false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _draw() {\r\n\t\tconst target = this.get(\"target\");\r\n\t\tconst source = this.get(\"source\");\r\n\r\n\t\tif (source && target) {\r\n\t\t\tlet sourceNode = source.get(\"node\");\r\n\t\t\tlet targetNode = target.get(\"node\");\r\n\r\n\t\t\tconst x0 = sourceNode.x();\r\n\t\t\tconst y0 = sourceNode.y();\r\n\r\n\t\t\tconst x1 = targetNode.x();\r\n\t\t\tconst y1 = targetNode.y();\r\n\r\n\t\t\tthis._p0 = { x: x0, y: y0 };\r\n\t\t\tthis._p1 = { x: x1, y: y1 };\r\n\r\n\t\t\tlet radius = 0;\r\n\r\n\t\t\tif (this.getPrivate(\"orientation\") == \"vertical\") {\r\n\t\t\t\tradius = (y1 - y0) / 2;\r\n\t\t\t\tlet d = 1;\r\n\t\t\t\tif (y0 > y1) {\r\n\t\t\t\t\td = -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._display.arc(x0, y0 + radius, radius * d, -Math.PI / 2, Math.PI / 2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradius = (x1 - x0) / 2;\r\n\t\t\t\tlet d = 1;\r\n\t\t\t\tif (x0 > x1) {\r\n\t\t\t\t\td = -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis._display.arc(x0 + radius, y0, radius * d, -Math.PI, 0);\r\n\t\t\t}\r\n\t\t\tthis._radius = radius;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getPoint(location: number): IOrientationPoint {\r\n\t\tif (this._p0 && this._p1) {\r\n\t\t\tconst radius = this._radius;\r\n\r\n\t\t\tif (this.getPrivate(\"orientation\") == \"vertical\") {\r\n\t\t\t\tlet angle = -90 + 180 * location;\r\n\t\t\t\treturn { y: this._p0.y + radius + radius * $math.sin(angle), x: radius * $math.cos(angle), angle: angle + 90 };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet angle = 180 + 180 * location;\r\n\t\t\t\treturn { x: this._p0.x + radius + radius * $math.cos(angle), y: radius * $math.sin(angle), angle: angle + 90 };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\r\n\r\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { ArcDiagramNodes, IArcDiagramNodesDataItem } from \"./ArcDiagramNodes\";\r\nimport { ArcDiagramLink } from \"./ArcDiagramLink\";\r\nimport type { Easing } from \"../../core/util/Ease\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n\r\n\r\nexport interface IArcDiagramDataItem extends IFlowDataItem {\r\n\r\n\t/**\r\n\t * A link element.\r\n\t */\r\n\tlink: ArcDiagramLink;\r\n\r\n\t/**\r\n\t * Source node data item.\r\n\t */\r\n\tsource: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n\t/**\r\n\t * Target node data item.\r\n\t */\r\n\ttarget: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n}\r\n\r\nexport interface IArcDiagramSettings extends IFlowSettings {\r\n\t/**\r\n\t * Orientation of the series. This setting can not be changed after the chart is initialized.\r\n\t *\r\n\t * @default \"horizontal\"\r\n\t */\r\n\torientation: \"horizontal\" | \"vertical\";\r\n\r\n\t/**\r\n\t * Minimum radius of a nodes circle.\r\n\t * Maximum radius is computed based on available space\r\n\t * @default 5\r\n\t */\r\n\tminRadius?: number;\r\n\r\n\t/**\r\n\t * Defines Which value should be used when calculating circle radius. Use \"none\" if you want all circles to be the same.\r\n\t * @martynas: gal cia reik naudot radiusField, biski no idea.\r\n\t * @default \"sum\"\r\n\t */\r\n\tradiusKey?: \"sum\" | \"sumIncoming\" | \"sumOutgoing\" | \"none\";\r\n\r\n\t/**\r\n\t * Duration for all drill animations in milliseconds.\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use for drill animations.\r\n\t */\r\n\tanimationEasing?: Easing;\r\n}\r\n\r\nexport interface IArcDiagramPrivate extends IFlowPrivate {\r\n}\r\n\r\nexport interface IArcDiagramEvents extends IFlowEvents {\r\n}\r\n\r\n/**\r\n * Regular ArcDiagram series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\r\n * @important\r\n */\r\nexport class ArcDiagram extends Flow {\r\n\r\n\tpublic static className: string = \"ArcDiagram\";\r\n\tpublic static classNames: Array<string> = Flow.classNames.concat([ArcDiagram.className]);\r\n\r\n\t/**\r\n\t * List of link elements.\r\n\t *\r\n\t * @default new ListTemplate<ArcDiagramLink>\r\n\t */\r\n\tpublic readonly links: ListTemplate<ArcDiagramLink> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => ArcDiagramLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\r\n\t);\r\n\r\n\t/**\r\n\t * A series for all ArcDiagram nodes.\r\n\t *\r\n\t * @default ArcDiagramNodes.new()\r\n\t */\r\n\tpublic readonly nodes: ArcDiagramNodes = this.children.push(ArcDiagramNodes.new(this._root, {}));\r\n\r\n\tdeclare public _settings: IArcDiagramSettings;\r\n\tdeclare public _privateSettings: IArcDiagramPrivate;\r\n\tdeclare public _dataItemSettings: IArcDiagramDataItem;\r\n\tdeclare public _events: IArcDiagramEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"arcdiagram\", this._settings.orientation || \"horizontal\"]);\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis.nodes.children.push(this.bulletsContainer);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ArcDiagramLink {\r\n\t\tconst link = this.nodes.children.moveValue(this.links.make(), 0);\r\n\t\tthis.links.push(link);\r\n\t\tlink._setDataItem(dataItem);\r\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\r\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\r\n\t\tlink.series = this;\r\n\t\treturn link;\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"orientation\")) {\r\n\t\t\tlet width = 1;\r\n\t\t\tconst orientation = this.get(\"orientation\");\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tconst link = dataItem.get(\"link\");\r\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\r\n\t\t\t})\r\n\r\n\t\t\tif (orientation == \"vertical\") {\r\n\t\t\t\twidth = this.innerHeight();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twidth = this.innerWidth();\r\n\t\t\t}\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tlet low = Infinity;\r\n\t\t\tlet radiusKey = this.get(\"radiusKey\");\r\n\r\n\t\t\tif (radiusKey != \"none\") {\r\n\t\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(radiusKey + \"Working\" as any);\r\n\t\t\t\t\tsum += value;\r\n\t\t\t\t\tlow = Math.min(low, value);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tconst count = this.nodes.dataItems.length;\r\n\t\t\tconst nodePadding = this.get(\"nodePadding\", 10);\r\n\t\t\tconst minRadius = this.get(\"minRadius\", 5);\r\n\r\n\t\t\twidth = width - count * (nodePadding + minRadius * 2);\r\n\r\n\t\t\tif (width <= 0) {\r\n\t\t\t\twidth = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlet sumNoLow = sum - count * low;\r\n\t\t\tlet c = width / sumNoLow;\r\n\r\n\t\t\tlet prevCoord = 0;\r\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\r\n\t\t\tconst animationEasing = this.get(\"animationEasing\");\r\n\r\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(radiusKey + \"Working\" as any);\r\n\r\n\t\t\t\tconst node = dataItem.get(\"node\");\r\n\t\t\t\tlet radius = minRadius + c * (value - low) / 2;\r\n\r\n\t\t\t\tif (radiusKey == \"none\") {\r\n\t\t\t\t\tradius = minRadius + width / count / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (orientation == \"vertical\") {\r\n\t\t\t\t\tnode.set(\"x\", 0);\r\n\r\n\t\t\t\t\tconst y = prevCoord + nodePadding + radius;\r\n\t\t\t\t\tif (node.y() == 0) {\r\n\t\t\t\t\t\tnode.set(\"y\", y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.set(\"y\", 0);\r\n\t\t\t\t\tconst x = prevCoord + nodePadding + radius;\r\n\t\t\t\t\tif (node.x() == 0) {\r\n\t\t\t\t\t\tnode.set(\"x\", x);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevCoord = prevCoord + nodePadding + radius * 2;\r\n\t\t\t\tdataItem.get(\"circle\").set(\"radius\", radius);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper._updateLinkColor(dataItem);\r\n\t\tconst orientation = this.get(\"orientation\");\r\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\r\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\r\n\r\n\t\tif (orientation == \"vertical\") {\r\n\t\t\tif (fillGradient) {\r\n\t\t\t\tfillGradient.set(\"rotation\", 90);\r\n\t\t\t}\r\n\t\t\tif (strokeGradient) {\r\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (fillGradient) {\r\n\t\t\t\tfillGradient.set(\"rotation\", 0);\r\n\t\t\t}\r\n\t\t\tif (strokeGradient) {\r\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"],"names":["MonotoneXTension","constructor","context","tension","Object","defineProperty","this","_context","_tension","areaStart","_line","areaEnd","NaN","lineStart","_x0","_x1","_y0","_y1","_t0","_point","lineEnd","lineTo","point","slope2","closePath","x","y","t1","moveTo","slope3","curveMonotoneXTension","sign","that","x2","y2","h0","h1","s0","s1","p","Math","min","abs","t","h","t0","x0","y0","x1","y1","dx","bezierCurveTo","MonotoneYTension","curveMonotoneYTension","monotoneYTension","RadialLabel","Label","_afterNew","_textKeys","push","super","_makeText","_text","children","RadialText","new","_root","baseRadius","radiusPrivate","getPrivate","innerRadiusPrivate","get","$utils","radius","inside","_updateChildren","isDirty","isPrivateDirty","textType","orientation","labelAngle","$math","set","sin","cos","_display","angle","setAll","paddingTop","paddingBottom","paddingLeft","paddingRight","setRaw","_flipped","_dirty","rotation","p50","markDirtyPosition","markDirtyBounds","_updatePosition","dy","bounds","localBounds","w","right","left","bottom","top","centerX","Percent","value","text","classNames","concat","className","Text","_renderer","makeRadialText","textStyle","_beforeChanged","clear","startAngle","kerning","Slice","Graphics","arc","_getTooltipPoint","tooltipX","tooltipY","$type","innerRadius","ix","iy","_clear","_changed","generator","_generator","cornerRadius","outerRadius","endAngle","middleAngle","shiftRadius","Gradient","Entity","_afterNewApplyThemes","getFill","_target","addColorStop","_offset","_color","getBounds","target","gradientTarget","globalBounds","p0","toLocal","p1","p2","p3","max","getLocalBounds","LinearGradient","l","r","b","longer","gradient","createLinearGradient","stops","i","$array","stop","offset","length","opacity","color","lighten","Color","brighten","g","FlowDefaultTheme","Theme","setupDefaultRules","ic","interfaceColors","rule","bind","width","p100","height","hiddenSize","minSize","minHiddenValue","colors","ColorSet","legendLabelText","legendValueText","setStateOnChildren","cursorOverStyle","toggleKey","states","create","draggable","fill","populateText","fillStyle","strokeStyle","events","on","e","dataItem","outgoing","linkDataItem","link","hover","hideTooltip","incoming","rectangle","showTooltip","unhover","nodeAlign","linkTension","nodePadding","nodeWidth","cornerRadiusTL","cornerRadiusBL","cornerRadiusTR","cornerRadiusBR","controlPointDistance","fillOpacity","strokeOpacity","interactive","tooltipText","setColor","centerY","percent","padAngle","sort","linkHeadRadius","sourceRadius","targetRadius","headRadius","linkType","strokeWidth","minRadius","radiusKey","animationEasing","$ease","isMeasured","Flow","Series","Container","_defaultThemes","fields","nodes","flow","bulletsContainer","processDataItem","unknown","sourceId","sourceDataItem","getDataItemById","_index","data","id","targetId","targetDataItem","addOutgoingLink","addincomingLink","makeLink","sourceIndex","dataItems","indexOf","targetIndex","_linksByIndex","_updateLinkColor","_onDataClear","_userDataSet","_prepareChildren","valueLow","Infinity","valueHigh","valueSum","_valuesDirty","_nodesData","d3SankeyNode","sumIncoming","sumIncomingWorking","workingValue","sumOutgoing","sumOutgoingWorking","updateLegendValue","_linksData","valueWorking","d3SankeyLink","source","setPrivateRaw","sourceFill","targetFill","remove","_applyTemplates","_fillGradient","sourceStop","targetStop","undefined","_strokeGradient","disposeDataItem","links","removeValue","dispose","hideDataItem","duration","promises","_super","call","hiddenState","stateAnimationDuration","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","Promise","all","showDataItem","show","_positionBullet","bullet","sprite","getPoint","_getBulletLocation","pi","PI","halfPi","tau","epsilon","range","j","Array","from","_","k","chord","directed","transpose","sortGroups","sortSubgroups","sortChords","matrix","n","groupSums","groupIndex","chords","groups","Float64Array","a","subgroupIndex","filter","index","values","arguments","compare","slice","prototype","defaultSource","d","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","buffer","s","apply","ap","argv","sr","sa0","sa1","tr","ta0","ta1","path","tr2","ta2","quadraticCurveTo","constant","ribbonArrow","ascending","descending","number1","number2","map","type","Transform","scale","translate","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","rescaleY","toString","FlowNode","FlowNodes","ListTemplate","Template","_new","themeTags","labels","template","reset","name","next","node","makeNode","disabledField","dataContext","root","once","disableDataItem","themeTag","make","addTag","_setDataItem","series","isHidden","enableDataItem","_updateNodeColor","_dataItem","label","ChordNodes","slices","insertIndex","_setSoft","_dAngle","locationX","locationY","bulletRadius","FlowLink","position","ChordLink","_p0","_p1","_type","Chord","_settings","linksContainer","_fixRibbon","_makeMatrix","group","outgoingLink","_ribbon","chordChanged","_sizeDirty","_d3chord","_chordLayout","innerWidth","innerHeight","chordStartAngle","chordGroup","setPrivate","linkRadius","_getLinkPoints","_updateLink","chordLayoutItem","startAngle0","angle0","startAngle1","angle1","display","ChordLinkDirected","ChordDirected","_markDirtyKey","ChordNonRibbon","_linkRadius","_chordLayoutItem","sourceSlice","targetSlice","SankeyNodes","RoundedRectangle","rectangles","updateSankey","SankeyLink","document","createElementNS","sourceNode","_disposers","markDirty","targetNode","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","kxb0","kyb0","kxb1","kyb1","segment","_fillGenerator","middleSegment","_strokeGenerator","_svgPath","setAttribute","_totalLength","getTotalLength","_positionBullets","getAttribute","getPointAtLength","toGlobal","sum","valueof","targetDepth","depth","justify","sourceLinks","center","targetLinks","ascendingSourceBreadth","ascendingBreadth","ascendingTargetBreadth","defaultId","defaultNodes","graph","defaultLinks","find","nodeById","Error","computeLinkBreadths","_ref","Sankey","py","linkSort","align","iterations","sankey","_ref2","entries","Map","computeNodeLinks","_ref3","fixedValue","computeNodeValues","_ref4","current","Set","size","add","computeNodeDepths","_ref5","computeNodeHeights","columns","_ref6","kx","floor","layer","column","computeNodeLayers","c","ky","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","v","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","_ref7","update","nodeId","nodeSort","extent","d3sankey","area","line","d3Graph","_d3Graph","_d3Sankey","fillGradient","strokeGradient","vertical","curve","d3Sankey","ArcDiagramNodes","Circle","circles","circle","ArcDiagramLink","_draw","_radius","ArcDiagram","moveValue","low","count","prevCoord","animationDuration","atan2","sqrt","asin","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","padRadius","withPath","r0","a0","a1","da","a01","a11","a00","a10","da0","da1","rp","rc0","rc1","oc","x3","y3","x32","y32","intersect","ax","ay","bx","by","kc","acos","lc","centroid"],"sourceRoot":""}